import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "private/qinsightcategory_p.h"
        name: "QInsightCategory"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: [
            "QtInsightTracker/InsightCategory 1.0",
            "QtInsightTracker/InsightCategory 6.0"
        ]
        exportMetaObjectRevisions: [256, 1536]
        attachedType: "QInsightCategoryAttached"
    }
    Component {
        file: "private/qinsightcategory_p.h"
        name: "QInsightCategoryAttached"
        accessSemantics: "reference"
        prototype: "QObject"
        Property { name: "category"; type: "QString"; read: "category"; write: "setCategory"; index: 0 }
    }
    Component {
        file: "private/qinsighttrackerqml_p.h"
        name: "QInsightConfiguration"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: [
            "QtInsightTracker/InsightConfiguration 1.0",
            "QtInsightTracker/InsightConfiguration 6.0"
        ]
        exportMetaObjectRevisions: [256, 1536]
        Property { name: "server"; type: "QString"; read: "server"; write: "setServer"; index: 0 }
        Property { name: "token"; type: "QString"; read: "token"; write: "setToken"; index: 1 }
        Property {
            name: "deviceModel"
            type: "QString"
            read: "deviceModel"
            write: "setDeviceModel"
            index: 2
        }
        Property {
            name: "deviceVariant"
            type: "QString"
            read: "deviceVariant"
            write: "setDeviceVariant"
            index: 3
        }
        Property {
            name: "deviceScreenType"
            type: "QString"
            read: "deviceScreenType"
            write: "setDeviceScreenType"
            index: 4
        }
        Property { name: "appBuild"; type: "QString"; read: "appBuild"; write: "setAppBuild"; index: 5 }
        Property { name: "platform"; type: "QString"; read: "platform"; write: "setPlatform"; index: 6 }
        Property {
            name: "storageType"
            type: "QString"
            read: "storageType"
            write: "setStorageType"
            index: 7
        }
        Property {
            name: "storagePath"
            type: "QString"
            read: "storagePath"
            write: "setStoragePath"
            index: 8
        }
        Property {
            name: "storageSize"
            type: "int"
            read: "storageSize"
            write: "setStorageSize"
            index: 9
        }
        Property {
            name: "syncInterval"
            type: "int"
            read: "syncInterval"
            write: "setSyncInterval"
            index: 10
        }
        Property { name: "batchSize"; type: "int"; read: "batchSize"; write: "setBatchSize"; index: 11 }
        Property {
            name: "categories"
            type: "QStringList"
            read: "categories"
            write: "setCategories"
            index: 12
        }
        Property { name: "event"; type: "QStringList"; read: "events"; write: "setEvents"; index: 13 }
        Property { name: "userId"; type: "QString"; read: "userId"; write: "setUserId"; index: 14 }
    }
    Component {
        file: "private/qinsighttrackerqml_p.h"
        name: "QInsightTrackerQml"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: [
            "QtInsightTracker/InsightTracker 1.0",
            "QtInsightTracker/InsightTracker 6.0"
        ]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [256, 1536]
        Property {
            name: "enabled"
            type: "bool"
            read: "isEnabled"
            write: "setEnabled"
            notify: "enabledChanged"
            index: 0
        }
        Signal {
            name: "enabledChanged"
            Parameter { name: "enabled"; type: "bool" }
        }
        Method {
            name: "interaction"
            Parameter { name: "name"; type: "QString" }
            Parameter { name: "category"; type: "QString" }
        }
        Method {
            name: "interaction"
            isCloned: true
            Parameter { name: "name"; type: "QString" }
        }
        Method {
            name: "transition"
            Parameter { name: "name"; type: "QString" }
        }
        Method {
            name: "sendScreenView"
            Parameter { name: "name"; type: "QString" }
        }
        Method {
            name: "sendScreenView"
            Parameter { name: "name"; type: "QString" }
            Parameter { name: "contextKey"; type: "QString" }
            Parameter { name: "contextValue"; type: "double" }
        }
        Method {
            name: "sendClickEvent"
            Parameter { name: "name"; type: "QString" }
            Parameter { name: "category"; type: "QString" }
            Parameter { name: "x"; type: "int" }
            Parameter { name: "y"; type: "int" }
        }
        Method {
            name: "sendClickEvent"
            Parameter { name: "name"; type: "QString" }
            Parameter { name: "category"; type: "QString" }
            Parameter { name: "x"; type: "int" }
            Parameter { name: "y"; type: "int" }
            Parameter { name: "contextKey"; type: "QString" }
            Parameter { name: "contextValue"; type: "double" }
        }
        Method { name: "clearCache" }
        Method { name: "startNewSession" }
        Method { name: "isEnabled"; type: "bool" }
        Method {
            name: "setEnabled"
            Parameter { name: "enabled"; type: "bool" }
        }
    }
}
