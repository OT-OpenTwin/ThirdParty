<?xml version="1.0" encoding="UTF-8"?>
<protocol name="qt_toplevel_drag_v1">

  <copyright>
    Copyright 2022 David Redondo  &lt;kde@david-redondo.de&gt;

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice (including the next
    paragraph) shall be included in all copies or substantial portions of the
    Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.
  </copyright>

  <interface name="qt_toplevel_drag_manager_v1" version="1">
  <description summary="Move a window during a drag">
    This protocol enhances normal drag and drop with the ability to move a
    window at the same time. This allows having detachable windows that
    can also be reattached when dragged back to another window or some special
    zone.

    Warning! The protocol described in this file is currently in the testing
    phase. Backward compatible changes may be added together with the
    corresponding interface version bump. Backward incompatible changes can
    only be done by creating a new major version of the extension.
  </description>

    <request name="get_qt_toplevel_drag">
      <description summary="get an qt_toplevel_drag for a wl_data_source">
        Create an qt_toplevel_drag for a drag and drop operation that is going
        to be started with data_source.
        This request can only be made on sources used in drag-and-drop, so it
        must be performed before wl_data_device.start_drag. Attempting to use
        the source other than for drag-and-drop will raise an invalid_source error.
      </description>
      <arg name="id" type="new_id" interface="qt_toplevel_drag_v1"/>
      <arg name="data_source" type="object" interface="wl_data_source"/>
    </request>

    <request name="release" type="destructor" />

    <enum name="error">
      <entry name="invalid_source" value="0" summary="data_source already used for toplevel drag"/>
    </enum>
  </interface>

  <interface name="qt_toplevel_drag_v1" version="1">
    <description summary="Object representing a toplevel move during a drag">
    </description>

    <request name="attach">
      <description summary="Move a toplevel with the drag operation">
        Request that the window will be moved with the cursor during the drag operation. The offset
        describes how the toplevel will be positioned relative to the cursor hotspot
        in surface local coordinates.
        Issuing this request after the drag has ended will result in a drag_ended protocol error.
      </description>
      <arg name="toplevel" type="object" interface="xdg_toplevel" />
      <arg name="x_offset" type="int" summary="dragged surface x offset"/>
      <arg name="y_offset" type="int" summary="dragged surface y offset"/>
    </request>

    <request name="destroy" type="destructor">
      <description summary="destroy an qt_toplevel_drag object" />
    </request>

    <enum name="error">
      <entry name="drag_ended" value="0" summary="corresponding drag has ended" />
    </enum>
  </interface>
</protocol>
