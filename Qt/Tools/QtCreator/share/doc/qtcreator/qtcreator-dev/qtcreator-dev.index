<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE QDOCINDEX>
<INDEX url="" title="Extending Qt Creator Manual" version="" project="qtcreator-dev" indexTitle="Extending Qt Creator Manual">
    <namespace name="" status="active" access="public" module="qtcreator-dev">
        <page name="plugin-tests.html" href="plugin-tests.html" status="active" location="plugin-tests.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/plugin-tests.qdoc" lineno="4" documented="true" subtype="page" title="Adding Tests" fulltitle="Adding Tests" subtitle="">
            <contents name="setting-up-cmake" title="Setting up CMake" level="1"/>
            <contents name="plugin-tests" title="Plugin Tests" level="1"/>
            <contents name="auto-tests" title="Auto Tests" level="1"/>
        </page>
        <namespace name="Aggregation" href="aggregation.html" status="active" access="public" location="aggregate.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/aggregation/aggregate.h" lineno="14" documented="true" module="QtCreator" brief="Contains support for bundling related components, so that each component exposes the properties and behavior of the other components to the outside">
            <class threadsafety="thread safe" name="Aggregate" fullname="Aggregation::Aggregate" href="aggregation-aggregate.html" status="active" access="public" location="aggregate.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/aggregation/aggregate.h" lineno="16" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Defines a collection of related components that can be viewed as a unit">
                <function name="Aggregate" fullname="Aggregation::Aggregate::Aggregate" href="aggregation-aggregate.html#Aggregate" status="active" access="public" location="aggregate.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/aggregation/aggregate.h" lineno="21" documented="true" meta="constructor" signature="Aggregate(QObject *parent)">
                    <parameter type="QObject *" name="parent" default="nullptr"/>
                </function>
                <function name="add" fullname="Aggregation::Aggregate::add" href="aggregation-aggregate.html#add" status="active" access="public" location="aggregate.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/aggregation/aggregate.h" lineno="24" documented="true" meta="plain" type="void" signature="void add(QObject *component)">
                    <parameter type="QObject *" name="component" default=""/>
                </function>
                <function name="changed" fullname="Aggregation::Aggregate::changed" href="aggregation-aggregate.html#changed" status="active" access="public" location="aggregate.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/aggregation/aggregate.h" lineno="51" documented="true" meta="signal" type="void" signature="void changed()"/>
                <function name="component" fullname="Aggregation::Aggregate::component" href="aggregation-aggregate.html#component" status="active" access="public" location="aggregate.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/aggregation/aggregate.h" lineno="27" documented="true" meta="plain" type="T *" signature="T * component()"/>
                <function name="components" fullname="Aggregation::Aggregate::components" href="aggregation-aggregate.html#components" status="active" access="public" location="aggregate.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/aggregation/aggregate.h" lineno="36" documented="true" meta="plain" type="QList&lt;T *&gt;" signature="QList&lt;T *&gt; components()"/>
                <function name="parentAggregate" fullname="Aggregation::Aggregate::parentAggregate" href="aggregation-aggregate.html#parentAggregate" status="active" access="public" location="aggregate.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/aggregation/aggregate.h" lineno="47" documented="true" meta="plain" static="true" type="Aggregation::Aggregate *" signature="Aggregation::Aggregate * parentAggregate(QObject *obj)">
                    <parameter type="QObject *" name="obj" default=""/>
                </function>
                <function name="query" href="aggregation-aggregate.html#query" status="active" access="public" location="aggregate.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/aggregation/aggregate.h" lineno="69" documented="true" related="0" meta="plain" type="T *" signature="T * query(QObject *obj)">
                    <parameter type="QObject *" name="obj" default=""/>
                </function>
                <function name="query_all" href="aggregation-aggregate.html#query_all" status="active" access="public" location="aggregate.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/aggregation/aggregate.h" lineno="90" documented="true" related="1" meta="plain" type="QList&lt;T *&gt;" signature="QList&lt;T *&gt; query_all(QObject *obj)">
                    <parameter type="QObject *" name="obj" default=""/>
                </function>
                <function name="remove" fullname="Aggregation::Aggregate::remove" href="aggregation-aggregate.html#remove" status="active" access="public" location="aggregate.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/aggregation/aggregate.h" lineno="25" documented="true" meta="plain" type="void" signature="void remove(QObject *component)">
                    <parameter type="QObject *" name="component" default=""/>
                </function>
                <function name="~Aggregate" fullname="Aggregation::Aggregate::~Aggregate" href="aggregation-aggregate.html#dtor.Aggregate" status="active" access="public" location="aggregate.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/aggregation/aggregate.h" lineno="22" documented="true" meta="destructor" virtual="virtual" override="true" noexcept="true" signature="~Aggregate() override"/>
            </class>
        </namespace>
        <page name="common_extension_tasks.html" href="common-extension-tasks.html" status="active" location="common-extension-tasks.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/common-extension-tasks.qdoc" lineno="4" documented="true" subtype="page" title="Common Extension Tasks" fulltitle="Common Extension Tasks" subtitle=""/>
        <namespace name="Core" href="core.html" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="24" documented="true" module="QtCreator" brief="Contains all classes that make up the Core plugin which constitute the basic functionality of Qt Creator">
            <class name="ActionBuilder" fullname="Core::ActionBuilder" href="core-actionbuilder.html" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="25" documented="true" groups="mainclasses" module="QtCreator" brief="Convienience class to set up Core::Commands">
                <function name="ActionBuilder" fullname="Core::ActionBuilder::ActionBuilder" href="core-actionbuilder.html#ActionBuilder" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="28" documented="true" meta="constructor" signature="ActionBuilder(QObject *contextActionParent, const Utils::Id actionId)">
                    <parameter type="QObject *" name="contextActionParent" default=""/>
                    <parameter type="const Utils::Id" name="actionId" default=""/>
                </function>
                <function name="adopt" fullname="Core::ActionBuilder::adopt" href="core-actionbuilder.html#adopt" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="31" documented="true" meta="plain" type="Core::ActionBuilder &amp;" signature="Core::ActionBuilder &amp; adopt(Utils::Action *action)">
                    <parameter type="Utils::Action *" name="action" default=""/>
                </function>
                <function name="setIconText" fullname="Core::ActionBuilder::setIconText" href="core-actionbuilder.html#setIconText" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="36" documented="true" meta="plain" type="Core::ActionBuilder &amp;" signature="Core::ActionBuilder &amp; setIconText(const QString &amp;iconText)">
                    <parameter type="const QString &amp;" name="iconText" default=""/>
                </function>
                <function name="setText" fullname="Core::ActionBuilder::setText" href="core-actionbuilder.html#setText" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="35" documented="true" meta="plain" type="Core::ActionBuilder &amp;" signature="Core::ActionBuilder &amp; setText(const QString &amp;text)">
                    <parameter type="const QString &amp;" name="text" default=""/>
                </function>
                <function name="~ActionBuilder" fullname="Core::ActionBuilder::~ActionBuilder" href="core-actionbuilder.html#dtor.ActionBuilder" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="29" documented="true" meta="destructor" noexcept="true" signature="~ActionBuilder()"/>
            </class>
            <class name="ActionContainer" fullname="Core::ActionContainer" href="core-actioncontainer.html" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../actionmanager/actioncontainer.h" lineno="23" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Represents a menu or menu bar in Qt Creator">
                <function name="addAction" fullname="Core::ActionContainer::addAction" href="core-actioncontainer.html#addAction" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../actionmanager/actioncontainer.h" lineno="46" documented="true" meta="plain" virtual="pure" type="void" signature="void addAction(Core::Command *action, Utils::Id group) = 0">
                    <parameter type="Core::Command *" name="action" default=""/>
                    <parameter type="Utils::Id" name="group" default="Id()"/>
                </function>
                <function name="addMenu" fullname="Core::ActionContainer::addMenu" href="core-actioncontainer.html#addMenu" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../actionmanager/actioncontainer.h" lineno="47" documented="true" meta="plain" virtual="pure" type="void" signature="void addMenu(Core::ActionContainer *menu, Utils::Id group) = 0">
                    <parameter type="Core::ActionContainer *" name="menu" default=""/>
                    <parameter type="Utils::Id" name="group" default="Utils::Id()"/>
                </function>
                <function name="addMenu" fullname="Core::ActionContainer::addMenu" href="core-actioncontainer.html#addMenu-1" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../actionmanager/actioncontainer.h" lineno="48" documented="true" meta="plain" virtual="pure" overload="true" overload-number="1" type="void" signature="void addMenu(Core::ActionContainer *before, Core::ActionContainer *menu) = 0">
                    <parameter type="Core::ActionContainer *" name="before" default=""/>
                    <parameter type="Core::ActionContainer *" name="menu" default=""/>
                </function>
                <function name="addSeparator" fullname="Core::ActionContainer::addSeparator" href="core-actioncontainer.html#addSeparator" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../actionmanager/actioncontainer.h" lineno="49" documented="true" meta="plain" type="Core::Command *" signature="Core::Command * addSeparator(Utils::Id group)">
                    <parameter type="Utils::Id" name="group" default="{}"/>
                </function>
                <function name="addSeparator" fullname="Core::ActionContainer::addSeparator" href="core-actioncontainer.html#addSeparator-1" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../actionmanager/actioncontainer.h" lineno="50" documented="true" meta="plain" virtual="pure" overload="true" overload-number="1" type="Core::Command *" signature="Core::Command * addSeparator(const Core::Context &amp;context, Utils::Id group, QAction **outSeparator) = 0">
                    <parameter type="const Core::Context &amp;" name="context" default=""/>
                    <parameter type="Utils::Id" name="group" default="{}"/>
                    <parameter type="QAction **" name="outSeparator" default="nullptr"/>
                </function>
                <function name="appendGroup" fullname="Core::ActionContainer::appendGroup" href="core-actioncontainer.html#appendGroup" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../actionmanager/actioncontainer.h" lineno="44" documented="true" meta="plain" virtual="pure" type="void" signature="void appendGroup(Utils::Id group) = 0">
                    <parameter type="Utils::Id" name="group" default=""/>
                </function>
                <function name="clear" fullname="Core::ActionContainer::clear" href="core-actioncontainer.html#clear" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../actionmanager/actioncontainer.h" lineno="54" documented="true" meta="plain" virtual="pure" type="void" signature="void clear() = 0"/>
                <function name="insertGroup" fullname="Core::ActionContainer::insertGroup" href="core-actioncontainer.html#insertGroup" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../actionmanager/actioncontainer.h" lineno="45" documented="true" meta="plain" virtual="pure" type="void" signature="void insertGroup(Utils::Id before, Utils::Id group) = 0">
                    <parameter type="Utils::Id" name="before" default=""/>
                    <parameter type="Utils::Id" name="group" default=""/>
                </function>
                <function name="insertLocation" fullname="Core::ActionContainer::insertLocation" href="core-actioncontainer.html#insertLocation" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../actionmanager/actioncontainer.h" lineno="43" documented="true" meta="plain" virtual="pure" const="true" type="QAction *" signature="QAction * insertLocation(Utils::Id group) const = 0">
                    <parameter type="Utils::Id" name="group" default=""/>
                </function>
                <function name="menu" fullname="Core::ActionContainer::menu" href="core-actioncontainer.html#menu" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../actionmanager/actioncontainer.h" lineno="39" documented="true" meta="plain" virtual="pure" const="true" type="QMenu *" signature="QMenu * menu() const = 0"/>
                <function name="menuBar" fullname="Core::ActionContainer::menuBar" href="core-actioncontainer.html#menuBar" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../actionmanager/actioncontainer.h" lineno="40" documented="true" meta="plain" virtual="pure" const="true" type="QMenuBar *" signature="QMenuBar * menuBar() const = 0"/>
                <function name="onAllDisabledBehavior" fullname="Core::ActionContainer::onAllDisabledBehavior" href="core-actioncontainer.html#onAllDisabledBehavior" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../actionmanager/actioncontainer.h" lineno="35" documented="true" meta="plain" virtual="pure" const="true" type="ActionContainer::OnAllDisabledBehavior" signature="ActionContainer::OnAllDisabledBehavior onAllDisabledBehavior() const = 0"/>
                <function name="setOnAllDisabledBehavior" fullname="Core::ActionContainer::setOnAllDisabledBehavior" href="core-actioncontainer.html#setOnAllDisabledBehavior" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../actionmanager/actioncontainer.h" lineno="34" documented="true" meta="plain" virtual="pure" type="void" signature="void setOnAllDisabledBehavior(Core::ActionContainer::OnAllDisabledBehavior behavior) = 0">
                    <parameter type="Core::ActionContainer::OnAllDisabledBehavior" name="behavior" default=""/>
                </function>
                <function name="touchBar" fullname="Core::ActionContainer::touchBar" href="core-actioncontainer.html#touchBar" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../actionmanager/actioncontainer.h" lineno="41" documented="true" meta="plain" virtual="pure" const="true" type="Utils::TouchBar *" signature="Utils::TouchBar * touchBar() const = 0"/>
                <enum name="OnAllDisabledBehavior" fullname="Core::ActionContainer::OnAllDisabledBehavior" href="core-actioncontainer.html#OnAllDisabledBehavior-enum" status="active" access="public" location="actioncontainer.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../actionmanager/actioncontainer.h" lineno="28" documented="true">
                    <value name="Disable" value="0"/>
                    <value name="Hide" value="1"/>
                    <value name="Show" value="2"/>
                </enum>
            </class>
            <class name="ActionManager" fullname="Core::ActionManager" href="core-actionmanager.html" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="127" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Responsible for registration of menus and menu items and keyboard shortcuts">
                <function name="actionContainer" fullname="Core::ActionManager::actionContainer" href="core-actionmanager.html#actionContainer" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="145" documented="true" meta="plain" static="true" type="Core::ActionContainer *" signature="Core::ActionContainer * actionContainer(Utils::Id id)">
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
                <function name="command" fullname="Core::ActionManager::command" href="core-actionmanager.html#command" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="144" documented="true" meta="plain" static="true" type="Core::Command *" signature="Core::Command * command(Utils::Id id)">
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
                <function name="commandAdded" fullname="Core::ActionManager::commandAdded" href="core-actionmanager.html#commandAdded" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="158" documented="true" meta="signal" type="void" signature="void commandAdded(Utils::Id id)">
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
                <function name="commandListChanged" fullname="Core::ActionManager::commandListChanged" href="core-actionmanager.html#commandListChanged" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="157" documented="true" meta="signal" type="void" signature="void commandListChanged()"/>
                <function name="commands" fullname="Core::ActionManager::commands" href="core-actionmanager.html#commands" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="147" documented="true" meta="plain" static="true" type="QList&lt;Core::Command *&gt;" signature="QList&lt;Core::Command *&gt; commands()"/>
                <function name="createCommand" fullname="Core::ActionManager::createCommand" href="core-actionmanager.html#createCommand" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="143" documented="true" meta="plain" static="true" type="Core::Command *" signature="Core::Command * createCommand(Utils::Id id)">
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
                <function name="createMenu" fullname="Core::ActionManager::createMenu" href="core-actionmanager.html#createMenu" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="133" documented="true" meta="plain" static="true" type="Core::ActionContainer *" signature="Core::ActionContainer * createMenu(Utils::Id id)">
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
                <function name="createMenuBar" fullname="Core::ActionManager::createMenuBar" href="core-actionmanager.html#createMenuBar" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="134" documented="true" meta="plain" static="true" type="Core::ActionContainer *" signature="Core::ActionContainer * createMenuBar(Utils::Id id)">
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
                <function name="createTouchBar" fullname="Core::ActionManager::createTouchBar" href="core-actionmanager.html#createTouchBar" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="135" documented="true" meta="plain" static="true" type="Core::ActionContainer *" signature="Core::ActionContainer * createTouchBar(Utils::Id id, const QIcon &amp;icon, const QString &amp;text)">
                    <parameter type="Utils::Id" name="id" default=""/>
                    <parameter type="const QIcon &amp;" name="icon" default=""/>
                    <parameter type="const QString &amp;" name="text" default="QString()"/>
                </function>
                <function name="instance" fullname="Core::ActionManager::instance" href="core-actionmanager.html#instance" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="131" documented="true" meta="plain" static="true" type="Core::ActionManager *" signature="Core::ActionManager * instance()"/>
                <function name="isPresentationModeEnabled" fullname="Core::ActionManager::isPresentationModeEnabled" href="core-actionmanager.html#isPresentationModeEnabled" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="152" documented="true" meta="plain" static="true" type="bool" signature="bool isPresentationModeEnabled()"/>
                <function name="registerAction" fullname="Core::ActionManager::registerAction" href="core-actionmanager.html#registerAction" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="139" documented="true" meta="plain" static="true" type="Core::Command *" signature="Core::Command * registerAction(QAction *action, Utils::Id id, const Core::Context &amp;context, bool scriptable)">
                    <parameter type="QAction *" name="action" default=""/>
                    <parameter type="Utils::Id" name="id" default=""/>
                    <parameter type="const Core::Context &amp;" name="context" default="Context(Constants::C_GLOBAL)"/>
                    <parameter type="bool" name="scriptable" default="false"/>
                </function>
                <function name="unregisterAction" fullname="Core::ActionManager::unregisterAction" href="core-actionmanager.html#unregisterAction" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="149" documented="true" meta="plain" static="true" type="void" signature="void unregisterAction(QAction *action, Utils::Id id)">
                    <parameter type="QAction *" name="action" default=""/>
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
                <function name="withNumberAccelerator" fullname="Core::ActionManager::withNumberAccelerator" href="core-actionmanager.html#withNumberAccelerator" status="active" access="public" location="actionmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/actionmanager.h" lineno="154" documented="true" meta="plain" static="true" type="QString" signature="QString withNumberAccelerator(const QString &amp;text, const int number)">
                    <parameter type="const QString &amp;" name="text" default=""/>
                    <parameter type="const int" name="number" default=""/>
                </function>
            </class>
            <class name="BaseFileWizard" fullname="Core::BaseFileWizard" href="core-basefilewizard.html" status="active" access="public" location="basefilewizard.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/basefilewizard.h" lineno="18" documented="true" bases="Utils::Wizard" module="QtCreator" brief="Implements a is a convenience class for creating files"/>
            <class name="BaseFileWizardFactory" fullname="Core::BaseFileWizardFactory" href="core-basefilewizardfactory.html" status="active" access="public" location="basefilewizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/basefilewizardfactory.h" lineno="60" documented="true" bases="Core::IWizardFactory" module="QtCreator" brief="Implements a generic wizard for creating files">
                <function name="buildFileName" fullname="Core::BaseFileWizardFactory::buildFileName" href="core-basefilewizardfactory.html#buildFileName" status="active" access="public" location="basefilewizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/basefilewizardfactory.h" lineno="67" documented="true" meta="plain" static="true" type="Utils::FilePath" signature="Utils::FilePath buildFileName(const Utils::FilePath &amp;path, const QString &amp;baseName, const QString &amp;extension)">
                    <parameter type="const Utils::FilePath &amp;" name="path" default=""/>
                    <parameter type="const QString &amp;" name="baseName" default=""/>
                    <parameter type="const QString &amp;" name="extension" default=""/>
                </function>
                <function name="create" fullname="Core::BaseFileWizardFactory::create" href="core-basefilewizardfactory.html#create" status="active" access="protected" location="basefilewizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/basefilewizardfactory.h" lineno="70" documented="true" meta="plain" virtual="pure" const="true" type="Core::BaseFileWizard *" signature="Core::BaseFileWizard * create(QWidget *parent, const Core::WizardDialogParameters &amp;parameters) const = 0">
                    <parameter type="QWidget *" name="parent" default=""/>
                    <parameter type="const Core::WizardDialogParameters &amp;" name="parameters" default=""/>
                </function>
                <function name="generateFiles" fullname="Core::BaseFileWizardFactory::generateFiles" href="core-basefilewizardfactory.html#generateFiles" status="active" access="protected" location="basefilewizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/basefilewizardfactory.h" lineno="72" documented="true" meta="plain" virtual="pure" const="true" type="Core::GeneratedFiles" signature="Core::GeneratedFiles generateFiles(const QWizard *w, QString *errorMessage) const = 0">
                    <parameter type="const QWizard *" name="w" default=""/>
                    <parameter type="QString *" name="errorMessage" default=""/>
                </function>
                <function name="postGenerateFiles" fullname="Core::BaseFileWizardFactory::postGenerateFiles" href="core-basefilewizardfactory.html#postGenerateFiles" status="active" access="protected" location="basefilewizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/basefilewizardfactory.h" lineno="77" documented="true" meta="plain" virtual="virtual" const="true" type="bool" signature="bool postGenerateFiles(const QWizard *w, const Core::GeneratedFiles &amp;l, QString *errorMessage) const">
                    <parameter type="const QWizard *" name="w" default=""/>
                    <parameter type="const Core::GeneratedFiles &amp;" name="l" default=""/>
                    <parameter type="QString *" name="errorMessage" default=""/>
                </function>
                <function name="postGenerateOpenEditors" fullname="Core::BaseFileWizardFactory::postGenerateOpenEditors" href="core-basefilewizardfactory.html#postGenerateOpenEditors" status="active" access="protected" location="basefilewizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/basefilewizardfactory.h" lineno="84" documented="true" meta="plain" static="true" type="bool" signature="bool postGenerateOpenEditors(const Core::GeneratedFiles &amp;l, QString *errorMessage)">
                    <parameter type="const Core::GeneratedFiles &amp;" name="l" default=""/>
                    <parameter type="QString *" name="errorMessage" default="nullptr"/>
                </function>
                <function name="preferredSuffix" fullname="Core::BaseFileWizardFactory::preferredSuffix" href="core-basefilewizardfactory.html#preferredSuffix" status="active" access="protected" location="basefilewizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/basefilewizardfactory.h" lineno="79" documented="true" meta="plain" static="true" type="QString" signature="QString preferredSuffix(const QString &amp;mimeType)">
                    <parameter type="const QString &amp;" name="mimeType" default=""/>
                </function>
                <function name="promptOverwrite" fullname="Core::BaseFileWizardFactory::promptOverwrite" href="core-basefilewizardfactory.html#promptOverwrite" status="active" access="protected" location="basefilewizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/basefilewizardfactory.h" lineno="82" documented="true" meta="plain" static="true" type="Core::BaseFileWizardFactory::OverwriteResult" signature="Core::BaseFileWizardFactory::OverwriteResult promptOverwrite(Core::GeneratedFiles *files, QString *errorMessage)">
                    <parameter type="Core::GeneratedFiles *" name="files" default=""/>
                    <parameter type="QString *" name="errorMessage" default=""/>
                </function>
                <function name="writeFiles" fullname="Core::BaseFileWizardFactory::writeFiles" href="core-basefilewizardfactory.html#writeFiles" status="active" access="protected" location="basefilewizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/basefilewizardfactory.h" lineno="75" documented="true" meta="plain" virtual="virtual" const="true" type="bool" signature="bool writeFiles(const Core::GeneratedFiles &amp;files, QString *errorMessage) const">
                    <parameter type="const Core::GeneratedFiles &amp;" name="files" default=""/>
                    <parameter type="QString *" name="errorMessage" default=""/>
                </function>
            </class>
            <class name="BaseTextDocument" fullname="Core::BaseTextDocument" href="core-basetextdocument.html" status="active" access="public" location="textdocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/textdocument.h" lineno="14" documented="true" bases="Core::IDocument" module="QtCreator" brief="Very general base class for documents that work with text">
                <function name="format" fullname="Core::BaseTextDocument::format" href="core-basetextdocument.html#format" status="active" access="public" location="textdocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/textdocument.h" lineno="24" documented="true" meta="plain" const="true" type="Utils::TextFileFormat" signature="Utils::TextFileFormat format() const"/>
                <function name="read" fullname="Core::BaseTextDocument::read" href="core-basetextdocument.html#read" status="active" access="public" location="textdocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/textdocument.h" lineno="32" documented="true" meta="plain" type="Core::BaseTextDocument::ReadResult" signature="Core::BaseTextDocument::ReadResult read(const Utils::FilePath &amp;filePath, QStringList *plainTextList, QString *errorString)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                    <parameter type="QStringList *" name="plainTextList" default=""/>
                    <parameter type="QString *" name="errorString" default=""/>
                </function>
                <function name="read" fullname="Core::BaseTextDocument::read" href="core-basetextdocument.html#read-1" status="active" access="public" location="textdocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/textdocument.h" lineno="33" documented="true" meta="plain" overload="true" overload-number="1" type="Core::BaseTextDocument::ReadResult" signature="Core::BaseTextDocument::ReadResult read(const Utils::FilePath &amp;filePath, QString *plainText, QString *errorString)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                    <parameter type="QString *" name="plainText" default=""/>
                    <parameter type="QString *" name="errorString" default=""/>
                </function>
                <function name="write" fullname="Core::BaseTextDocument::write" href="core-basetextdocument.html#write" status="active" access="public" location="textdocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/textdocument.h" lineno="38" documented="true" meta="plain" const="true" type="bool" signature="bool write(const Utils::FilePath &amp;filePath, const QString &amp;data, QString *errorMessage) const">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                    <parameter type="const QString &amp;" name="data" default=""/>
                    <parameter type="QString *" name="errorMessage" default=""/>
                </function>
                <function name="write" fullname="Core::BaseTextDocument::write" href="core-basetextdocument.html#write-1" status="active" access="public" location="textdocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/textdocument.h" lineno="39" documented="true" meta="plain" const="true" overload="true" overload-number="1" type="bool" signature="bool write(const Utils::FilePath &amp;filePath, const Utils::TextFileFormat &amp;format, const QString &amp;data, QString *errorMessage) const">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                    <parameter type="const Utils::TextFileFormat &amp;" name="format" default=""/>
                    <parameter type="const QString &amp;" name="data" default=""/>
                    <parameter type="QString *" name="errorMessage" default=""/>
                </function>
            </class>
            <class name="BaseTextFind" fullname="Core::BaseTextFind" href="core-basetextfind.html" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="21" documented="true" bases="Core::IFindSupport" module="QtCreator" brief="Implements a find filter for QPlainTextEdit and QTextEdit based widgets">
                <function name="clearFindScope" fullname="Core::BaseTextFind::clearFindScope" href="core-basetextfind.html#clearFindScope" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="46" documented="true" meta="plain" virtual="virtual" override="true" type="void" signature="void clearFindScope() override"/>
                <function name="clearHighlights" fullname="Core::BaseTextFind::clearHighlights" href="core-basetextfind.html#clearHighlights" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="33" documented="true" meta="plain" virtual="virtual" override="true" type="void" signature="void clearHighlights() override"/>
                <function name="completedFindString" fullname="Core::BaseTextFind::completedFindString" href="core-basetextfind.html#completedFindString" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="35" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="QString" signature="QString completedFindString() const override"/>
                <function name="currentFindString" fullname="Core::BaseTextFind::currentFindString" href="core-basetextfind.html#currentFindString" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="34" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="QString" signature="QString currentFindString() const override"/>
                <function name="defineFindScope" fullname="Core::BaseTextFind::defineFindScope" href="core-basetextfind.html#defineFindScope" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="45" documented="true" meta="plain" virtual="virtual" override="true" type="void" signature="void defineFindScope() override"/>
                <function name="findIncremental" fullname="Core::BaseTextFind::findIncremental" href="core-basetextfind.html#findIncremental" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="37" documented="true" meta="plain" virtual="virtual" override="true" type="Core::IFindSupport::Result" signature="Core::IFindSupport::Result findIncremental(const QString &amp;txt, Utils::FindFlags findFlags) override">
                    <parameter type="const QString &amp;" name="txt" default=""/>
                    <parameter type="Utils::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="findScopeChanged" fullname="Core::BaseTextFind::findScopeChanged" href="core-basetextfind.html#findScopeChanged" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="59" documented="true" meta="signal" type="void" signature="void findScopeChanged(const Utils::MultiTextCursor &amp;cursor)">
                    <parameter type="const Utils::MultiTextCursor &amp;" name="cursor" default=""/>
                </function>
                <function name="findStep" fullname="Core::BaseTextFind::findStep" href="core-basetextfind.html#findStep" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="38" documented="true" meta="plain" virtual="virtual" override="true" type="Core::IFindSupport::Result" signature="Core::IFindSupport::Result findStep(const QString &amp;txt, Utils::FindFlags findFlags) override">
                    <parameter type="const QString &amp;" name="txt" default=""/>
                    <parameter type="Utils::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="highlightAll" fullname="Core::BaseTextFind::highlightAll" href="core-basetextfind.html#highlightAll" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="48" documented="true" meta="plain" virtual="virtual" override="true" type="void" signature="void highlightAll(const QString &amp;txt, Utils::FindFlags findFlags) override">
                    <parameter type="const QString &amp;" name="txt" default=""/>
                    <parameter type="Utils::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="highlightAllRequested" fullname="Core::BaseTextFind::highlightAllRequested" href="core-basetextfind.html#highlightAllRequested" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="58" documented="true" meta="signal" type="void" signature="void highlightAllRequested(const QString &amp;txt, Utils::FindFlags findFlags)">
                    <parameter type="const QString &amp;" name="txt" default=""/>
                    <parameter type="Utils::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="replace" fullname="Core::BaseTextFind::replace" href="core-basetextfind.html#replace" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="39" documented="true" meta="plain" virtual="virtual" override="true" type="void" signature="void replace(const QString &amp;before, const QString &amp;after, Utils::FindFlags findFlags) override">
                    <parameter type="const QString &amp;" name="before" default=""/>
                    <parameter type="const QString &amp;" name="after" default=""/>
                    <parameter type="Utils::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="replaceAll" fullname="Core::BaseTextFind::replaceAll" href="core-basetextfind.html#replaceAll" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="42" documented="true" meta="plain" virtual="virtual" override="true" type="int" signature="int replaceAll(const QString &amp;before, const QString &amp;after, Utils::FindFlags findFlags) override">
                    <parameter type="const QString &amp;" name="before" default=""/>
                    <parameter type="const QString &amp;" name="after" default=""/>
                    <parameter type="Utils::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="replaceStep" fullname="Core::BaseTextFind::replaceStep" href="core-basetextfind.html#replaceStep" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="40" documented="true" meta="plain" virtual="virtual" override="true" type="bool" signature="bool replaceStep(const QString &amp;before, const QString &amp;after, Utils::FindFlags findFlags) override">
                    <parameter type="const QString &amp;" name="before" default=""/>
                    <parameter type="const QString &amp;" name="after" default=""/>
                    <parameter type="Utils::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="resetIncrementalSearch" fullname="Core::BaseTextFind::resetIncrementalSearch" href="core-basetextfind.html#resetIncrementalSearch" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="32" documented="true" meta="plain" virtual="virtual" override="true" type="void" signature="void resetIncrementalSearch() override"/>
                <function name="supportedFindFlags" fullname="Core::BaseTextFind::supportedFindFlags" href="core-basetextfind.html#supportedFindFlags" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="31" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="Utils::FindFlags" signature="Utils::FindFlags supportedFindFlags() const override"/>
                <function name="supportsReplace" fullname="Core::BaseTextFind::supportsReplace" href="core-basetextfind.html#supportsReplace" status="active" access="public" location="basetextfind.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/basetextfind.h" lineno="30" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="bool" signature="bool supportsReplace() const override"/>
            </class>
            <class name="Command" fullname="Core::Command" href="core-command.html" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="31" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Represents an action, such as a menu item, tool button, or shortcut">
                <function name="action" fullname="Core::Command::action" href="core-command.html#action" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="59" documented="true" meta="plain" const="true" type="QAction *" signature="QAction * action() const"/>
                <function name="activeStateChanged" fullname="Core::Command::activeStateChanged" href="core-command.html#activeStateChanged" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="91" documented="true" meta="signal" type="void" signature="void activeStateChanged()"/>
                <function name="augmentActionWithShortcutToolTip" fullname="Core::Command::augmentActionWithShortcutToolTip" href="core-command.html#augmentActionWithShortcutToolTip" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="72" documented="true" meta="plain" const="true" type="void" signature="void augmentActionWithShortcutToolTip(QAction *a) const">
                    <parameter type="QAction *" name="a" default=""/>
                </function>
                <function name="context" fullname="Core::Command::context" href="core-command.html#context" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="62" documented="true" meta="plain" const="true" type="Core::Context" signature="Core::Context context() const"/>
                <function name="createActionWithShortcutToolTip" fullname="Core::Command::createActionWithShortcutToolTip" href="core-command.html#createActionWithShortcutToolTip" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="74" documented="true" meta="plain" static="true" type="QAction *" signature="QAction * createActionWithShortcutToolTip(Utils::Id commandId, QObject *parent)">
                    <parameter type="Utils::Id" name="commandId" default=""/>
                    <parameter type="QObject *" name="parent" default=""/>
                </function>
                <function name="createToolButtonWithShortcutToolTip" fullname="Core::Command::createToolButtonWithShortcutToolTip" href="core-command.html#createToolButtonWithShortcutToolTip" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="75" documented="true" meta="plain" static="true" type="QToolButton *" signature="QToolButton * createToolButtonWithShortcutToolTip(Utils::Id commandId, QWidget *parent)">
                    <parameter type="Utils::Id" name="commandId" default=""/>
                    <parameter type="QWidget *" name="parent" default="nullptr"/>
                </function>
                <function name="defaultKeySequences" fullname="Core::Command::defaultKeySequences" href="core-command.html#defaultKeySequences" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="47" documented="true" meta="plain" const="true" type="QList&lt;QKeySequence&gt;" signature="QList&lt;QKeySequence&gt; defaultKeySequences() const"/>
                <function name="description" fullname="Core::Command::description" href="core-command.html#description" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="55" documented="true" meta="plain" const="true" type="QString" signature="QString description() const"/>
                <function name="hasAttribute" fullname="Core::Command::hasAttribute" href="core-command.html#hasAttribute" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="66" documented="true" meta="plain" const="true" type="bool" signature="bool hasAttribute(Core::Command::CommandAttribute attribute) const">
                    <parameter type="Core::Command::CommandAttribute" name="attribute" default=""/>
                </function>
                <function name="isActive" fullname="Core::Command::isActive" href="core-command.html#isActive" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="68" documented="true" meta="plain" const="true" type="bool" signature="bool isActive() const"/>
                <function name="isScriptable" fullname="Core::Command::isScriptable" href="core-command.html#isScriptable" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="80" documented="true" meta="plain" const="true" type="bool" signature="bool isScriptable() const"/>
                <function name="keySequence" fullname="Core::Command::keySequence" href="core-command.html#keySequence" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="49" documented="true" meta="plain" const="true" type="QKeySequence" signature="QKeySequence keySequence() const"/>
                <function name="keySequenceChanged" fullname="Core::Command::keySequenceChanged" href="core-command.html#keySequenceChanged" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="90" documented="true" meta="signal" type="void" signature="void keySequenceChanged()"/>
                <function name="keySequences" fullname="Core::Command::keySequences" href="core-command.html#keySequences" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="48" documented="true" meta="plain" const="true" type="QList&lt;QKeySequence&gt;" signature="QList&lt;QKeySequence&gt; keySequences() const"/>
                <function name="removeAttribute" fullname="Core::Command::removeAttribute" href="core-command.html#removeAttribute" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="65" documented="true" meta="plain" type="void" signature="void removeAttribute(Core::Command::CommandAttribute attribute)">
                    <parameter type="Core::Command::CommandAttribute" name="attribute" default=""/>
                </function>
                <function name="setAttribute" fullname="Core::Command::setAttribute" href="core-command.html#setAttribute" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="64" documented="true" meta="plain" type="void" signature="void setAttribute(Core::Command::CommandAttribute attribute)">
                    <parameter type="Core::Command::CommandAttribute" name="attribute" default=""/>
                </function>
                <function name="setDefaultKeySequence" fullname="Core::Command::setDefaultKeySequence" href="core-command.html#setDefaultKeySequence" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="45" documented="true" meta="plain" type="void" signature="void setDefaultKeySequence(const QKeySequence &amp;key)">
                    <parameter type="const QKeySequence &amp;" name="key" default=""/>
                </function>
                <function name="setDefaultKeySequences" fullname="Core::Command::setDefaultKeySequences" href="core-command.html#setDefaultKeySequences" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="46" documented="true" meta="plain" type="void" signature="void setDefaultKeySequences(const QList&lt;QKeySequence&gt; &amp;keys)">
                    <parameter type="const QList&lt;QKeySequence&gt; &amp;" name="keys" default=""/>
                </function>
                <function name="setDescription" fullname="Core::Command::setDescription" href="core-command.html#setDescription" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="54" documented="true" meta="plain" type="void" signature="void setDescription(const QString &amp;text)">
                    <parameter type="const QString &amp;" name="text" default=""/>
                </function>
                <function name="setTouchBarIcon" fullname="Core::Command::setTouchBarIcon" href="core-command.html#setTouchBarIcon" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="85" documented="true" meta="plain" type="void" signature="void setTouchBarIcon(const QIcon &amp;icon)">
                    <parameter type="const QIcon &amp;" name="icon" default=""/>
                </function>
                <function name="setTouchBarText" fullname="Core::Command::setTouchBarText" href="core-command.html#setTouchBarText" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="83" documented="true" meta="plain" type="void" signature="void setTouchBarText(const QString &amp;text)">
                    <parameter type="const QString &amp;" name="text" default=""/>
                </function>
                <function name="stringWithAppendedShortcut" fullname="Core::Command::stringWithAppendedShortcut" href="core-command.html#stringWithAppendedShortcut" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="71" documented="true" meta="plain" const="true" type="QString" signature="QString stringWithAppendedShortcut(const QString &amp;string) const">
                    <parameter type="const QString &amp;" name="string" default=""/>
                </function>
                <function name="toolButtonWithAppendedShortcut" fullname="Core::Command::toolButtonWithAppendedShortcut" href="core-command.html#toolButtonWithAppendedShortcut" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="77" documented="true" meta="plain" static="true" type="QToolButton *" signature="QToolButton * toolButtonWithAppendedShortcut(QAction *action, Core::Command *cmd)">
                    <parameter type="QAction *" name="action" default=""/>
                    <parameter type="Core::Command *" name="cmd" default=""/>
                </function>
                <function name="toolButtonWithAppendedShortcut" fullname="Core::Command::toolButtonWithAppendedShortcut" href="core-command.html#toolButtonWithAppendedShortcut-1" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="78" documented="true" meta="plain" static="true" overload="true" overload-number="1" type="QToolButton *" signature="QToolButton * toolButtonWithAppendedShortcut(QAction *action, Utils::Id commandId)">
                    <parameter type="QAction *" name="action" default=""/>
                    <parameter type="Utils::Id" name="commandId" default=""/>
                </function>
                <function name="touchBarIcon" fullname="Core::Command::touchBarIcon" href="core-command.html#touchBarIcon" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="86" documented="true" meta="plain" const="true" type="QIcon" signature="QIcon touchBarIcon() const"/>
                <function name="touchBarText" fullname="Core::Command::touchBarText" href="core-command.html#touchBarText" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="84" documented="true" meta="plain" const="true" type="QString" signature="QString touchBarText() const"/>
                <enum name="CommandAttribute" fullname="Core::Command::CommandAttribute" href="core-command.html#CommandAttribute-enum" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="35" documented="true" typedef="Core::Command::CommandAttributes">
                    <value name="CA_Hide" value="1"/>
                    <value name="CA_UpdateText" value="2"/>
                    <value name="CA_UpdateIcon" value="4"/>
                    <value name="CA_NonConfigurable" value="8"/>
                </enum>
                <typedef name="CommandAttributes" fullname="Core::Command::CommandAttributes" href="core-command.html#CommandAttribute-enum" status="active" access="public" location="command.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/actionmanager/command.h" lineno="41" enum="Core::Command::CommandAttribute"/>
            </class>
            <class name="Context" fullname="Core::Context" href="core-context.html" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../icontext.h" lineno="20" documented="true" groups="mainclasses" module="QtCreator" brief="Implements a list of context IDs">
                <function name="Context" fullname="Core::Context::Context" href="core-context.html#Context" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../icontext.h" lineno="23" documented="true" meta="constructor" constexpr="true" noexcept="true" signature="Context()"/>
                <function name="Context" fullname="Core::Context::Context" href="core-context.html#Context-1" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../icontext.h" lineno="25" documented="true" meta="constructor" explicit="true" overload="true" overload-number="1" signature="Context(Utils::Id c1)">
                    <parameter type="Utils::Id" name="c1" default=""/>
                </function>
                <function name="Context" fullname="Core::Context::Context" href="core-context.html#Context-2" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../icontext.h" lineno="26" documented="true" meta="constructor" overload="true" overload-number="2" signature="Context(Utils::Id c1, Utils::Id c2)">
                    <parameter type="Utils::Id" name="c1" default=""/>
                    <parameter type="Utils::Id" name="c2" default=""/>
                </function>
                <function name="Context" fullname="Core::Context::Context" href="core-context.html#Context-3" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../icontext.h" lineno="27" documented="true" meta="constructor" overload="true" overload-number="3" signature="Context(Utils::Id c1, Utils::Id c2, Utils::Id c3)">
                    <parameter type="Utils::Id" name="c1" default=""/>
                    <parameter type="Utils::Id" name="c2" default=""/>
                    <parameter type="Utils::Id" name="c3" default=""/>
                </function>
                <function name="add" fullname="Core::Context::add" href="core-context.html#add" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../icontext.h" lineno="40" documented="true" meta="plain" type="void" signature="void add(const Core::Context &amp;c)">
                    <parameter type="const Core::Context &amp;" name="c" default=""/>
                </function>
                <function name="add" fullname="Core::Context::add" href="core-context.html#add-1" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../icontext.h" lineno="41" documented="true" meta="plain" overload="true" overload-number="1" type="void" signature="void add(Utils::Id c)">
                    <parameter type="Utils::Id" name="c" default=""/>
                </function>
                <function name="at" fullname="Core::Context::at" href="core-context.html#at" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../icontext.h" lineno="31" documented="true" meta="plain" const="true" type="Utils::Id" signature="Utils::Id at(int i) const">
                    <parameter type="int" name="i" default=""/>
                </function>
                <function name="begin" fullname="Core::Context::begin" href="core-context.html#begin" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../icontext.h" lineno="35" documented="true" meta="plain" const="true" type="Core::Context::const_iterator" signature="Core::Context::const_iterator begin() const"/>
                <function name="contains" fullname="Core::Context::contains" href="core-context.html#contains" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../icontext.h" lineno="28" documented="true" meta="plain" const="true" type="bool" signature="bool contains(Utils::Id c) const">
                    <parameter type="Utils::Id" name="c" default=""/>
                </function>
                <function name="end" fullname="Core::Context::end" href="core-context.html#end" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../icontext.h" lineno="36" documented="true" meta="plain" const="true" type="Core::Context::const_iterator" signature="Core::Context::const_iterator end() const"/>
                <function name="indexOf" fullname="Core::Context::indexOf" href="core-context.html#indexOf" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../icontext.h" lineno="37" documented="true" meta="plain" const="true" type="int" signature="int indexOf(Utils::Id c) const">
                    <parameter type="Utils::Id" name="c" default=""/>
                </function>
                <function name="isEmpty" fullname="Core::Context::isEmpty" href="core-context.html#isEmpty" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../icontext.h" lineno="30" documented="true" meta="plain" const="true" type="bool" signature="bool isEmpty() const"/>
                <function name="prepend" fullname="Core::Context::prepend" href="core-context.html#prepend" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../icontext.h" lineno="39" documented="true" meta="plain" type="void" signature="void prepend(Utils::Id c)">
                    <parameter type="Utils::Id" name="c" default=""/>
                </function>
                <function name="removeAt" fullname="Core::Context::removeAt" href="core-context.html#removeAt" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../icontext.h" lineno="38" documented="true" meta="plain" type="void" signature="void removeAt(int i)">
                    <parameter type="int" name="i" default=""/>
                </function>
                <function name="size" fullname="Core::Context::size" href="core-context.html#size" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../icontext.h" lineno="29" documented="true" meta="plain" const="true" type="int" signature="int size() const"/>
                <typedef name="const_iterator" fullname="Core::Context::const_iterator" href="core-context.html#const_iterator-typedef" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../icontext.h" lineno="34" documented="true" aliasedtype="QList&lt;Utils::Id&gt;::const_iterator"/>
            </class>
            <class name="DocumentManager" fullname="Core::DocumentManager" href="core-documentmanager.html" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="26" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Manages a set of documents">
                <function name="addDocument" fullname="Core::DocumentManager::addDocument" href="core-documentmanager.html#addDocument" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="41" documented="true" meta="plain" static="true" type="void" signature="void addDocument(Core::IDocument *document, bool addWatcher)">
                    <parameter type="Core::IDocument *" name="document" default=""/>
                    <parameter type="bool" name="addWatcher" default="true"/>
                </function>
                <function name="addDocuments" fullname="Core::DocumentManager::addDocuments" href="core-documentmanager.html#addDocuments" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="40" documented="true" meta="plain" static="true" type="void" signature="void addDocuments(const QList&lt;Core::IDocument *&gt; &amp;documents, bool addWatcher)">
                    <parameter type="const QList&lt;Core::IDocument *&gt; &amp;" name="documents" default=""/>
                    <parameter type="bool" name="addWatcher" default="true"/>
                </function>
                <function name="addToRecentFiles" fullname="Core::DocumentManager::addToRecentFiles" href="core-documentmanager.html#addToRecentFiles" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="51" documented="true" meta="plain" static="true" type="void" signature="void addToRecentFiles(const Utils::FilePath &amp;filePath, Utils::Id editorId)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                    <parameter type="Utils::Id" name="editorId" default="{}"/>
                </function>
                <function name="clearRecentFiles" fullname="Core::DocumentManager::clearRecentFiles" href="core-documentmanager.html#clearRecentFiles" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="52" documented="true" meta="slot" type="void" signature="void clearRecentFiles()"/>
                <function name="defaultLocationForNewFiles" fullname="Core::DocumentManager::defaultLocationForNewFiles" href="core-documentmanager.html#defaultLocationForNewFiles" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="112" documented="true" meta="plain" static="true" type="Utils::FilePath" signature="Utils::FilePath defaultLocationForNewFiles()"/>
                <function name="expectFileChange" fullname="Core::DocumentManager::expectFileChange" href="core-documentmanager.html#expectFileChange" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="47" documented="true" meta="plain" static="true" type="void" signature="void expectFileChange(const Utils::FilePath &amp;filePath)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                </function>
                <function name="fileDialogInitialDirectory" fullname="Core::DocumentManager::fileDialogInitialDirectory" href="core-documentmanager.html#fileDialogInitialDirectory" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="110" documented="true" meta="plain" static="true" type="Utils::FilePath" signature="Utils::FilePath fileDialogInitialDirectory()"/>
                <function name="fileDialogLastVisitedDirectory" fullname="Core::DocumentManager::fileDialogLastVisitedDirectory" href="core-documentmanager.html#fileDialogLastVisitedDirectory" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="107" documented="true" meta="plain" static="true" type="Utils::FilePath" signature="Utils::FilePath fileDialogLastVisitedDirectory()"/>
                <function name="filePathKey" fullname="Core::DocumentManager::filePathKey" href="core-documentmanager.html#filePathKey" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="58" documented="true" meta="plain" static="true" type="Utils::FilePath" signature="Utils::FilePath filePathKey(const Utils::FilePath &amp;filePath, Core::DocumentManager::ResolveMode resolveMode)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                    <parameter type="Core::DocumentManager::ResolveMode" name="resolveMode" default=""/>
                </function>
                <function name="getOpenFileNames" fullname="Core::DocumentManager::getOpenFileNames" href="core-documentmanager.html#getOpenFileNames" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="66" documented="true" meta="plain" static="true" type="Utils::FilePaths" signature="Utils::FilePaths getOpenFileNames(const QString &amp;filters, const Utils::FilePath &amp;pathIn, QString *selectedFilter, QFileDialog::Options options)">
                    <parameter type="const QString &amp;" name="filters" default=""/>
                    <parameter type="const Utils::FilePath &amp;" name="pathIn" default="{}"/>
                    <parameter type="QString *" name="selectedFilter" default="nullptr"/>
                    <parameter type="QFileDialog::Options" name="options" default="{}"/>
                </function>
                <function name="getSaveAsFileName" fullname="Core::DocumentManager::getSaveAsFileName" href="core-documentmanager.html#getSaveAsFileName" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="77" documented="true" meta="plain" static="true" type="Utils::FilePath" signature="Utils::FilePath getSaveAsFileName(const Core::IDocument *document)">
                    <parameter type="const Core::IDocument *" name="document" default=""/>
                </function>
                <function name="modifiedDocuments" fullname="Core::DocumentManager::modifiedDocuments" href="core-documentmanager.html#modifiedDocuments" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="43" documented="true" meta="plain" static="true" type="QList&lt;Core::IDocument *&gt;" signature="QList&lt;Core::IDocument *&gt; modifiedDocuments()"/>
                <function name="projectsDirectory" fullname="Core::DocumentManager::projectsDirectory" href="core-documentmanager.html#projectsDirectory" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="118" documented="true" meta="plain" static="true" type="Utils::FilePath" signature="Utils::FilePath projectsDirectory()"/>
                <function name="recentFiles" fullname="Core::DocumentManager::recentFiles" href="core-documentmanager.html#recentFiles" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="53" documented="true" meta="plain" static="true" type="QList&lt;Core::DocumentManager::RecentFile&gt;" signature="QList&lt;Core::DocumentManager::RecentFile&gt; recentFiles()"/>
                <function name="removeDocument" fullname="Core::DocumentManager::removeDocument" href="core-documentmanager.html#removeDocument" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="42" documented="true" meta="plain" static="true" type="bool" signature="bool removeDocument(Core::IDocument *document)">
                    <parameter type="Core::IDocument *" name="document" default=""/>
                </function>
                <function name="renamedFile" fullname="Core::DocumentManager::renamedFile" href="core-documentmanager.html#renamedFile" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="45" documented="true" meta="plain" static="true" type="void" signature="void renamedFile(const Utils::FilePath &amp;from, const Utils::FilePath &amp;to)">
                    <parameter type="const Utils::FilePath &amp;" name="from" default=""/>
                    <parameter type="const Utils::FilePath &amp;" name="to" default=""/>
                </function>
                <function name="saveAllModifiedDocuments" fullname="Core::DocumentManager::saveAllModifiedDocuments" href="core-documentmanager.html#saveAllModifiedDocuments" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="88" documented="true" meta="plain" static="true" type="bool" signature="bool saveAllModifiedDocuments(const QString &amp;message, bool *canceled, const QString &amp;alwaysSaveMessage, bool *alwaysSave, QList&lt;Core::IDocument *&gt; *failedToClose)">
                    <parameter type="const QString &amp;" name="message" default="QString()"/>
                    <parameter type="bool *" name="canceled" default="nullptr"/>
                    <parameter type="const QString &amp;" name="alwaysSaveMessage" default="QString()"/>
                    <parameter type="bool *" name="alwaysSave" default="nullptr"/>
                    <parameter type="QList&lt;Core::IDocument *&gt; *" name="failedToClose" default="nullptr"/>
                </function>
                <function name="saveAllModifiedDocumentsSilently" fullname="Core::DocumentManager::saveAllModifiedDocumentsSilently" href="core-documentmanager.html#saveAllModifiedDocumentsSilently" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="79" documented="true" meta="plain" static="true" type="bool" signature="bool saveAllModifiedDocumentsSilently(bool *canceled, QList&lt;Core::IDocument *&gt; *failedToClose)">
                    <parameter type="bool *" name="canceled" default="nullptr"/>
                    <parameter type="QList&lt;Core::IDocument *&gt; *" name="failedToClose" default="nullptr"/>
                </function>
                <function name="saveModifiedDocument" fullname="Core::DocumentManager::saveModifiedDocument" href="core-documentmanager.html#saveModifiedDocument" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="99" documented="true" meta="plain" static="true" type="bool" signature="bool saveModifiedDocument(Core::IDocument *document, const QString &amp;message, bool *canceled, const QString &amp;alwaysSaveMessage, bool *alwaysSave, QList&lt;Core::IDocument *&gt; *failedToClose)">
                    <parameter type="Core::IDocument *" name="document" default=""/>
                    <parameter type="const QString &amp;" name="message" default="QString()"/>
                    <parameter type="bool *" name="canceled" default="nullptr"/>
                    <parameter type="const QString &amp;" name="alwaysSaveMessage" default="QString()"/>
                    <parameter type="bool *" name="alwaysSave" default="nullptr"/>
                    <parameter type="QList&lt;Core::IDocument *&gt; *" name="failedToClose" default="nullptr"/>
                </function>
                <function name="saveModifiedDocumentSilently" fullname="Core::DocumentManager::saveModifiedDocumentSilently" href="core-documentmanager.html#saveModifiedDocumentSilently" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="84" documented="true" meta="plain" static="true" type="bool" signature="bool saveModifiedDocumentSilently(Core::IDocument *document, bool *canceled, QList&lt;Core::IDocument *&gt; *failedToClose)">
                    <parameter type="Core::IDocument *" name="document" default=""/>
                    <parameter type="bool *" name="canceled" default="nullptr"/>
                    <parameter type="QList&lt;Core::IDocument *&gt; *" name="failedToClose" default="nullptr"/>
                </function>
                <function name="saveModifiedDocuments" fullname="Core::DocumentManager::saveModifiedDocuments" href="core-documentmanager.html#saveModifiedDocuments" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="93" documented="true" meta="plain" static="true" type="bool" signature="bool saveModifiedDocuments(const QList&lt;Core::IDocument *&gt; &amp;documents, const QString &amp;message, bool *canceled, const QString &amp;alwaysSaveMessage, bool *alwaysSave, QList&lt;Core::IDocument *&gt; *failedToClose)">
                    <parameter type="const QList&lt;Core::IDocument *&gt; &amp;" name="documents" default=""/>
                    <parameter type="const QString &amp;" name="message" default="QString()"/>
                    <parameter type="bool *" name="canceled" default="nullptr"/>
                    <parameter type="const QString &amp;" name="alwaysSaveMessage" default="QString()"/>
                    <parameter type="bool *" name="alwaysSave" default="nullptr"/>
                    <parameter type="QList&lt;Core::IDocument *&gt; *" name="failedToClose" default="nullptr"/>
                </function>
                <function name="saveModifiedDocumentsSilently" fullname="Core::DocumentManager::saveModifiedDocumentsSilently" href="core-documentmanager.html#saveModifiedDocumentsSilently" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="81" documented="true" meta="plain" static="true" type="bool" signature="bool saveModifiedDocumentsSilently(const QList&lt;Core::IDocument *&gt; &amp;documents, bool *canceled, QList&lt;Core::IDocument *&gt; *failedToClose)">
                    <parameter type="const QList&lt;Core::IDocument *&gt; &amp;" name="documents" default=""/>
                    <parameter type="bool *" name="canceled" default="nullptr"/>
                    <parameter type="QList&lt;Core::IDocument *&gt; *" name="failedToClose" default="nullptr"/>
                </function>
                <function name="setDefaultLocationForNewFiles" fullname="Core::DocumentManager::setDefaultLocationForNewFiles" href="core-documentmanager.html#setDefaultLocationForNewFiles" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="113" documented="true" meta="plain" static="true" type="void" signature="void setDefaultLocationForNewFiles(const Utils::FilePath &amp;location)">
                    <parameter type="const Utils::FilePath &amp;" name="location" default=""/>
                </function>
                <function name="setFileDialogLastVisitedDirectory" fullname="Core::DocumentManager::setFileDialogLastVisitedDirectory" href="core-documentmanager.html#setFileDialogLastVisitedDirectory" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="108" documented="true" meta="plain" static="true" type="void" signature="void setFileDialogLastVisitedDirectory(const Utils::FilePath &amp;directory)">
                    <parameter type="const Utils::FilePath &amp;" name="directory" default=""/>
                </function>
                <function name="setProjectsDirectory" fullname="Core::DocumentManager::setProjectsDirectory" href="core-documentmanager.html#setProjectsDirectory" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="119" documented="true" meta="plain" static="true" type="void" signature="void setProjectsDirectory(const Utils::FilePath &amp;directory)">
                    <parameter type="const Utils::FilePath &amp;" name="directory" default=""/>
                </function>
                <function name="setUseProjectsDirectory" fullname="Core::DocumentManager::setUseProjectsDirectory" href="core-documentmanager.html#setUseProjectsDirectory" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="116" documented="true" meta="plain" static="true" type="void" signature="void setUseProjectsDirectory(bool useProjectsDirectory)">
                    <parameter type="bool" name="useProjectsDirectory" default=""/>
                </function>
                <function name="unexpectFileChange" fullname="Core::DocumentManager::unexpectFileChange" href="core-documentmanager.html#unexpectFileChange" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="48" documented="true" meta="plain" static="true" type="void" signature="void unexpectFileChange(const Utils::FilePath &amp;filePath)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                </function>
                <function name="useProjectsDirectory" fullname="Core::DocumentManager::useProjectsDirectory" href="core-documentmanager.html#useProjectsDirectory" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="115" documented="true" meta="plain" static="true" type="bool" signature="bool useProjectsDirectory()"/>
            </class>
            <class name="EditorManager" fullname="Core::EditorManager" href="core-editormanager.html" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="45" documented="true" bases="QObject" module="QtCreator" brief="Manages the editors created for files according to their MIME type">
                <function name="aboutToSave" fullname="Core::EditorManager::aboutToSave" href="core-editormanager.html#aboutToSave" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="165" documented="true" meta="signal" type="void" signature="void aboutToSave(Core::IDocument *document)">
                    <parameter type="Core::IDocument *" name="document" default=""/>
                </function>
                <function name="activateEditor" fullname="Core::EditorManager::activateEditor" href="core-editormanager.html#activateEditor" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="98" documented="true" meta="plain" static="true" type="void" signature="void activateEditor(Core::IEditor *editor, Core::EditorManager::OpenEditorFlags flags)">
                    <parameter type="Core::IEditor *" name="editor" default=""/>
                    <parameter type="Core::EditorManager::OpenEditorFlags" name="flags" default="NoFlags"/>
                </function>
                <function name="activateEditorForDocument" fullname="Core::EditorManager::activateEditorForDocument" href="core-editormanager.html#activateEditorForDocument" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="100" documented="true" meta="plain" static="true" type="Core::IEditor *" signature="Core::IEditor * activateEditorForDocument(Core::IDocument *document, Core::EditorManager::OpenEditorFlags flags)">
                    <parameter type="Core::IDocument *" name="document" default=""/>
                    <parameter type="Core::EditorManager::OpenEditorFlags" name="flags" default="NoFlags"/>
                </function>
                <function name="activateEditorForEntry" fullname="Core::EditorManager::activateEditorForEntry" href="core-editormanager.html#activateEditorForEntry" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="99" documented="true" meta="plain" static="true" type="void" signature="void activateEditorForEntry(DocumentModel::Entry *entry, Core::EditorManager::OpenEditorFlags flags)">
                    <parameter type="DocumentModel::Entry *" name="entry" default=""/>
                    <parameter type="Core::EditorManager::OpenEditorFlags" name="flags" default="NoFlags"/>
                </function>
                <function name="addCloseEditorListener" fullname="Core::EditorManager::addCloseEditorListener" href="core-editormanager.html#addCloseEditorListener" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="90" documented="true" meta="plain" static="true" type="void" signature="void addCloseEditorListener(const std::function&lt;bool (IEditor *)&gt; &amp;listener)">
                    <parameter type="const std::function&lt;bool (IEditor *)&gt; &amp;" name="listener" default=""/>
                </function>
                <function name="addCurrentPositionToNavigationHistory" fullname="Core::EditorManager::addCurrentPositionToNavigationHistory" href="core-editormanager.html#addCurrentPositionToNavigationHistory" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="107" documented="true" meta="plain" static="true" type="void" signature="void addCurrentPositionToNavigationHistory(const QByteArray &amp;saveState)">
                    <parameter type="const QByteArray &amp;" name="saveState" default="QByteArray()"/>
                </function>
                <function name="addNativeDirAndOpenWithActions" fullname="Core::EditorManager::addNativeDirAndOpenWithActions" href="core-editormanager.html#addNativeDirAndOpenWithActions" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="143" documented="true" meta="plain" static="true" type="void" signature="void addNativeDirAndOpenWithActions(QMenu *contextMenu, DocumentModel::Entry *entry)">
                    <parameter type="QMenu *" name="contextMenu" default=""/>
                    <parameter type="DocumentModel::Entry *" name="entry" default=""/>
                </function>
                <function name="addPinEditorActions" fullname="Core::EditorManager::addPinEditorActions" href="core-editormanager.html#addPinEditorActions" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="142" documented="true" meta="plain" static="true" type="void" signature="void addPinEditorActions(QMenu *contextMenu, DocumentModel::Entry *entry)">
                    <parameter type="QMenu *" name="contextMenu" default=""/>
                    <parameter type="DocumentModel::Entry *" name="entry" default=""/>
                </function>
                <function name="addSaveAndCloseEditorActions" fullname="Core::EditorManager::addSaveAndCloseEditorActions" href="core-editormanager.html#addSaveAndCloseEditorActions" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="140" documented="true" meta="plain" static="true" type="void" signature="void addSaveAndCloseEditorActions(QMenu *contextMenu, DocumentModel::Entry *entry, Core::IEditor *editor)">
                    <parameter type="QMenu *" name="contextMenu" default=""/>
                    <parameter type="DocumentModel::Entry *" name="entry" default=""/>
                    <parameter type="Core::IEditor *" name="editor" default="nullptr"/>
                </function>
                <function name="autoSaved" fullname="Core::EditorManager::autoSaved" href="core-editormanager.html#autoSaved" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="167" documented="true" meta="signal" type="void" signature="void autoSaved()"/>
                <function name="clearUniqueId" fullname="Core::EditorManager::clearUniqueId" href="core-editormanager.html#clearUniqueId" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="87" documented="true" meta="plain" static="true" type="void" signature="void clearUniqueId(Core::IDocument *document)">
                    <parameter type="Core::IDocument *" name="document" default=""/>
                </function>
                <function name="closeAllDocuments" fullname="Core::EditorManager::closeAllDocuments" href="core-editormanager.html#closeAllDocuments" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="105" documented="true" meta="plain" static="true" type="bool" signature="bool closeAllDocuments()"/>
                <function name="closeAllEditors" fullname="Core::EditorManager::closeAllEditors" href="core-editormanager.html#closeAllEditors" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="178" documented="true" meta="slot" static="true" type="bool" signature="bool closeAllEditors(bool askAboutModifiedEditors)">
                    <parameter type="bool" name="askAboutModifiedEditors" default="true"/>
                </function>
                <function name="closeDocuments" fullname="Core::EditorManager::closeDocuments" href="core-editormanager.html#closeDocuments" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="102" documented="true" meta="plain" static="true" type="bool" signature="bool closeDocuments(const QList&lt;Core::IDocument *&gt; &amp;documents, bool askAboutModifiedEditors)">
                    <parameter type="const QList&lt;Core::IDocument *&gt; &amp;" name="documents" default=""/>
                    <parameter type="bool" name="askAboutModifiedEditors" default="true"/>
                </function>
                <function name="closeDocuments" fullname="Core::EditorManager::closeDocuments" href="core-editormanager.html#closeDocuments-1" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="103" documented="true" meta="plain" static="true" overload="true" overload-number="1" type="bool" signature="bool closeDocuments(const QList&lt;DocumentModel::Entry *&gt; &amp;entries)">
                    <parameter type="const QList&lt;DocumentModel::Entry *&gt; &amp;" name="entries" default=""/>
                </function>
                <function name="closeEditors" fullname="Core::EditorManager::closeEditors" href="core-editormanager.html#closeEditors" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="113" documented="true" meta="plain" static="true" type="bool" signature="bool closeEditors(const QList&lt;Core::IEditor *&gt; &amp;editorsToClose, bool askAboutModifiedEditors)">
                    <parameter type="const QList&lt;Core::IEditor *&gt; &amp;" name="editorsToClose" default=""/>
                    <parameter type="bool" name="askAboutModifiedEditors" default="true"/>
                </function>
                <function name="closeOtherDocuments" fullname="Core::EditorManager::closeOtherDocuments" href="core-editormanager.html#closeOtherDocuments" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="104" documented="true" meta="plain" static="true" type="void" signature="void closeOtherDocuments(Core::IDocument *document)">
                    <parameter type="Core::IDocument *" name="document" default=""/>
                </function>
                <function name="closeOtherDocuments" fullname="Core::EditorManager::closeOtherDocuments" href="core-editormanager.html#closeOtherDocuments-1" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="180" documented="true" meta="slot" static="true" overload="true" overload-number="1" type="void" signature="void closeOtherDocuments()"/>
                <function name="currentDocument" fullname="Core::EditorManager::currentDocument" href="core-editormanager.html#currentDocument" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="94" documented="true" meta="plain" static="true" type="Core::IDocument *" signature="Core::IDocument * currentDocument()"/>
                <function name="currentDocumentStateChanged" fullname="Core::EditorManager::currentDocumentStateChanged" href="core-editormanager.html#currentDocumentStateChanged" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="155" documented="true" meta="signal" type="void" signature="void currentDocumentStateChanged()"/>
                <function name="currentEditor" fullname="Core::EditorManager::currentEditor" href="core-editormanager.html#currentEditor" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="95" documented="true" meta="plain" static="true" type="Core::IEditor *" signature="Core::IEditor * currentEditor()"/>
                <function name="currentEditorAboutToChange" fullname="Core::EditorManager::currentEditorAboutToChange" href="core-editormanager.html#currentEditorAboutToChange" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="168" documented="true" meta="signal" type="void" signature="void currentEditorAboutToChange(Core::IEditor *editor)">
                    <parameter type="Core::IEditor *" name="editor" default=""/>
                </function>
                <function name="currentEditorChanged" fullname="Core::EditorManager::currentEditorChanged" href="core-editormanager.html#currentEditorChanged" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="154" documented="true" meta="signal" type="void" signature="void currentEditorChanged(Core::IEditor *editor)">
                    <parameter type="Core::IEditor *" name="editor" default=""/>
                </function>
                <function name="cutForwardNavigationHistory" fullname="Core::EditorManager::cutForwardNavigationHistory" href="core-editormanager.html#cutForwardNavigationHistory" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="109" documented="true" meta="plain" static="true" type="void" signature="void cutForwardNavigationHistory()"/>
                <function name="defaultLineEnding" fullname="Core::EditorManager::defaultLineEnding" href="core-editormanager.html#defaultLineEnding" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="132" documented="true" meta="plain" static="true" type="Utils::TextFileFormat::LineTerminationMode" signature="Utils::TextFileFormat::LineTerminationMode defaultLineEnding()"/>
                <function name="defaultTextCodec" fullname="Core::EditorManager::defaultTextCodec" href="core-editormanager.html#defaultTextCodec" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="130" documented="true" meta="plain" static="true" type="QTextCodec *" signature="QTextCodec * defaultTextCodec()"/>
                <function name="documentClosed" fullname="Core::EditorManager::documentClosed" href="core-editormanager.html#documentClosed" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="162" documented="true" meta="signal" type="void" signature="void documentClosed(Core::IDocument *document)">
                    <parameter type="Core::IDocument *" name="document" default=""/>
                </function>
                <function name="documentOpened" fullname="Core::EditorManager::documentOpened" href="core-editormanager.html#documentOpened" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="159" documented="true" meta="signal" type="void" signature="void documentOpened(Core::IDocument *document)">
                    <parameter type="Core::IDocument *" name="document" default=""/>
                </function>
                <function name="documentStateChanged" fullname="Core::EditorManager::documentStateChanged" href="core-editormanager.html#documentStateChanged" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="156" documented="true" meta="signal" type="void" signature="void documentStateChanged(Core::IDocument *document)">
                    <parameter type="Core::IDocument *" name="document" default=""/>
                </function>
                <function name="editorAboutToClose" fullname="Core::EditorManager::editorAboutToClose" href="core-editormanager.html#editorAboutToClose" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="160" documented="true" meta="signal" type="void" signature="void editorAboutToClose(Core::IEditor *editor)">
                    <parameter type="Core::IEditor *" name="editor" default=""/>
                </function>
                <function name="editorOpened" fullname="Core::EditorManager::editorOpened" href="core-editormanager.html#editorOpened" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="158" documented="true" meta="signal" type="void" signature="void editorOpened(Core::IEditor *editor)">
                    <parameter type="Core::IEditor *" name="editor" default=""/>
                </function>
                <function name="editorsClosed" fullname="Core::EditorManager::editorsClosed" href="core-editormanager.html#editorsClosed" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="161" documented="true" meta="signal" type="void" signature="void editorsClosed(QList&lt;Core::IEditor *&gt; editors)">
                    <parameter type="QList&lt;Core::IEditor *&gt;" name="editors" default=""/>
                </function>
                <function name="getOpenFilePaths" fullname="Core::EditorManager::getOpenFilePaths" href="core-editormanager.html#getOpenFilePaths" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="92" documented="true" meta="plain" static="true" type="Utils::FilePaths" signature="Utils::FilePaths getOpenFilePaths(QFileDialog::Options options)">
                    <parameter type="QFileDialog::Options" name="options" default="{}"/>
                </function>
                <function name="goBackInNavigationHistory" fullname="Core::EditorManager::goBackInNavigationHistory" href="core-editormanager.html#goBackInNavigationHistory" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="183" documented="true" meta="slot" static="true" type="void" signature="void goBackInNavigationHistory()"/>
                <function name="goForwardInNavigationHistory" fullname="Core::EditorManager::goForwardInNavigationHistory" href="core-editormanager.html#goForwardInNavigationHistory" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="184" documented="true" meta="slot" static="true" type="void" signature="void goForwardInNavigationHistory()"/>
                <function name="gotoOtherSplit" fullname="Core::EditorManager::gotoOtherSplit" href="core-editormanager.html#gotoOtherSplit" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="182" documented="true" meta="slot" static="true" type="void" signature="void gotoOtherSplit()"/>
                <function name="instance" fullname="Core::EditorManager::instance" href="core-editormanager.html#instance" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="52" documented="true" meta="plain" static="true" type="Core::EditorManager *" signature="Core::EditorManager * instance()"/>
                <function name="isAutoSaveFile" fullname="Core::EditorManager::isAutoSaveFile" href="core-editormanager.html#isAutoSaveFile" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="126" documented="true" meta="plain" static="true" type="bool" signature="bool isAutoSaveFile(const QString &amp;filePath)">
                    <parameter type="const QString &amp;" name="filePath" default=""/>
                </function>
                <function name="maxTextFileSize" fullname="Core::EditorManager::maxTextFileSize" href="core-editormanager.html#maxTextFileSize" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="134" documented="true" meta="plain" static="true" type="qint64" signature="qint64 maxTextFileSize()"/>
                <function name="openEditor" fullname="Core::EditorManager::openEditor" href="core-editormanager.html#openEditor" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="68" documented="true" meta="plain" static="true" type="Core::IEditor *" signature="Core::IEditor * openEditor(const Utils::FilePath &amp;filePath, Utils::Id editorId, Core::EditorManager::OpenEditorFlags flags, bool *newEditor)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                    <parameter type="Utils::Id" name="editorId" default="{}"/>
                    <parameter type="Core::EditorManager::OpenEditorFlags" name="flags" default="NoFlags"/>
                    <parameter type="bool *" name="newEditor" default="nullptr"/>
                </function>
                <function name="openEditorAt" fullname="Core::EditorManager::openEditorAt" href="core-editormanager.html#openEditorAt" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="72" documented="true" meta="plain" static="true" type="Core::IEditor *" signature="Core::IEditor * openEditorAt(const Utils::Link &amp;link, Utils::Id editorId, Core::EditorManager::OpenEditorFlags flags, bool *newEditor)">
                    <parameter type="const Utils::Link &amp;" name="link" default=""/>
                    <parameter type="Utils::Id" name="editorId" default="{}"/>
                    <parameter type="Core::EditorManager::OpenEditorFlags" name="flags" default="NoFlags"/>
                    <parameter type="bool *" name="newEditor" default="nullptr"/>
                </function>
                <function name="openEditorAtSearchResult" fullname="Core::EditorManager::openEditorAtSearchResult" href="core-editormanager.html#openEditorAtSearchResult" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="78" documented="true" meta="plain" static="true" type="void" signature="void openEditorAtSearchResult(const Utils::SearchResultItem &amp;item, Utils::Id editorId, Core::EditorManager::OpenEditorFlags flags, bool *newEditor)">
                    <parameter type="const Utils::SearchResultItem &amp;" name="item" default=""/>
                    <parameter type="Utils::Id" name="editorId" default="{}"/>
                    <parameter type="Core::EditorManager::OpenEditorFlags" name="flags" default="NoFlags"/>
                    <parameter type="bool *" name="newEditor" default="nullptr"/>
                </function>
                <function name="openEditorWithContents" fullname="Core::EditorManager::openEditorWithContents" href="core-editormanager.html#openEditorWithContents" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="82" documented="true" meta="plain" static="true" type="Core::IEditor *" signature="Core::IEditor * openEditorWithContents(Utils::Id editorId, QString *titlePattern, const QByteArray &amp;contents, const QString &amp;uniqueId, Core::EditorManager::OpenEditorFlags flags)">
                    <parameter type="Utils::Id" name="editorId" default=""/>
                    <parameter type="QString *" name="titlePattern" default="nullptr"/>
                    <parameter type="const QByteArray &amp;" name="contents" default="QByteArray()"/>
                    <parameter type="const QString &amp;" name="uniqueId" default="QString()"/>
                    <parameter type="Core::EditorManager::OpenEditorFlags" name="flags" default="NoFlags"/>
                </function>
                <function name="openExternalEditor" fullname="Core::EditorManager::openExternalEditor" href="core-editormanager.html#openExternalEditor" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="89" documented="true" meta="plain" static="true" type="bool" signature="bool openExternalEditor(const Utils::FilePath &amp;filePath, Utils::Id editorId)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                    <parameter type="Utils::Id" name="editorId" default=""/>
                </function>
                <function name="populateOpenWithMenu" fullname="Core::EditorManager::populateOpenWithMenu" href="core-editormanager.html#populateOpenWithMenu" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="144" documented="true" meta="plain" static="true" type="void" signature="void populateOpenWithMenu(QMenu *menu, const Utils::FilePath &amp;filePath)">
                    <parameter type="QMenu *" name="menu" default=""/>
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                </function>
                <function name="reloadSetting" fullname="Core::EditorManager::reloadSetting" href="core-editormanager.html#reloadSetting" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="150" documented="true" meta="plain" static="true" type="IDocument::ReloadSetting" signature="IDocument::ReloadSetting reloadSetting()"/>
                <function name="revertToSaved" fullname="Core::EditorManager::revertToSaved" href="core-editormanager.html#revertToSaved" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="177" documented="true" meta="slot" static="true" type="void" signature="void revertToSaved()"/>
                <function name="saveDocument" fullname="Core::EditorManager::saveDocument" href="core-editormanager.html#saveDocument" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="111" documented="true" meta="plain" static="true" type="bool" signature="bool saveDocument(Core::IDocument *document)">
                    <parameter type="Core::IDocument *" name="document" default=""/>
                </function>
                <function name="saveDocument" fullname="Core::EditorManager::saveDocument" href="core-editormanager.html#saveDocument-1" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="175" documented="true" meta="slot" static="true" overload="true" overload-number="1" type="void" signature="void saveDocument()"/>
                <function name="saveDocumentAs" fullname="Core::EditorManager::saveDocumentAs" href="core-editormanager.html#saveDocumentAs" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="176" documented="true" meta="slot" static="true" type="void" signature="void saveDocumentAs()"/>
                <function name="saved" fullname="Core::EditorManager::saved" href="core-editormanager.html#saved" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="166" documented="true" meta="signal" type="void" signature="void saved(Core::IDocument *document)">
                    <parameter type="Core::IDocument *" name="document" default=""/>
                </function>
                <function name="setLastEditLocation" fullname="Core::EditorManager::setLastEditLocation" href="core-editormanager.html#setLastEditLocation" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="108" documented="true" meta="plain" static="true" type="void" signature="void setLastEditLocation(const Core::IEditor *editor)">
                    <parameter type="const Core::IEditor *" name="editor" default=""/>
                </function>
                <function name="skipOpeningBigTextFile" fullname="Core::EditorManager::skipOpeningBigTextFile" href="core-editormanager.html#skipOpeningBigTextFile" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="86" documented="true" meta="plain" static="true" type="bool" signature="bool skipOpeningBigTextFile(const Utils::FilePath &amp;filePath)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                </function>
                <function name="splitSideBySide" fullname="Core::EditorManager::splitSideBySide" href="core-editormanager.html#splitSideBySide" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="181" documented="true" meta="slot" static="true" type="void" signature="void splitSideBySide()"/>
                <function name="visibleEditors" fullname="Core::EditorManager::visibleEditors" href="core-editormanager.html#visibleEditors" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="96" documented="true" meta="plain" static="true" type="QList&lt;Core::IEditor *&gt;" signature="QList&lt;Core::IEditor *&gt; visibleEditors()"/>
                <enum name="OpenEditorFlag" fullname="Core::EditorManager::OpenEditorFlag" href="core-editormanager.html#OpenEditorFlag-enum" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="54" documented="true" typedef="Core::EditorManager::OpenEditorFlags">
                    <value name="NoFlags" value="0"/>
                    <value name="DoNotChangeCurrentEditor" value="1"/>
                    <value name="IgnoreNavigationHistory" value="2"/>
                    <value name="DoNotMakeVisible" value="4"/>
                    <value name="OpenInOtherSplit" value="8"/>
                    <value name="DoNotSwitchToDesignMode" value="16"/>
                    <value name="DoNotSwitchToEditMode" value="32"/>
                    <value name="SwitchSplitIfAlreadyVisible" value="64"/>
                    <value name="DoNotRaise" value="128"/>
                    <value name="AllowExternalEditor" value="256"/>
                </enum>
                <typedef name="OpenEditorFlags" fullname="Core::EditorManager::OpenEditorFlags" href="core-editormanager.html#OpenEditorFlag-enum" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="66" enum="Core::EditorManager::OpenEditorFlag"/>
            </class>
            <class name="EditorManagerPlaceHolder" fullname="Core::EditorManagerPlaceHolder" href="core-editormanagerplaceholder.html" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="34" documented="true" groups="mainclasses" bases="QWidget" module="QtCreator" brief="Used to integrate an editor area into a mode">
                <function name="EditorManagerPlaceHolder" fullname="Core::EditorManagerPlaceHolder::EditorManagerPlaceHolder" href="core-editormanagerplaceholder.html#EditorManagerPlaceHolder" status="active" access="public" location="editormanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/editormanager.h" lineno="38" documented="true" meta="constructor" explicit="true" signature="EditorManagerPlaceHolder(QWidget *parent)">
                    <parameter type="QWidget *" name="parent" default="nullptr"/>
                </function>
            </class>
            <class name="FileChangeBlocker" fullname="Core::FileChangeBlocker" href="core-filechangeblocker.html" status="active" access="public" location="documentmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/documentmanager.h" lineno="159" documented="true" module="QtCreator" brief="Blocks all change notifications to all IDocument objects that match the given filename"/>
            <class name="FutureProgress" fullname="Core::FutureProgress" href="core-futureprogress.html" status="active" access="public" location="futureprogress.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/futureprogress.h" lineno="17" documented="true" groups="mainclasses" bases="QWidget" module="QtCreator" brief="Used to adapt the appearance of progress indicators that were created through the ProgressManager class">
                <function name="canceled" fullname="Core::FutureProgress::canceled" href="core-futureprogress.html#canceled" status="active" access="public" location="futureprogress.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/futureprogress.h" lineno="68" documented="true" meta="signal" type="void" signature="void canceled()"/>
                <function name="clicked" fullname="Core::FutureProgress::clicked" href="core-futureprogress.html#clicked" status="active" access="public" location="futureprogress.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/futureprogress.h" lineno="66" documented="true" meta="signal" type="void" signature="void clicked()"/>
                <function name="finished" fullname="Core::FutureProgress::finished" href="core-futureprogress.html#finished" status="active" access="public" location="futureprogress.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/futureprogress.h" lineno="67" documented="true" meta="signal" type="void" signature="void finished()"/>
                <function name="future" fullname="Core::FutureProgress::future" href="core-futureprogress.html#future" status="active" access="public" location="futureprogress.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/futureprogress.h" lineno="33" documented="true" meta="plain" const="true" type="QFuture&lt;void&gt;" signature="QFuture&lt;void&gt; future() const"/>
                <function name="hasError" fullname="Core::FutureProgress::hasError" href="core-futureprogress.html#hasError" status="active" access="public" location="futureprogress.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/futureprogress.h" lineno="50" documented="true" meta="plain" const="true" type="bool" signature="bool hasError() const"/>
                <function name="setTitle" fullname="Core::FutureProgress::setTitle" href="core-futureprogress.html#setTitle" status="active" access="public" location="futureprogress.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/futureprogress.h" lineno="35" documented="true" meta="plain" type="void" signature="void setTitle(const QString &amp;title)">
                    <parameter type="const QString &amp;" name="title" default=""/>
                </function>
                <function name="setWidget" fullname="Core::FutureProgress::setWidget" href="core-futureprogress.html#setWidget" status="active" access="public" location="futureprogress.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/futureprogress.h" lineno="52" documented="true" meta="plain" type="void" signature="void setWidget(QWidget *widget)">
                    <parameter type="QWidget *" name="widget" default=""/>
                </function>
                <function name="title" fullname="Core::FutureProgress::title" href="core-futureprogress.html#title" status="active" access="public" location="futureprogress.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/futureprogress.h" lineno="36" documented="true" meta="plain" const="true" type="QString" signature="QString title() const"/>
                <function name="widget" fullname="Core::FutureProgress::widget" href="core-futureprogress.html#widget" status="active" access="public" location="futureprogress.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/futureprogress.h" lineno="53" documented="true" meta="plain" const="true" type="QWidget *" signature="QWidget * widget() const"/>
            </class>
            <class name="GeneratedFile" fullname="Core::GeneratedFile" href="core-generatedfile.html" status="active" access="public" location="generatedfile.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/generatedfile.h" lineno="18" documented="true" module="QtCreator" brief="Represents a file generated by a wizard">
                <typedef name="Attributes" fullname="Core::GeneratedFile::Attributes" href="core-generatedfile.html#Attribute-enum" status="active" access="public" location="generatedfile.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/generatedfile.h" lineno="35" enum="Core::GeneratedFile::Attribute"/>
            </class>
            <class name="IContext" fullname="Core::IContext" href="core-icontext.html" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../icontext.h" lineno="48" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Associates a widget with a context list and context help">
                <function name="IContext" fullname="Core::IContext::IContext" href="core-icontext.html#IContext" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../icontext.h" lineno="52" documented="true" meta="constructor" signature="IContext(QObject *parent)">
                    <parameter type="QObject *" name="parent" default="nullptr"/>
                </function>
                <function name="context" fullname="Core::IContext::context" href="core-icontext.html#context" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../icontext.h" lineno="54" documented="true" meta="plain" virtual="virtual" const="true" type="Core::Context" signature="Core::Context context() const"/>
                <function name="contextHelp" fullname="Core::IContext::contextHelp" href="core-icontext.html#contextHelp" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../icontext.h" lineno="57" documented="true" meta="plain" virtual="virtual" const="true" type="void" signature="void contextHelp(const Core::IContext::HelpCallback &amp;callback) const">
                    <parameter type="const Core::IContext::HelpCallback &amp;" name="callback" default=""/>
                </function>
                <function name="setContext" fullname="Core::IContext::setContext" href="core-icontext.html#setContext" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../icontext.h" lineno="59" documented="true" meta="plain" virtual="virtual" type="void" signature="void setContext(const Core::Context &amp;context)">
                    <parameter type="const Core::Context &amp;" name="context" default=""/>
                </function>
                <function name="setContextHelp" fullname="Core::IContext::setContextHelp" href="core-icontext.html#setContextHelp" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../icontext.h" lineno="61" documented="true" meta="plain" virtual="virtual" type="void" signature="void setContextHelp(const Core::HelpItem &amp;id)">
                    <parameter type="const Core::HelpItem &amp;" name="id" default=""/>
                </function>
                <function name="setWidget" fullname="Core::IContext::setWidget" href="core-icontext.html#setWidget" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../icontext.h" lineno="60" documented="true" meta="plain" virtual="virtual" type="void" signature="void setWidget(QWidget *widget)">
                    <parameter type="QWidget *" name="widget" default=""/>
                </function>
                <function name="widget" fullname="Core::IContext::widget" href="core-icontext.html#widget" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../icontext.h" lineno="55" documented="true" meta="plain" virtual="virtual" const="true" type="QWidget *" signature="QWidget * widget() const"/>
                <typedef name="HelpCallback" fullname="Core::IContext::HelpCallback" href="core-icontext.html#HelpCallback-typedef" status="active" access="public" location="icontext.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../icontext.h" lineno="56" documented="true" aliasedtype="std::function&lt;void(const HelpItem &amp;item)&gt;"/>
            </class>
            <class name="ICore" fullname="Core::ICore" href="core-icore.html" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="35" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Allows access to the different parts that make up the basic functionality of Qt Creator">
                <function name="addAdditionalContext" fullname="Core::ICore::addAdditionalContext" href="core-icore.html#addAdditionalContext" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="95" documented="true" meta="plain" static="true" type="void" signature="void addAdditionalContext(const Core::Context &amp;context, Core::ICore::ContextPriority priority)">
                    <parameter type="const Core::Context &amp;" name="context" default=""/>
                    <parameter type="Core::ICore::ContextPriority" name="priority" default="ContextPriority::Low"/>
                </function>
                <function name="addContextObject" fullname="Core::ICore::addContextObject" href="core-icore.html#addContextObject" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="98" documented="true" meta="plain" static="true" type="void" signature="void addContextObject(Core::IContext *context)">
                    <parameter type="Core::IContext *" name="context" default=""/>
                </function>
                <function name="addPreCloseListener" fullname="Core::ICore::addPreCloseListener" href="core-icore.html#addPreCloseListener" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="115" documented="true" meta="plain" static="true" type="void" signature="void addPreCloseListener(const std::function&lt;bool ()&gt; &amp;listener)">
                    <parameter type="const std::function&lt;bool ()&gt; &amp;" name="listener" default=""/>
                </function>
                <function name="askForRestart" fullname="Core::ICore::askForRestart" href="core-icore.html#askForRestart" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="85" documented="true" meta="plain" static="true" type="void" signature="void askForRestart(const QString &amp;text)">
                    <parameter type="const QString &amp;" name="text" default=""/>
                </function>
                <function name="cacheResourcePath" fullname="Core::ICore::cacheResourcePath" href="core-icore.html#cacheResourcePath" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="74" documented="true" meta="plain" static="true" type="Utils::FilePath" signature="Utils::FilePath cacheResourcePath(const QString &amp;rel)">
                    <parameter type="const QString &amp;" name="rel" default="{}"/>
                </function>
                <function name="contextAboutToChange" fullname="Core::ICore::contextAboutToChange" href="core-icore.html#contextAboutToChange" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="135" documented="true" meta="signal" type="void" signature="void contextAboutToChange(const QList&lt;Core::IContext *&gt; &amp;context)">
                    <parameter type="const QList&lt;Core::IContext *&gt; &amp;" name="context" default=""/>
                </function>
                <function name="contextChanged" fullname="Core::ICore::contextChanged" href="core-icore.html#contextChanged" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="136" documented="true" meta="signal" type="void" signature="void contextChanged(const Core::Context &amp;context)">
                    <parameter type="const Core::Context &amp;" name="context" default=""/>
                </function>
                <function name="contextObject" fullname="Core::ICore::contextObject" href="core-icore.html#contextObject" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="92" documented="true" meta="plain" static="true" type="Core::IContext *" signature="Core::IContext * contextObject(QWidget *widget)">
                    <parameter type="QWidget *" name="widget" default=""/>
                </function>
                <function name="coreAboutToClose" fullname="Core::ICore::coreAboutToClose" href="core-icore.html#coreAboutToClose" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="134" documented="true" meta="signal" type="void" signature="void coreAboutToClose()"/>
                <function name="coreAboutToOpen" fullname="Core::ICore::coreAboutToOpen" href="core-icore.html#coreAboutToOpen" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="130" documented="true" meta="signal" type="void" signature="void coreAboutToOpen()"/>
                <function name="coreOpened" fullname="Core::ICore::coreOpened" href="core-icore.html#coreOpened" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="131" documented="true" meta="signal" type="void" signature="void coreOpened()"/>
                <function name="currentContextObject" fullname="Core::ICore::currentContextObject" href="core-icore.html#currentContextObject" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="90" documented="true" meta="plain" static="true" type="Core::IContext *" signature="Core::IContext * currentContextObject()"/>
                <function name="currentContextWidget" fullname="Core::ICore::currentContextWidget" href="core-icore.html#currentContextWidget" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="91" documented="true" meta="plain" static="true" type="QWidget *" signature="QWidget * currentContextWidget()"/>
                <function name="dialogParent" fullname="Core::ICore::dialogParent" href="core-icore.html#dialogParent" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="82" documented="true" meta="plain" static="true" type="QWidget *" signature="QWidget * dialogParent()"/>
                <function name="infoBar" fullname="Core::ICore::infoBar" href="core-icore.html#infoBar" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="83" documented="true" meta="plain" static="true" type="Utils::InfoBar *" signature="Utils::InfoBar * infoBar()"/>
                <function name="installerResourcePath" fullname="Core::ICore::installerResourcePath" href="core-icore.html#installerResourcePath" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="75" documented="true" meta="plain" static="true" type="Utils::FilePath" signature="Utils::FilePath installerResourcePath(const QString &amp;rel)">
                    <parameter type="const QString &amp;" name="rel" default="{}"/>
                </function>
                <function name="instance" fullname="Core::ICore::instance" href="core-icore.html#instance" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="48" documented="true" meta="plain" static="true" type="Core::ICore *" signature="Core::ICore * instance()"/>
                <function name="isNewItemDialogRunning" fullname="Core::ICore::isNewItemDialogRunning" href="core-icore.html#isNewItemDialogRunning" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="50" documented="true" meta="plain" static="true" type="bool" signature="bool isNewItemDialogRunning()"/>
                <function name="libexecPath" fullname="Core::ICore::libexecPath" href="core-icore.html#libexecPath" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="76" documented="true" meta="plain" static="true" type="Utils::FilePath" signature="Utils::FilePath libexecPath(const QString &amp;rel)">
                    <parameter type="const QString &amp;" name="rel" default="{}"/>
                </function>
                <function name="mainWindow" fullname="Core::ICore::mainWindow" href="core-icore.html#mainWindow" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="81" documented="true" meta="plain" static="true" type="QMainWindow *" signature="QMainWindow * mainWindow()"/>
                <function name="msgShowOptionsDialog" fullname="Core::ICore::msgShowOptionsDialog" href="core-icore.html#msgShowOptionsDialog" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="59" documented="true" meta="plain" static="true" type="QString" signature="QString msgShowOptionsDialog()"/>
                <function name="msgShowOptionsDialogToolTip" fullname="Core::ICore::msgShowOptionsDialogToolTip" href="core-icore.html#msgShowOptionsDialogToolTip" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="60" documented="true" meta="plain" static="true" type="QString" signature="QString msgShowOptionsDialogToolTip()"/>
                <function name="newItemDialog" fullname="Core::ICore::newItemDialog" href="core-icore.html#newItemDialog" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="51" documented="true" meta="plain" static="true" type="QWidget *" signature="QWidget * newItemDialog()"/>
                <function name="printer" fullname="Core::ICore::printer" href="core-icore.html#printer" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="69" documented="true" meta="plain" static="true" type="QPrinter *" signature="QPrinter * printer()"/>
                <function name="raiseWindow" fullname="Core::ICore::raiseWindow" href="core-icore.html#raiseWindow" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="87" documented="true" meta="plain" static="true" type="void" signature="void raiseWindow(QWidget *widget)">
                    <parameter type="QWidget *" name="widget" default=""/>
                </function>
                <function name="registerWindow" fullname="Core::ICore::registerWindow" href="core-icore.html#registerWindow" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="101" documented="true" meta="plain" static="true" type="void" signature="void registerWindow(QWidget *window, const Core::Context &amp;context, const Core::Context &amp;actionContext)">
                    <parameter type="QWidget *" name="window" default=""/>
                    <parameter type="const Core::Context &amp;" name="context" default=""/>
                    <parameter type="const Core::Context &amp;" name="actionContext" default="{}"/>
                </function>
                <function name="removeAdditionalContext" fullname="Core::ICore::removeAdditionalContext" href="core-icore.html#removeAdditionalContext" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="97" documented="true" meta="plain" static="true" type="void" signature="void removeAdditionalContext(const Core::Context &amp;context)">
                    <parameter type="const Core::Context &amp;" name="context" default=""/>
                </function>
                <function name="removeContextObject" fullname="Core::ICore::removeContextObject" href="core-icore.html#removeContextObject" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="99" documented="true" meta="plain" static="true" type="void" signature="void removeContextObject(Core::IContext *context)">
                    <parameter type="Core::IContext *" name="context" default=""/>
                </function>
                <function name="resourcePath" fullname="Core::ICore::resourcePath" href="core-icore.html#resourcePath" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="72" documented="true" meta="plain" static="true" type="Utils::FilePath" signature="Utils::FilePath resourcePath(const QString &amp;rel)">
                    <parameter type="const QString &amp;" name="rel" default="{}"/>
                </function>
                <function name="restart" fullname="Core::ICore::restart" href="core-icore.html#restart" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="117" documented="true" meta="plain" static="true" type="void" signature="void restart()"/>
                <function name="saveSettingsRequested" fullname="Core::ICore::saveSettingsRequested" href="core-icore.html#saveSettingsRequested" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="133" documented="true" meta="signal" type="void" signature="void saveSettingsRequested(Core::ICore::SaveSettingsReason reason)">
                    <parameter type="Core::ICore::SaveSettingsReason" name="reason" default=""/>
                </function>
                <function name="settings" fullname="Core::ICore::settings" href="core-icore.html#settings" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="68" documented="true" meta="plain" static="true" type="Utils::QtcSettings *" signature="Utils::QtcSettings * settings(QSettings::Scope scope)">
                    <parameter type="QSettings::Scope" name="scope" default="QSettings::UserScope"/>
                </function>
                <function name="showNewItemDialog" fullname="Core::ICore::showNewItemDialog" href="core-icore.html#showNewItemDialog" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="52" documented="true" meta="plain" static="true" type="void" signature="void showNewItemDialog(const QString &amp;title, const QList&lt;Core::IWizardFactory *&gt; &amp;factories, const Utils::FilePath &amp;defaultLocation, const QVariantMap &amp;extraVariables)">
                    <parameter type="const QString &amp;" name="title" default=""/>
                    <parameter type="const QList&lt;Core::IWizardFactory *&gt; &amp;" name="factories" default=""/>
                    <parameter type="const Utils::FilePath &amp;" name="defaultLocation" default="{}"/>
                    <parameter type="const QVariantMap &amp;" name="extraVariables" default="{}"/>
                </function>
                <function name="showOptionsDialog" fullname="Core::ICore::showOptionsDialog" href="core-icore.html#showOptionsDialog" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="57" documented="true" meta="plain" static="true" type="bool" signature="bool showOptionsDialog(const Utils::Id page, QWidget *parent)">
                    <parameter type="const Utils::Id" name="page" default=""/>
                    <parameter type="QWidget *" name="parent" default="nullptr"/>
                </function>
                <function name="showOptionsDialog" fullname="Core::ICore::showOptionsDialog" href="core-icore.html#showOptionsDialog-1" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="58" documented="true" meta="plain" static="true" overload="true" overload-number="1" type="bool" signature="bool showOptionsDialog(const Utils::Id page, Utils::Id item, QWidget *parent)">
                    <parameter type="const Utils::Id" name="page" default=""/>
                    <parameter type="Utils::Id" name="item" default=""/>
                    <parameter type="QWidget *" name="parent" default="nullptr"/>
                </function>
                <function name="showWarningWithOptions" fullname="Core::ICore::showWarningWithOptions" href="core-icore.html#showWarningWithOptions" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="62" documented="true" meta="plain" static="true" type="bool" signature="bool showWarningWithOptions(const QString &amp;title, const QString &amp;text, const QString &amp;details, Utils::Id settingsId, QWidget *parent)">
                    <parameter type="const QString &amp;" name="title" default=""/>
                    <parameter type="const QString &amp;" name="text" default=""/>
                    <parameter type="const QString &amp;" name="details" default="QString()"/>
                    <parameter type="Utils::Id" name="settingsId" default="{}"/>
                    <parameter type="QWidget *" name="parent" default="nullptr"/>
                </function>
                <function name="updateAdditionalContexts" fullname="Core::ICore::updateAdditionalContexts" href="core-icore.html#updateAdditionalContexts" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="93" documented="true" meta="plain" static="true" type="void" signature="void updateAdditionalContexts(const Core::Context &amp;remove, const Core::Context &amp;add, Core::ICore::ContextPriority priority)">
                    <parameter type="const Core::Context &amp;" name="remove" default=""/>
                    <parameter type="const Core::Context &amp;" name="add" default=""/>
                    <parameter type="Core::ICore::ContextPriority" name="priority" default="ContextPriority::Low"/>
                </function>
                <function name="userInterfaceLanguage" fullname="Core::ICore::userInterfaceLanguage" href="core-icore.html#userInterfaceLanguage" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="70" documented="true" meta="plain" static="true" type="QString" signature="QString userInterfaceLanguage()"/>
                <function name="userResourcePath" fullname="Core::ICore::userResourcePath" href="core-icore.html#userResourcePath" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="73" documented="true" meta="plain" static="true" type="Utils::FilePath" signature="Utils::FilePath userResourcePath(const QString &amp;rel)">
                    <parameter type="const QString &amp;" name="rel" default="{}"/>
                </function>
                <function name="versionString" fullname="Core::ICore::versionString" href="core-icore.html#versionString" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="79" documented="true" meta="plain" static="true" type="QString" signature="QString versionString()"/>
                <enum name="ContextPriority" fullname="Core::ICore::ContextPriority" href="core-icore.html#ContextPriority-enum" status="active" access="public" location="icore.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/icore.h" lineno="43" documented="true" scoped="true">
                    <value name="High" value="0"/>
                    <value name="Low" value="1"/>
                </enum>
            </class>
            <class name="IDocument" fullname="Core::IDocument" href="core-idocument.html" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="24" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Describes a document that can be saved and reloaded">
                <contents name="handling-external-modifications" title="Handling External Modifications" level="1"/>
                <contents name="editor-document" title="Editor Document" level="1"/>
                <function name="IDocument" fullname="Core::IDocument::IDocument" href="core-idocument.html#IDocument" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="63" documented="true" meta="constructor" signature="IDocument(QObject *parent)">
                    <parameter type="QObject *" name="parent" default="nullptr"/>
                </function>
                <function name="aboutToReload" fullname="Core::IDocument::aboutToReload" href="core-idocument.html#aboutToReload" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="126" documented="true" meta="signal" type="void" signature="void aboutToReload()"/>
                <function name="aboutToSave" fullname="Core::IDocument::aboutToSave" href="core-idocument.html#aboutToSave" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="128" documented="true" meta="signal" type="void" signature="void aboutToSave(const Utils::FilePath &amp;filePath, bool autoSave)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                    <parameter type="bool" name="autoSave" default=""/>
                </function>
                <function name="changed" fullname="Core::IDocument::changed" href="core-idocument.html#changed" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="119" documented="true" meta="signal" type="void" signature="void changed()"/>
                <function name="checkPermissions" fullname="Core::IDocument::checkPermissions" href="core-idocument.html#checkPermissions" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="105" documented="true" meta="plain" type="void" signature="void checkPermissions()"/>
                <function name="contents" fullname="Core::IDocument::contents" href="core-idocument.html#contents" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="73" documented="true" meta="plain" virtual="virtual" const="true" type="QByteArray" signature="QByteArray contents() const"/>
                <function name="contentsChanged" fullname="Core::IDocument::contentsChanged" href="core-idocument.html#contentsChanged" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="122" documented="true" meta="signal" type="void" signature="void contentsChanged()"/>
                <function name="displayName" fullname="Core::IDocument::displayName" href="core-idocument.html#displayName" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="79" documented="true" meta="plain" const="true" type="QString" signature="QString displayName() const"/>
                <function name="fallbackSaveAsFileName" fullname="Core::IDocument::fallbackSaveAsFileName" href="core-idocument.html#fallbackSaveAsFileName" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="91" documented="true" meta="plain" virtual="virtual" const="true" type="QString" signature="QString fallbackSaveAsFileName() const"/>
                <function name="fallbackSaveAsPath" fullname="Core::IDocument::fallbackSaveAsPath" href="core-idocument.html#fallbackSaveAsPath" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="90" documented="true" meta="plain" virtual="virtual" const="true" type="Utils::FilePath" signature="Utils::FilePath fallbackSaveAsPath() const"/>
                <function name="filePath" fullname="Core::IDocument::filePath" href="core-idocument.html#filePath" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="77" documented="true" meta="plain" const="true" type="const Utils::FilePath &amp;" signature="const Utils::FilePath &amp; filePath() const"/>
                <function name="filePathChanged" fullname="Core::IDocument::filePathChanged" href="core-idocument.html#filePathChanged" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="131" documented="true" meta="signal" type="void" signature="void filePathChanged(const Utils::FilePath &amp;oldName, const Utils::FilePath &amp;newName)">
                    <parameter type="const Utils::FilePath &amp;" name="oldName" default=""/>
                    <parameter type="const Utils::FilePath &amp;" name="newName" default=""/>
                </function>
                <function name="formatContents" fullname="Core::IDocument::formatContents" href="core-idocument.html#formatContents" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="75" documented="true" meta="plain" virtual="virtual" type="void" signature="void formatContents()"/>
                <function name="id" fullname="Core::IDocument::id" href="core-idocument.html#id" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="67" documented="true" meta="plain" const="true" type="Utils::Id" signature="Utils::Id id() const"/>
                <function name="infoBar" fullname="Core::IDocument::infoBar" href="core-idocument.html#infoBar" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="114" documented="true" meta="plain" type="Utils::InfoBar *" signature="Utils::InfoBar * infoBar()"/>
                <function name="isFileReadOnly" fullname="Core::IDocument::isFileReadOnly" href="core-idocument.html#isFileReadOnly" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="86" documented="true" meta="plain" const="true" type="bool" signature="bool isFileReadOnly() const"/>
                <function name="isModified" fullname="Core::IDocument::isModified" href="core-idocument.html#isModified" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="97" documented="true" meta="plain" virtual="virtual" const="true" type="bool" signature="bool isModified() const"/>
                <function name="isSaveAsAllowed" fullname="Core::IDocument::isSaveAsAllowed" href="core-idocument.html#isSaveAsAllowed" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="98" documented="true" meta="plain" virtual="virtual" const="true" type="bool" signature="bool isSaveAsAllowed() const"/>
                <function name="isSuspendAllowed" fullname="Core::IDocument::isSuspendAllowed" href="core-idocument.html#isSuspendAllowed" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="99" documented="true" meta="plain" const="true" type="bool" signature="bool isSuspendAllowed() const"/>
                <function name="isTemporary" fullname="Core::IDocument::isTemporary" href="core-idocument.html#isTemporary" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="87" documented="true" meta="plain" const="true" type="bool" signature="bool isTemporary() const"/>
                <function name="mimeType" fullname="Core::IDocument::mimeType" href="core-idocument.html#mimeType" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="93" documented="true" meta="plain" const="true" type="QString" signature="QString mimeType() const"/>
                <function name="mimeTypeChanged" fullname="Core::IDocument::mimeTypeChanged" href="core-idocument.html#mimeTypeChanged" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="124" documented="true" meta="signal" type="void" signature="void mimeTypeChanged()"/>
                <function name="open" fullname="Core::IDocument::open" href="core-idocument.html#open" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="69" documented="true" meta="plain" virtual="virtual" type="Core::IDocument::OpenResult" signature="Core::IDocument::OpenResult open(QString *errorString, const Utils::FilePath &amp;filePath, const Utils::FilePath &amp;realFilePath)">
                    <parameter type="QString *" name="errorString" default=""/>
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                    <parameter type="const Utils::FilePath &amp;" name="realFilePath" default=""/>
                </function>
                <function name="preferredDisplayName" fullname="Core::IDocument::preferredDisplayName" href="core-idocument.html#preferredDisplayName" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="81" documented="true" meta="plain" const="true" type="QString" signature="QString preferredDisplayName() const"/>
                <function name="reload" fullname="Core::IDocument::reload" href="core-idocument.html#reload" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="103" documented="true" meta="plain" virtual="virtual" type="bool" signature="bool reload(QString *errorString, Core::IDocument::ReloadFlag flag, Core::IDocument::ChangeType type)">
                    <parameter type="QString *" name="errorString" default=""/>
                    <parameter type="Core::IDocument::ReloadFlag" name="flag" default=""/>
                    <parameter type="Core::IDocument::ChangeType" name="type" default=""/>
                </function>
                <function name="reloadBehavior" fullname="Core::IDocument::reloadBehavior" href="core-idocument.html#reloadBehavior" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="102" documented="true" meta="plain" virtual="virtual" const="true" type="Core::IDocument::ReloadBehavior" signature="Core::IDocument::ReloadBehavior reloadBehavior(Core::IDocument::ChangeTrigger trigger, Core::IDocument::ChangeType type) const">
                    <parameter type="Core::IDocument::ChangeTrigger" name="trigger" default=""/>
                    <parameter type="Core::IDocument::ChangeType" name="type" default=""/>
                </function>
                <function name="reloadFinished" fullname="Core::IDocument::reloadFinished" href="core-idocument.html#reloadFinished" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="127" documented="true" meta="signal" type="void" signature="void reloadFinished(bool success)">
                    <parameter type="bool" name="success" default=""/>
                </function>
                <function name="save" fullname="Core::IDocument::save" href="core-idocument.html#save" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="71" documented="true" meta="plain" type="bool" signature="bool save(QString *errorString, const Utils::FilePath &amp;filePath, bool autoSave)">
                    <parameter type="QString *" name="errorString" default=""/>
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default="Utils::FilePath()"/>
                    <parameter type="bool" name="autoSave" default="false"/>
                </function>
                <function name="saveImpl" fullname="Core::IDocument::saveImpl" href="core-idocument.html#saveImpl" status="active" access="protected" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="134" documented="true" meta="plain" virtual="virtual" type="bool" signature="bool saveImpl(QString *errorString, const Utils::FilePath &amp;filePath, bool autoSave)">
                    <parameter type="QString *" name="errorString" default=""/>
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default="Utils::FilePath()"/>
                    <parameter type="bool" name="autoSave" default="false"/>
                </function>
                <function name="saved" fullname="Core::IDocument::saved" href="core-idocument.html#saved" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="129" documented="true" meta="signal" type="void" signature="void saved(const Utils::FilePath &amp;filePath, bool autoSave)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                    <parameter type="bool" name="autoSave" default=""/>
                </function>
                <function name="setContents" fullname="Core::IDocument::setContents" href="core-idocument.html#setContents" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="74" documented="true" meta="plain" virtual="virtual" type="bool" signature="bool setContents(const QByteArray &amp;contents)">
                    <parameter type="const QByteArray &amp;" name="contents" default=""/>
                </function>
                <function name="setFilePath" fullname="Core::IDocument::setFilePath" href="core-idocument.html#setFilePath" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="78" documented="true" meta="plain" virtual="virtual" type="void" signature="void setFilePath(const Utils::FilePath &amp;filePath)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                </function>
                <function name="setId" fullname="Core::IDocument::setId" href="core-idocument.html#setId" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="66" documented="true" meta="plain" type="void" signature="void setId(Utils::Id id)">
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
                <function name="setMimeType" fullname="Core::IDocument::setMimeType" href="core-idocument.html#setMimeType" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="94" documented="true" meta="plain" type="void" signature="void setMimeType(const QString &amp;mimeType)">
                    <parameter type="const QString &amp;" name="mimeType" default=""/>
                </function>
                <function name="setPreferredDisplayName" fullname="Core::IDocument::setPreferredDisplayName" href="core-idocument.html#setPreferredDisplayName" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="80" documented="true" meta="plain" type="void" signature="void setPreferredDisplayName(const QString &amp;name)">
                    <parameter type="const QString &amp;" name="name" default=""/>
                </function>
                <function name="setSuspendAllowed" fullname="Core::IDocument::setSuspendAllowed" href="core-idocument.html#setSuspendAllowed" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="100" documented="true" meta="plain" type="void" signature="void setSuspendAllowed(bool value)">
                    <parameter type="bool" name="value" default=""/>
                </function>
                <function name="setTemporary" fullname="Core::IDocument::setTemporary" href="core-idocument.html#setTemporary" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="88" documented="true" meta="plain" type="void" signature="void setTemporary(bool temporary)">
                    <parameter type="bool" name="temporary" default=""/>
                </function>
                <function name="shouldAutoSave" fullname="Core::IDocument::shouldAutoSave" href="core-idocument.html#shouldAutoSave" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="96" documented="true" meta="plain" virtual="virtual" const="true" type="bool" signature="bool shouldAutoSave() const"/>
                <function name="~IDocument" fullname="Core::IDocument::~IDocument" href="core-idocument.html#dtor.IDocument" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="64" documented="true" meta="destructor" virtual="virtual" override="true" noexcept="true" signature="~IDocument() override"/>
                <enum name="ChangeTrigger" fullname="Core::IDocument::ChangeTrigger" href="core-idocument.html#ChangeTrigger-enum" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="43" documented="true">
                    <value name="TriggerInternal" value="0"/>
                    <value name="TriggerExternal" value="1"/>
                </enum>
                <enum name="ChangeType" fullname="Core::IDocument::ChangeType" href="core-idocument.html#ChangeType-enum" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="48" documented="true">
                    <value name="TypeContents" value="0"/>
                    <value name="TypeRemoved" value="1"/>
                </enum>
                <enum name="OpenResult" fullname="Core::IDocument::OpenResult" href="core-idocument.html#OpenResult-enum" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="29" documented="true" scoped="true">
                    <value name="Success" value="0"/>
                    <value name="ReadError" value="1"/>
                    <value name="CannotHandle" value="2"/>
                </enum>
                <enum name="ReloadFlag" fullname="Core::IDocument::ReloadFlag" href="core-idocument.html#ReloadFlag-enum" status="active" access="public" location="idocument.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/../idocument.h" lineno="58" documented="true">
                    <value name="FlagReload" value="0"/>
                    <value name="FlagIgnore" value="1"/>
                </enum>
            </class>
            <class name="IEditor" fullname="Core::IEditor" href="core-ieditor.html" status="active" access="public" location="ieditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditor.h" lineno="15" documented="true" bases="Core::IContext" module="QtCreator" brief="Interface for editing an open document in Qt Creator">
                <function name="IEditor" fullname="Core::IEditor::IEditor" href="core-ieditor.html#IEditor" status="active" access="public" location="ieditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditor.h" lineno="20" documented="true" meta="constructor" signature="IEditor()"/>
                <function name="currentColumn" fullname="Core::IEditor::currentColumn" href="core-ieditor.html#currentColumn" status="active" access="public" location="ieditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditor.h" lineno="33" documented="true" meta="plain" virtual="virtual" const="true" type="int" signature="int currentColumn() const"/>
                <function name="currentLine" fullname="Core::IEditor::currentLine" href="core-ieditor.html#currentLine" status="active" access="public" location="ieditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditor.h" lineno="32" documented="true" meta="plain" virtual="virtual" const="true" type="int" signature="int currentLine() const"/>
                <function name="document" fullname="Core::IEditor::document" href="core-ieditor.html#document" status="active" access="public" location="ieditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditor.h" lineno="25" documented="true" meta="plain" virtual="pure" const="true" type="Core::IDocument *" signature="Core::IDocument * document() const = 0"/>
                <function name="duplicate" fullname="Core::IEditor::duplicate" href="core-ieditor.html#duplicate" status="active" access="public" location="ieditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditor.h" lineno="27" documented="true" meta="plain" virtual="virtual" type="Core::IEditor *" signature="Core::IEditor * duplicate()"/>
                <function name="duplicateSupported" fullname="Core::IEditor::duplicateSupported" href="core-ieditor.html#duplicateSupported" status="active" access="public" location="ieditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditor.h" lineno="22" documented="true" meta="plain" const="true" type="bool" signature="bool duplicateSupported() const"/>
                <function name="gotoLine" fullname="Core::IEditor::gotoLine" href="core-ieditor.html#gotoLine" status="active" access="public" location="ieditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditor.h" lineno="34" documented="true" meta="plain" virtual="virtual" type="void" signature="void gotoLine(int line, int column, bool centerLine)">
                    <parameter type="int" name="line" default=""/>
                    <parameter type="int" name="column" default="0"/>
                    <parameter type="bool" name="centerLine" default="true"/>
                </function>
                <function name="isDesignModePreferred" fullname="Core::IEditor::isDesignModePreferred" href="core-ieditor.html#isDesignModePreferred" status="active" access="public" location="ieditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditor.h" lineno="38" documented="true" meta="plain" virtual="virtual" const="true" type="bool" signature="bool isDesignModePreferred() const"/>
                <function name="restoreState" fullname="Core::IEditor::restoreState" href="core-ieditor.html#restoreState" status="active" access="public" location="ieditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditor.h" lineno="30" documented="true" meta="plain" virtual="virtual" type="void" signature="void restoreState(const QByteArray &amp;state)">
                    <parameter type="const QByteArray &amp;" name="state" default=""/>
                </function>
                <function name="saveState" fullname="Core::IEditor::saveState" href="core-ieditor.html#saveState" status="active" access="public" location="ieditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditor.h" lineno="29" documented="true" meta="plain" virtual="virtual" const="true" type="QByteArray" signature="QByteArray saveState() const"/>
                <function name="setDuplicateSupported" fullname="Core::IEditor::setDuplicateSupported" href="core-ieditor.html#setDuplicateSupported" status="active" access="public" location="ieditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditor.h" lineno="23" documented="true" meta="plain" type="void" signature="void setDuplicateSupported(bool duplicatesSupported)">
                    <parameter type="bool" name="duplicatesSupported" default=""/>
                </function>
                <function name="toolBar" fullname="Core::IEditor::toolBar" href="core-ieditor.html#toolBar" status="active" access="public" location="ieditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditor.h" lineno="36" documented="true" meta="plain" virtual="pure" type="QWidget *" signature="QWidget * toolBar() = 0"/>
            </class>
            <class name="IEditorFactory" fullname="Core::IEditorFactory" href="core-ieditorfactory.html" status="active" access="public" location="ieditorfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditorfactory.h" lineno="26" documented="true" module="QtCreator" brief="Creates suitable editors for documents according to their MIME type">
                <function name="IEditorFactory" fullname="Core::IEditorFactory::IEditorFactory" href="core-ieditorfactory.html#IEditorFactory" status="active" access="protected" location="ieditorfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditorfactory.h" lineno="48" documented="true" meta="constructor" signature="IEditorFactory()"/>
                <function name="addMimeType" fullname="Core::IEditorFactory::addMimeType" href="core-ieditorfactory.html#addMimeType" status="active" access="protected" location="ieditorfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditorfactory.h" lineno="53" documented="true" meta="plain" type="void" signature="void addMimeType(const QString &amp;mimeType)">
                    <parameter type="const QString &amp;" name="mimeType" default=""/>
                </function>
                <function name="allEditorFactories" fullname="Core::IEditorFactory::allEditorFactories" href="core-ieditorfactory.html#allEditorFactories" status="active" access="public" location="ieditorfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditorfactory.h" lineno="31" documented="true" meta="plain" static="true" type="const Core::EditorFactories" signature="const Core::EditorFactories allEditorFactories()"/>
                <function name="createEditor" fullname="Core::IEditorFactory::createEditor" href="core-ieditorfactory.html#createEditor" status="active" access="public" location="ieditorfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditorfactory.h" lineno="44" documented="true" meta="plain" const="true" type="Core::IEditor *" signature="Core::IEditor * createEditor() const"/>
                <function name="defaultEditorFactories" fullname="Core::IEditorFactory::defaultEditorFactories" href="core-ieditorfactory.html#defaultEditorFactories" status="active" access="public" location="ieditorfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditorfactory.h" lineno="33" documented="true" meta="plain" static="true" type="const Core::EditorFactories" signature="const Core::EditorFactories defaultEditorFactories(const Utils::MimeType &amp;mimeType)">
                    <parameter type="const Utils::MimeType &amp;" name="mimeType" default=""/>
                </function>
                <function name="displayName" fullname="Core::IEditorFactory::displayName" href="core-ieditorfactory.html#displayName" status="active" access="public" location="ieditorfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditorfactory.h" lineno="38" documented="true" meta="plain" const="true" type="QString" signature="QString displayName() const"/>
                <function name="id" fullname="Core::IEditorFactory::id" href="core-ieditorfactory.html#id" status="active" access="public" location="ieditorfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditorfactory.h" lineno="37" documented="true" meta="plain" const="true" type="Utils::Id" signature="Utils::Id id() const"/>
                <function name="mimeTypes" fullname="Core::IEditorFactory::mimeTypes" href="core-ieditorfactory.html#mimeTypes" status="active" access="public" location="ieditorfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditorfactory.h" lineno="39" documented="true" meta="plain" const="true" type="QStringList" signature="QStringList mimeTypes() const"/>
                <function name="preferredEditorFactories" fullname="Core::IEditorFactory::preferredEditorFactories" href="core-ieditorfactory.html#preferredEditorFactories" status="active" access="public" location="ieditorfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditorfactory.h" lineno="35" documented="true" meta="plain" static="true" type="const Core::EditorFactories" signature="const Core::EditorFactories preferredEditorFactories(const Utils::FilePath &amp;filePath)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                </function>
                <function name="setDisplayName" fullname="Core::IEditorFactory::setDisplayName" href="core-ieditorfactory.html#setDisplayName" status="active" access="protected" location="ieditorfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditorfactory.h" lineno="51" documented="true" meta="plain" type="void" signature="void setDisplayName(const QString &amp;displayName)">
                    <parameter type="const QString &amp;" name="displayName" default=""/>
                </function>
                <function name="setEditorCreator" fullname="Core::IEditorFactory::setEditorCreator" href="core-ieditorfactory.html#setEditorCreator" status="active" access="protected" location="ieditorfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditorfactory.h" lineno="54" documented="true" meta="plain" type="void" signature="void setEditorCreator(const std::function&lt;IEditor *()&gt; &amp;creator)">
                    <parameter type="const std::function&lt;IEditor *()&gt; &amp;" name="creator" default=""/>
                </function>
                <function name="setId" fullname="Core::IEditorFactory::setId" href="core-ieditorfactory.html#setId" status="active" access="protected" location="ieditorfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditorfactory.h" lineno="50" documented="true" meta="plain" type="void" signature="void setId(Utils::Id id)">
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
                <function name="setMimeTypes" fullname="Core::IEditorFactory::setMimeTypes" href="core-ieditorfactory.html#setMimeTypes" status="active" access="protected" location="ieditorfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditorfactory.h" lineno="52" documented="true" meta="plain" type="void" signature="void setMimeTypes(const QStringList &amp;mimeTypes)">
                    <parameter type="const QStringList &amp;" name="mimeTypes" default=""/>
                </function>
                <function name="startEditor" fullname="Core::IEditorFactory::startEditor" href="core-ieditorfactory.html#startEditor" status="active" access="public" location="ieditorfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/editormanager/ieditorfactory.h" lineno="45" documented="true" meta="plain" type="bool" signature="bool startEditor(const Utils::FilePath &amp;filePath, QString *errorMessage)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                    <parameter type="QString *" name="errorMessage" default=""/>
                </function>
            </class>
            <class name="IFeatureProvider" fullname="Core::IFeatureProvider" href="core-ifeatureprovider.html" status="active" access="public" location="featureprovider.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../featureprovider.h" lineno="17" documented="true" groups="mainclasses" module="QtCreator" brief="Defines an interface to manage features for wizards"/>
            <class name="IFindFilter" fullname="Core::IFindFilter" href="core-ifindfilter.html" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="20" documented="true" bases="QObject" module="QtCreator" brief="The base class for find implementations that are invoked by selecting Edit &gt; Find/Replace &gt; Advanced Find">
                <function name="allFindFilters" fullname="Core::IFindFilter::allFindFilters" href="core-ifindfilter.html#allFindFilters" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="28" documented="true" meta="plain" static="true" type="const QList&lt;Core::IFindFilter *&gt;" signature="const QList&lt;Core::IFindFilter *&gt; allFindFilters()"/>
                <function name="createConfigWidget" fullname="Core::IFindFilter::createConfigWidget" href="core-ifindfilter.html#createConfigWidget" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="44" documented="true" meta="plain" virtual="virtual" type="QWidget *" signature="QWidget * createConfigWidget()"/>
                <function name="defaultShortcut" fullname="Core::IFindFilter::defaultShortcut" href="core-ifindfilter.html#defaultShortcut" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="35" documented="true" meta="plain" virtual="virtual" const="true" type="QKeySequence" signature="QKeySequence defaultShortcut() const"/>
                <function name="descriptionForFindFlags" fullname="Core::IFindFilter::descriptionForFindFlags" href="core-ifindfilter.html#descriptionForFindFlags" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="49" documented="true" meta="plain" static="true" type="QString" signature="QString descriptionForFindFlags(Utils::FindFlags flags)">
                    <parameter type="Utils::FindFlags" name="flags" default=""/>
                </function>
                <function name="displayName" fullname="Core::IFindFilter::displayName" href="core-ifindfilter.html#displayName" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="31" documented="true" meta="plain" virtual="pure" const="true" type="QString" signature="QString displayName() const = 0"/>
                <function name="displayNameChanged" fullname="Core::IFindFilter::displayNameChanged" href="core-ifindfilter.html#displayNameChanged" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="53" documented="true" meta="signal" type="void" signature="void displayNameChanged()"/>
                <function name="enabledChanged" fullname="Core::IFindFilter::enabledChanged" href="core-ifindfilter.html#enabledChanged" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="51" documented="true" meta="signal" type="void" signature="void enabledChanged(bool enabled)">
                    <parameter type="bool" name="enabled" default=""/>
                </function>
                <function name="findAll" fullname="Core::IFindFilter::findAll" href="core-ifindfilter.html#findAll" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="40" documented="true" meta="plain" virtual="pure" type="void" signature="void findAll(const QString &amp;txt, Utils::FindFlags findFlags) = 0">
                    <parameter type="const QString &amp;" name="txt" default=""/>
                    <parameter type="Utils::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="id" fullname="Core::IFindFilter::id" href="core-ifindfilter.html#id" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="30" documented="true" meta="plain" virtual="pure" const="true" type="QString" signature="QString id() const = 0"/>
                <function name="isEnabled" fullname="Core::IFindFilter::isEnabled" href="core-ifindfilter.html#isEnabled" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="33" documented="true" meta="plain" virtual="pure" const="true" type="bool" signature="bool isEnabled() const = 0"/>
                <function name="isReplaceSupported" fullname="Core::IFindFilter::isReplaceSupported" href="core-ifindfilter.html#isReplaceSupported" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="36" documented="true" meta="plain" virtual="virtual" const="true" type="bool" signature="bool isReplaceSupported() const"/>
                <function name="isValid" fullname="Core::IFindFilter::isValid" href="core-ifindfilter.html#isValid" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="34" documented="true" meta="plain" virtual="virtual" const="true" type="bool" signature="bool isValid() const"/>
                <function name="pixmapForFindFlags" fullname="Core::IFindFilter::pixmapForFindFlags" href="core-ifindfilter.html#pixmapForFindFlags" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="48" documented="true" meta="plain" static="true" type="QPixmap" signature="QPixmap pixmapForFindFlags(Utils::FindFlags flags)">
                    <parameter type="Utils::FindFlags" name="flags" default=""/>
                </function>
                <function name="replaceAll" fullname="Core::IFindFilter::replaceAll" href="core-ifindfilter.html#replaceAll" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="41" documented="true" meta="plain" virtual="virtual" type="void" signature="void replaceAll(const QString &amp;txt, Utils::FindFlags findFlags)">
                    <parameter type="const QString &amp;" name="txt" default=""/>
                    <parameter type="Utils::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="showSearchTermInput" fullname="Core::IFindFilter::showSearchTermInput" href="core-ifindfilter.html#showSearchTermInput" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="37" documented="true" meta="plain" virtual="virtual" const="true" type="bool" signature="bool showSearchTermInput() const"/>
                <function name="supportedFindFlags" fullname="Core::IFindFilter::supportedFindFlags" href="core-ifindfilter.html#supportedFindFlags" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="38" documented="true" meta="plain" virtual="virtual" const="true" type="Utils::FindFlags" signature="Utils::FindFlags supportedFindFlags() const"/>
                <function name="validChanged" fullname="Core::IFindFilter::validChanged" href="core-ifindfilter.html#validChanged" status="active" access="public" location="ifindfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/ifindfilter.h" lineno="52" documented="true" meta="signal" type="void" signature="void validChanged(bool valid)">
                    <parameter type="bool" name="valid" default=""/>
                </function>
            </class>
            <class name="IFindSupport" fullname="Core::IFindSupport" href="core-ifindsupport.html" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/terminal/../find/ifindsupport.h" lineno="15" documented="true" bases="QObject" module="QtCreator" brief="Functions for searching in a document or widget">
                <function name="changed" fullname="Core::IFindSupport::changed" href="core-ifindsupport.html#changed" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/terminal/../find/ifindsupport.h" lineno="48" documented="true" meta="signal" type="void" signature="void changed()"/>
                <function name="clearFindScope" fullname="Core::IFindSupport::clearFindScope" href="core-ifindsupport.html#clearFindScope" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/terminal/../find/ifindsupport.h" lineno="43" documented="true" meta="plain" virtual="virtual" type="void" signature="void clearFindScope()"/>
                <function name="clearHighlights" fullname="Core::IFindSupport::clearHighlights" href="core-ifindsupport.html#clearHighlights" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/terminal/../find/ifindsupport.h" lineno="29" documented="true" meta="plain" virtual="pure" type="void" signature="void clearHighlights() = 0"/>
                <function name="completedFindString" fullname="Core::IFindSupport::completedFindString" href="core-ifindsupport.html#completedFindString" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/terminal/../find/ifindsupport.h" lineno="31" documented="true" meta="plain" virtual="pure" const="true" type="QString" signature="QString completedFindString() const = 0"/>
                <function name="currentFindString" fullname="Core::IFindSupport::currentFindString" href="core-ifindsupport.html#currentFindString" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/terminal/../find/ifindsupport.h" lineno="30" documented="true" meta="plain" virtual="pure" const="true" type="QString" signature="QString currentFindString() const = 0"/>
                <function name="defineFindScope" fullname="Core::IFindSupport::defineFindScope" href="core-ifindsupport.html#defineFindScope" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/terminal/../find/ifindsupport.h" lineno="42" documented="true" meta="plain" virtual="virtual" type="void" signature="void defineFindScope()"/>
                <function name="findIncremental" fullname="Core::IFindSupport::findIncremental" href="core-ifindsupport.html#findIncremental" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/terminal/../find/ifindsupport.h" lineno="34" documented="true" meta="plain" virtual="pure" type="Core::IFindSupport::Result" signature="Core::IFindSupport::Result findIncremental(const QString &amp;txt, Utils::FindFlags findFlags) = 0">
                    <parameter type="const QString &amp;" name="txt" default=""/>
                    <parameter type="Utils::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="findStep" fullname="Core::IFindSupport::findStep" href="core-ifindsupport.html#findStep" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/terminal/../find/ifindsupport.h" lineno="35" documented="true" meta="plain" virtual="pure" type="Core::IFindSupport::Result" signature="Core::IFindSupport::Result findStep(const QString &amp;txt, Utils::FindFlags findFlags) = 0">
                    <parameter type="const QString &amp;" name="txt" default=""/>
                    <parameter type="Utils::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="highlightAll" fullname="Core::IFindSupport::highlightAll" href="core-ifindsupport.html#highlightAll" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/terminal/../find/ifindsupport.h" lineno="33" documented="true" meta="plain" virtual="virtual" type="void" signature="void highlightAll(const QString &amp;txt, Utils::FindFlags findFlags)">
                    <parameter type="const QString &amp;" name="txt" default=""/>
                    <parameter type="Utils::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="replace" fullname="Core::IFindSupport::replace" href="core-ifindsupport.html#replace" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/terminal/../find/ifindsupport.h" lineno="36" documented="true" meta="plain" virtual="virtual" type="void" signature="void replace(const QString &amp;before, const QString &amp;after, Utils::FindFlags findFlags)">
                    <parameter type="const QString &amp;" name="before" default=""/>
                    <parameter type="const QString &amp;" name="after" default=""/>
                    <parameter type="Utils::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="replaceAll" fullname="Core::IFindSupport::replaceAll" href="core-ifindsupport.html#replaceAll" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/terminal/../find/ifindsupport.h" lineno="39" documented="true" meta="plain" virtual="virtual" type="int" signature="int replaceAll(const QString &amp;before, const QString &amp;after, Utils::FindFlags findFlags)">
                    <parameter type="const QString &amp;" name="before" default=""/>
                    <parameter type="const QString &amp;" name="after" default=""/>
                    <parameter type="Utils::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="replaceStep" fullname="Core::IFindSupport::replaceStep" href="core-ifindsupport.html#replaceStep" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/terminal/../find/ifindsupport.h" lineno="37" documented="true" meta="plain" virtual="virtual" type="bool" signature="bool replaceStep(const QString &amp;before, const QString &amp;after, Utils::FindFlags findFlags)">
                    <parameter type="const QString &amp;" name="before" default=""/>
                    <parameter type="const QString &amp;" name="after" default=""/>
                    <parameter type="Utils::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="resetIncrementalSearch" fullname="Core::IFindSupport::resetIncrementalSearch" href="core-ifindsupport.html#resetIncrementalSearch" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/terminal/../find/ifindsupport.h" lineno="28" documented="true" meta="plain" virtual="pure" type="void" signature="void resetIncrementalSearch() = 0"/>
                <function name="selectAll" fullname="Core::IFindSupport::selectAll" href="core-ifindsupport.html#selectAll" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/terminal/../find/ifindsupport.h" lineno="40" documented="true" meta="plain" virtual="virtual" type="void" signature="void selectAll(const QString &amp;txt, Utils::FindFlags findFlags)">
                    <parameter type="const QString &amp;" name="txt" default=""/>
                    <parameter type="Utils::FindFlags" name="findFlags" default=""/>
                </function>
                <function name="showWrapIndicator" fullname="Core::IFindSupport::showWrapIndicator" href="core-ifindsupport.html#showWrapIndicator" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/terminal/../find/ifindsupport.h" lineno="45" documented="true" meta="plain" static="true" type="void" signature="void showWrapIndicator(QWidget *parent)">
                    <parameter type="QWidget *" name="parent" default=""/>
                </function>
                <function name="supportedFindFlags" fullname="Core::IFindSupport::supportedFindFlags" href="core-ifindsupport.html#supportedFindFlags" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/terminal/../find/ifindsupport.h" lineno="27" documented="true" meta="plain" virtual="pure" const="true" type="Utils::FindFlags" signature="Utils::FindFlags supportedFindFlags() const = 0"/>
                <function name="supportsReplace" fullname="Core::IFindSupport::supportsReplace" href="core-ifindsupport.html#supportsReplace" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/terminal/../find/ifindsupport.h" lineno="25" documented="true" meta="plain" virtual="pure" const="true" type="bool" signature="bool supportsReplace() const = 0"/>
                <function name="supportsSelectAll" fullname="Core::IFindSupport::supportsSelectAll" href="core-ifindsupport.html#supportsSelectAll" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/terminal/../find/ifindsupport.h" lineno="26" documented="true" meta="plain" virtual="virtual" const="true" type="bool" signature="bool supportsSelectAll() const"/>
                <enum name="Result" fullname="Core::IFindSupport::Result" href="core-ifindsupport.html#Result-enum" status="active" access="public" location="ifindsupport.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/terminal/../find/ifindsupport.h" lineno="20" documented="true">
                    <value name="Found" value="0"/>
                    <value name="NotFound" value="1"/>
                    <value name="NotYetFound" value="2"/>
                </enum>
            </class>
            <class name="ILocatorFilter" fullname="Core::ILocatorFilter" href="core-ilocatorfilter.html" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="190" documented="true" bases="QObject" module="QtCreator" brief="Adds a locator filter">
                <function name="ILocatorFilter" fullname="Core::ILocatorFilter::ILocatorFilter" href="core-ilocatorfilter.html#ILocatorFilter" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="205" documented="true" meta="constructor" signature="ILocatorFilter(QObject *parent)">
                    <parameter type="QObject *" name="parent" default="nullptr"/>
                </function>
                <function name="actionId" fullname="Core::ILocatorFilter::actionId" href="core-ilocatorfilter.html#actionId" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="209" documented="true" meta="plain" const="true" type="Utils::Id" signature="Utils::Id actionId() const"/>
                <function name="allLocatorFilters" fullname="Core::ILocatorFilter::allLocatorFilters" href="core-ilocatorfilter.html#allLocatorFilters" status="active" access="private" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="282" documented="true" meta="plain" static="true" type="const QList&lt;Core::ILocatorFilter *&gt;" signature="const QList&lt;Core::ILocatorFilter *&gt; allLocatorFilters()"/>
                <function name="caseSensitivity" fullname="Core::ILocatorFilter::caseSensitivity" href="core-ilocatorfilter.html#caseSensitivity" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="243" documented="true" meta="plain" static="true" type="Qt::CaseSensitivity" signature="Qt::CaseSensitivity caseSensitivity(const QString &amp;str)">
                    <parameter type="const QString &amp;" name="str" default=""/>
                </function>
                <function name="createRegExp" fullname="Core::ILocatorFilter::createRegExp" href="core-ilocatorfilter.html#createRegExp" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="244" documented="true" meta="plain" static="true" type="QRegularExpression" signature="QRegularExpression createRegExp(const QString &amp;text, Qt::CaseSensitivity caseSensitivity, bool multiWord)">
                    <parameter type="const QString &amp;" name="text" default=""/>
                    <parameter type="Qt::CaseSensitivity" name="caseSensitivity" default="Qt::CaseInsensitive"/>
                    <parameter type="bool" name="multiWord" default="false"/>
                </function>
                <function name="description" fullname="Core::ILocatorFilter::description" href="core-ilocatorfilter.html#description" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="214" documented="true" meta="plain" const="true" type="QString" signature="QString description() const"/>
                <function name="displayName" fullname="Core::ILocatorFilter::displayName" href="core-ilocatorfilter.html#displayName" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="211" documented="true" meta="plain" const="true" type="QString" signature="QString displayName() const"/>
                <function name="highlightInfo" fullname="Core::ILocatorFilter::highlightInfo" href="core-ilocatorfilter.html#highlightInfo" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="247" documented="true" meta="plain" static="true" type="LocatorFilterEntry::HighlightInfo" signature="LocatorFilterEntry::HighlightInfo highlightInfo(const QRegularExpressionMatch &amp;match, LocatorFilterEntry::HighlightInfo::DataType dataType)">
                    <parameter type="const QRegularExpressionMatch &amp;" name="match" default=""/>
                    <parameter type="LocatorFilterEntry::HighlightInfo::DataType" name="dataType" default="LocatorFilterEntry::HighlightInfo::DisplayName"/>
                </function>
                <function name="id" fullname="Core::ILocatorFilter::id" href="core-ilocatorfilter.html#id" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="208" documented="true" meta="plain" const="true" type="Utils::Id" signature="Utils::Id id() const"/>
                <function name="isConfigurable" fullname="Core::ILocatorFilter::isConfigurable" href="core-ilocatorfilter.html#isConfigurable" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="233" documented="true" meta="plain" const="true" type="bool" signature="bool isConfigurable() const"/>
                <function name="isEnabled" fullname="Core::ILocatorFilter::isEnabled" href="core-ilocatorfilter.html#isEnabled" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="241" documented="true" meta="plain" const="true" type="bool" signature="bool isEnabled() const"/>
                <function name="isHidden" fullname="Core::ILocatorFilter::isHidden" href="core-ilocatorfilter.html#isHidden" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="239" documented="true" meta="plain" const="true" type="bool" signature="bool isHidden() const"/>
                <function name="isIncludedByDefault" fullname="Core::ILocatorFilter::isIncludedByDefault" href="core-ilocatorfilter.html#isIncludedByDefault" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="235" documented="true" meta="plain" const="true" type="bool" signature="bool isIncludedByDefault() const"/>
                <function name="isOldSetting" fullname="Core::ILocatorFilter::isOldSetting" href="core-ilocatorfilter.html#isOldSetting" status="active" access="protected" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="275" documented="true" meta="plain" static="true" type="bool" signature="bool isOldSetting(const QByteArray &amp;state)">
                    <parameter type="const QByteArray &amp;" name="state" default=""/>
                </function>
                <function name="msgConfigureDialogTitle" fullname="Core::ILocatorFilter::msgConfigureDialogTitle" href="core-ilocatorfilter.html#msgConfigureDialogTitle" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="250" documented="true" meta="plain" static="true" type="QString" signature="QString msgConfigureDialogTitle()"/>
                <function name="msgIncludeByDefault" fullname="Core::ILocatorFilter::msgIncludeByDefault" href="core-ilocatorfilter.html#msgIncludeByDefault" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="253" documented="true" meta="plain" static="true" type="QString" signature="QString msgIncludeByDefault()"/>
                <function name="msgIncludeByDefaultToolTip" fullname="Core::ILocatorFilter::msgIncludeByDefaultToolTip" href="core-ilocatorfilter.html#msgIncludeByDefaultToolTip" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="254" documented="true" meta="plain" static="true" type="QString" signature="QString msgIncludeByDefaultToolTip()"/>
                <function name="msgPrefixLabel" fullname="Core::ILocatorFilter::msgPrefixLabel" href="core-ilocatorfilter.html#msgPrefixLabel" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="251" documented="true" meta="plain" static="true" type="QString" signature="QString msgPrefixLabel()"/>
                <function name="msgPrefixToolTip" fullname="Core::ILocatorFilter::msgPrefixToolTip" href="core-ilocatorfilter.html#msgPrefixToolTip" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="252" documented="true" meta="plain" static="true" type="QString" signature="QString msgPrefixToolTip()"/>
                <function name="openConfigDialog" fullname="Core::ILocatorFilter::openConfigDialog" href="core-ilocatorfilter.html#openConfigDialog" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="232" documented="true" meta="plain" virtual="virtual" type="bool" signature="bool openConfigDialog(QWidget *parent, bool &amp;needsRefresh)">
                    <parameter type="QWidget *" name="parent" default=""/>
                    <parameter type="bool &amp;" name="needsRefresh" default=""/>
                </function>
                <function name="openConfigDialog" fullname="Core::ILocatorFilter::openConfigDialog" href="core-ilocatorfilter.html#openConfigDialog-1" status="active" access="protected" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="267" documented="true" meta="plain" overload="true" overload-number="1" type="bool" signature="bool openConfigDialog(QWidget *parent, QWidget *additionalWidget)">
                    <parameter type="QWidget *" name="parent" default=""/>
                    <parameter type="QWidget *" name="additionalWidget" default=""/>
                </function>
                <function name="priority" fullname="Core::ILocatorFilter::priority" href="core-ilocatorfilter.html#priority" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="217" documented="true" meta="plain" const="true" type="Core::ILocatorFilter::Priority" signature="Core::ILocatorFilter::Priority priority() const"/>
                <function name="refreshRecipe" fullname="Core::ILocatorFilter::refreshRecipe" href="core-ilocatorfilter.html#refreshRecipe" status="active" access="protected" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="273" documented="true" meta="plain" const="true" type="std::optional&lt;Tasking::GroupItem&gt;" signature="std::optional&lt;Tasking::GroupItem&gt; refreshRecipe() const"/>
                <function name="restoreState" fullname="Core::ILocatorFilter::restoreState" href="core-ilocatorfilter.html#restoreState" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="230" documented="true" meta="plain" virtual="virtual" type="void" signature="void restoreState(const QByteArray &amp;state)">
                    <parameter type="const QByteArray &amp;" name="state" default=""/>
                </function>
                <function name="restoreState" fullname="Core::ILocatorFilter::restoreState" href="core-ilocatorfilter.html#restoreState-1" status="active" access="protected" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="270" documented="true" meta="plain" virtual="virtual" overload="true" overload-number="1" type="void" signature="void restoreState(const QJsonObject &amp;object)">
                    <parameter type="const QJsonObject &amp;" name="object" default=""/>
                </function>
                <function name="saveState" fullname="Core::ILocatorFilter::saveState" href="core-ilocatorfilter.html#saveState" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="229" documented="true" meta="plain" virtual="virtual" const="true" type="QByteArray" signature="QByteArray saveState() const"/>
                <function name="saveState" fullname="Core::ILocatorFilter::saveState" href="core-ilocatorfilter.html#saveState-1" status="active" access="protected" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="269" documented="true" meta="plain" virtual="virtual" const="true" overload="true" overload-number="1" type="void" signature="void saveState(QJsonObject &amp;object) const">
                    <parameter type="QJsonObject &amp;" name="object" default=""/>
                </function>
                <function name="setConfigurable" fullname="Core::ILocatorFilter::setConfigurable" href="core-ilocatorfilter.html#setConfigurable" status="active" access="protected" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="266" documented="true" meta="plain" type="void" signature="void setConfigurable(bool configurable)">
                    <parameter type="bool" name="configurable" default=""/>
                </function>
                <function name="setDefaultIncludedByDefault" fullname="Core::ILocatorFilter::setDefaultIncludedByDefault" href="core-ilocatorfilter.html#setDefaultIncludedByDefault" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="236" documented="true" meta="plain" type="void" signature="void setDefaultIncludedByDefault(bool includedByDefault)">
                    <parameter type="bool" name="includedByDefault" default=""/>
                </function>
                <function name="setDefaultShortcutString" fullname="Core::ILocatorFilter::setDefaultShortcutString" href="core-ilocatorfilter.html#setDefaultShortcutString" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="220" documented="true" meta="plain" type="void" signature="void setDefaultShortcutString(const QString &amp;shortcut)">
                    <parameter type="const QString &amp;" name="shortcut" default=""/>
                </function>
                <function name="setDescription" fullname="Core::ILocatorFilter::setDescription" href="core-ilocatorfilter.html#setDescription" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="215" documented="true" meta="plain" type="void" signature="void setDescription(const QString &amp;description)">
                    <parameter type="const QString &amp;" name="description" default=""/>
                </function>
                <function name="setDisplayName" fullname="Core::ILocatorFilter::setDisplayName" href="core-ilocatorfilter.html#setDisplayName" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="212" documented="true" meta="plain" type="void" signature="void setDisplayName(const QString &amp;displayString)">
                    <parameter type="const QString &amp;" name="displayString" default=""/>
                </function>
                <function name="setEnabled" fullname="Core::ILocatorFilter::setEnabled" href="core-ilocatorfilter.html#setEnabled" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="257" documented="true" meta="slot" type="void" signature="void setEnabled(bool enabled)">
                    <parameter type="bool" name="enabled" default=""/>
                </function>
                <function name="setHidden" fullname="Core::ILocatorFilter::setHidden" href="core-ilocatorfilter.html#setHidden" status="active" access="protected" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="263" documented="true" meta="plain" type="void" signature="void setHidden(bool hidden)">
                    <parameter type="bool" name="hidden" default=""/>
                </function>
                <function name="setId" fullname="Core::ILocatorFilter::setId" href="core-ilocatorfilter.html#setId" status="active" access="protected" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="264" documented="true" meta="plain" type="void" signature="void setId(Utils::Id id)">
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
                <function name="setIncludedByDefault" fullname="Core::ILocatorFilter::setIncludedByDefault" href="core-ilocatorfilter.html#setIncludedByDefault" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="237" documented="true" meta="plain" type="void" signature="void setIncludedByDefault(bool includedByDefault)">
                    <parameter type="bool" name="includedByDefault" default=""/>
                </function>
                <function name="setPriority" fullname="Core::ILocatorFilter::setPriority" href="core-ilocatorfilter.html#setPriority" status="active" access="protected" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="265" documented="true" meta="plain" type="void" signature="void setPriority(Core::ILocatorFilter::Priority priority)">
                    <parameter type="Core::ILocatorFilter::Priority" name="priority" default=""/>
                </function>
                <function name="setShortcutString" fullname="Core::ILocatorFilter::setShortcutString" href="core-ilocatorfilter.html#setShortcutString" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="221" documented="true" meta="plain" type="void" signature="void setShortcutString(const QString &amp;shortcut)">
                    <parameter type="const QString &amp;" name="shortcut" default=""/>
                </function>
                <function name="shortcutString" fullname="Core::ILocatorFilter::shortcutString" href="core-ilocatorfilter.html#shortcutString" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="219" documented="true" meta="plain" const="true" type="QString" signature="QString shortcutString() const"/>
                <enum name="MatchLevel" fullname="Core::ILocatorFilter::MatchLevel" href="core-ilocatorfilter.html#MatchLevel-enum" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="195" documented="true" scoped="true">
                    <value name="Best" value="0"/>
                    <value name="Better" value="1"/>
                    <value name="Good" value="2"/>
                    <value name="Normal" value="3"/>
                    <value name="Count" value="4"/>
                </enum>
                <enum name="Priority" fullname="Core::ILocatorFilter::Priority" href="core-ilocatorfilter.html#Priority-enum" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="203" documented="true">
                    <value name="Highest" value="0"/>
                    <value name="High" value="1"/>
                    <value name="Medium" value="2"/>
                    <value name="Low" value="3"/>
                </enum>
            </class>
            <class name="IMode" fullname="Core::IMode" href="core-imode.html" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="25" documented="true" groups="mainclasses" bases="Core::IContext" module="QtCreator" brief="Represents a mode in Qt Creator">
                <function name="IMode" fullname="Core::IMode::IMode" href="core-imode.html#IMode" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="36" documented="true" meta="constructor" signature="IMode(QObject *parent)">
                    <parameter type="QObject *" name="parent" default="nullptr"/>
                </function>
                <function name="displayName" fullname="Core::IMode::displayName" href="core-imode.html#displayName-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="39" meta="plain" const="true" associated-property="displayName" type="QString" signature="QString displayName() const"/>
                <function name="enabledStateChanged" fullname="Core::IMode::enabledStateChanged" href="core-imode.html#enabled-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="57" meta="signal" associated-property="enabled" type="void" signature="void enabledStateChanged(bool enabled)">
                    <parameter type="bool" name="enabled" default=""/>
                </function>
                <function name="icon" fullname="Core::IMode::icon" href="core-imode.html#icon-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="40" meta="plain" const="true" associated-property="icon" type="QIcon" signature="QIcon icon() const"/>
                <function name="id" fullname="Core::IMode::id" href="core-imode.html#id-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="42" meta="plain" const="true" associated-property="id" type="Utils::Id" signature="Utils::Id id() const"/>
                <function name="isEnabled" fullname="Core::IMode::isEnabled" href="core-imode.html#enabled-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="43" meta="plain" const="true" associated-property="enabled" type="bool" signature="bool isEnabled() const"/>
                <function name="menu" fullname="Core::IMode::menu" href="core-imode.html#menu-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="44" meta="plain" const="true" associated-property="menu" type="QMenu *" signature="QMenu * menu() const"/>
                <function name="priority" fullname="Core::IMode::priority" href="core-imode.html#priority-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="41" meta="plain" const="true" associated-property="priority" type="int" signature="int priority() const"/>
                <function name="setDisplayName" fullname="Core::IMode::setDisplayName" href="core-imode.html#displayName-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="47" meta="plain" associated-property="displayName" type="void" signature="void setDisplayName(const QString &amp;displayName)">
                    <parameter type="const QString &amp;" name="displayName" default=""/>
                </function>
                <function name="setEnabled" fullname="Core::IMode::setEnabled" href="core-imode.html#enabled-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="46" meta="plain" associated-property="enabled" type="void" signature="void setEnabled(bool enabled)">
                    <parameter type="bool" name="enabled" default=""/>
                </function>
                <function name="setIcon" fullname="Core::IMode::setIcon" href="core-imode.html#icon-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="48" meta="plain" associated-property="icon" type="void" signature="void setIcon(const QIcon &amp;icon)">
                    <parameter type="const QIcon &amp;" name="icon" default=""/>
                </function>
                <function name="setId" fullname="Core::IMode::setId" href="core-imode.html#id-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="50" meta="plain" associated-property="id" type="void" signature="void setId(Utils::Id id)">
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
                <function name="setMenu" fullname="Core::IMode::setMenu" href="core-imode.html#menu-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="51" meta="plain" associated-property="menu" type="void" signature="void setMenu(QMenu *menu)">
                    <parameter type="QMenu *" name="menu" default=""/>
                </function>
                <function name="setPriority" fullname="Core::IMode::setPriority" href="core-imode.html#priority-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="49" meta="plain" associated-property="priority" type="void" signature="void setPriority(int priority)">
                    <parameter type="int" name="priority" default=""/>
                </function>
                <property name="displayName" fullname="Core::IMode::displayName" href="core-imode.html#displayName-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="28" documented="true">
                    <getter name="displayName"/>
                    <setter name="setDisplayName"/>
                </property>
                <property name="enabled" fullname="Core::IMode::enabled" href="core-imode.html#enabled-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="33" documented="true">
                    <getter name="isEnabled"/>
                    <setter name="setEnabled"/>
                    <notifier name="enabledStateChanged"/>
                </property>
                <property name="icon" fullname="Core::IMode::icon" href="core-imode.html#icon-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="29" documented="true">
                    <getter name="icon"/>
                    <setter name="setIcon"/>
                </property>
                <property name="id" fullname="Core::IMode::id" href="core-imode.html#id-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="31" documented="true">
                    <getter name="id"/>
                    <setter name="setId"/>
                </property>
                <property name="menu" fullname="Core::IMode::menu" href="core-imode.html#menu-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="32" documented="true">
                    <getter name="menu"/>
                    <setter name="setMenu"/>
                </property>
                <property name="priority" fullname="Core::IMode::priority" href="core-imode.html#priority-prop" status="active" access="public" location="imode.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/imode.h" lineno="30" documented="true">
                    <getter name="priority"/>
                    <setter name="setPriority"/>
                </property>
            </class>
            <class name="INavigationWidgetFactory" fullname="Core::INavigationWidgetFactory" href="core-inavigationwidgetfactory.html" status="active" access="public" location="inavigationwidgetfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/inavigationwidgetfactory.h" lineno="32" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="New instances of navigation widgets">
                <function name="INavigationWidgetFactory" fullname="Core::INavigationWidgetFactory::INavigationWidgetFactory" href="core-inavigationwidgetfactory.html#INavigationWidgetFactory" status="active" access="public" location="inavigationwidgetfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/inavigationwidgetfactory.h" lineno="37" documented="true" meta="constructor" signature="INavigationWidgetFactory()"/>
                <function name="activationSequence" fullname="Core::INavigationWidgetFactory::activationSequence" href="core-inavigationwidgetfactory.html#activationSequence" status="active" access="public" location="inavigationwidgetfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/inavigationwidgetfactory.h" lineno="50" documented="true" meta="plain" const="true" type="QKeySequence" signature="QKeySequence activationSequence() const"/>
                <function name="createWidget" fullname="Core::INavigationWidgetFactory::createWidget" href="core-inavigationwidgetfactory.html#createWidget" status="active" access="public" location="inavigationwidgetfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/inavigationwidgetfactory.h" lineno="56" documented="true" meta="plain" virtual="pure" type="Core::NavigationView" signature="Core::NavigationView createWidget() = 0"/>
                <function name="displayName" fullname="Core::INavigationWidgetFactory::displayName" href="core-inavigationwidgetfactory.html#displayName" status="active" access="public" location="inavigationwidgetfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/inavigationwidgetfactory.h" lineno="47" documented="true" meta="plain" const="true" type="QString" signature="QString displayName() const"/>
                <function name="id" fullname="Core::INavigationWidgetFactory::id" href="core-inavigationwidgetfactory.html#id" status="active" access="public" location="inavigationwidgetfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/inavigationwidgetfactory.h" lineno="49" documented="true" meta="plain" const="true" type="Utils::Id" signature="Utils::Id id() const"/>
                <function name="priority" fullname="Core::INavigationWidgetFactory::priority" href="core-inavigationwidgetfactory.html#priority" status="active" access="public" location="inavigationwidgetfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/inavigationwidgetfactory.h" lineno="48" documented="true" meta="plain" const="true" type="int" signature="int priority() const"/>
                <function name="restoreSettings" fullname="Core::INavigationWidgetFactory::restoreSettings" href="core-inavigationwidgetfactory.html#restoreSettings" status="active" access="public" location="inavigationwidgetfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/inavigationwidgetfactory.h" lineno="59" documented="true" meta="plain" virtual="virtual" type="void" signature="void restoreSettings(Utils::QtcSettings *settings, int position, QWidget *widget)">
                    <parameter type="Utils::QtcSettings *" name="settings" default=""/>
                    <parameter type="int" name="position" default=""/>
                    <parameter type="QWidget *" name="widget" default=""/>
                </function>
                <function name="saveSettings" fullname="Core::INavigationWidgetFactory::saveSettings" href="core-inavigationwidgetfactory.html#saveSettings" status="active" access="public" location="inavigationwidgetfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/inavigationwidgetfactory.h" lineno="58" documented="true" meta="plain" virtual="virtual" type="void" signature="void saveSettings(Utils::QtcSettings *settings, int position, QWidget *widget)">
                    <parameter type="Utils::QtcSettings *" name="settings" default=""/>
                    <parameter type="int" name="position" default=""/>
                    <parameter type="QWidget *" name="widget" default=""/>
                </function>
                <function name="setActivationSequence" fullname="Core::INavigationWidgetFactory::setActivationSequence" href="core-inavigationwidgetfactory.html#setActivationSequence" status="active" access="public" location="inavigationwidgetfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/inavigationwidgetfactory.h" lineno="45" documented="true" meta="plain" type="void" signature="void setActivationSequence(const QKeySequence &amp;keys)">
                    <parameter type="const QKeySequence &amp;" name="keys" default=""/>
                </function>
                <function name="setDisplayName" fullname="Core::INavigationWidgetFactory::setDisplayName" href="core-inavigationwidgetfactory.html#setDisplayName" status="active" access="public" location="inavigationwidgetfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/inavigationwidgetfactory.h" lineno="42" documented="true" meta="plain" type="void" signature="void setDisplayName(const QString &amp;displayName)">
                    <parameter type="const QString &amp;" name="displayName" default=""/>
                </function>
                <function name="setId" fullname="Core::INavigationWidgetFactory::setId" href="core-inavigationwidgetfactory.html#setId" status="active" access="public" location="inavigationwidgetfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/inavigationwidgetfactory.h" lineno="44" documented="true" meta="plain" type="void" signature="void setId(Utils::Id id)">
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
                <function name="setPriority" fullname="Core::INavigationWidgetFactory::setPriority" href="core-inavigationwidgetfactory.html#setPriority" status="active" access="public" location="inavigationwidgetfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/inavigationwidgetfactory.h" lineno="43" documented="true" meta="plain" type="void" signature="void setPriority(int priority)">
                    <parameter type="int" name="priority" default=""/>
                </function>
            </class>
            <class name="IOptionsPage" fullname="Core::IOptionsPage" href="core-ioptionspage.html" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="41" documented="true" groups="mainclasses" module="QtCreator" brief="Interface for providing pages for the Options dialog (called Preferences on macOS)">
                <function name="IOptionsPage" fullname="Core::IOptionsPage::IOptionsPage" href="core-ioptionspage.html#IOptionsPage-2" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="46" documented="true" meta="constructor" explicit="true" overload="true" overload-number="2" signature="IOptionsPage(bool registerGlobally)">
                    <parameter type="bool" name="registerGlobally" default="true"/>
                </function>
                <function name="allOptionsPages" fullname="Core::IOptionsPage::allOptionsPages" href="core-ioptionspage.html#allOptionsPages" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="49" documented="true" meta="plain" static="true" type="const QList&lt;Core::IOptionsPage *&gt;" signature="const QList&lt;Core::IOptionsPage *&gt; allOptionsPages()"/>
                <function name="apply" fullname="Core::IOptionsPage::apply" href="core-ioptionspage.html#apply" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="61" documented="true" meta="plain" virtual="virtual" type="void" signature="void apply()"/>
                <function name="category" fullname="Core::IOptionsPage::category" href="core-ioptionspage.html#category" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="53" documented="true" meta="plain" const="true" type="Utils::Id" signature="Utils::Id category() const"/>
                <function name="categoryIconPath" fullname="Core::IOptionsPage::categoryIconPath" href="core-ioptionspage.html#categoryIconPath" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="55" documented="true" meta="plain" const="true" type="Utils::FilePath" signature="Utils::FilePath categoryIconPath() const"/>
                <function name="displayCategory" fullname="Core::IOptionsPage::displayCategory" href="core-ioptionspage.html#displayCategory" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="54" documented="true" meta="plain" const="true" type="QString" signature="QString displayCategory() const"/>
                <function name="displayName" fullname="Core::IOptionsPage::displayName" href="core-ioptionspage.html#displayName" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="52" documented="true" meta="plain" const="true" type="QString" signature="QString displayName() const"/>
                <function name="finish" fullname="Core::IOptionsPage::finish" href="core-ioptionspage.html#finish" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="62" documented="true" meta="plain" virtual="virtual" type="void" signature="void finish()"/>
                <function name="id" fullname="Core::IOptionsPage::id" href="core-ioptionspage.html#id" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="51" documented="true" meta="plain" const="true" type="Utils::Id" signature="Utils::Id id() const"/>
                <function name="keywords" fullname="Core::IOptionsPage::keywords" href="core-ioptionspage.html#keywords" status="active" access="protected" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="67" documented="true" meta="plain" virtual="virtual" const="true" type="QStringList" signature="QStringList keywords() const"/>
                <function name="matches" fullname="Core::IOptionsPage::matches" href="core-ioptionspage.html#matches" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="64" documented="true" meta="plain" virtual="virtual" const="true" type="bool" signature="bool matches(const QRegularExpression &amp;regexp) const">
                    <parameter type="const QRegularExpression &amp;" name="regexp" default=""/>
                </function>
                <function name="setCategoryIconPath" fullname="Core::IOptionsPage::setCategoryIconPath" href="core-ioptionspage.html#setCategoryIconPath" status="active" access="protected" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="73" documented="true" meta="plain" type="void" signature="void setCategoryIconPath(const Utils::FilePath &amp;categoryIconPath)">
                    <parameter type="const Utils::FilePath &amp;" name="categoryIconPath" default=""/>
                </function>
                <function name="setDisplayName" fullname="Core::IOptionsPage::setDisplayName" href="core-ioptionspage.html#setDisplayName" status="active" access="protected" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="70" documented="true" meta="plain" type="void" signature="void setDisplayName(const QString &amp;displayName)">
                    <parameter type="const QString &amp;" name="displayName" default=""/>
                </function>
                <function name="setId" fullname="Core::IOptionsPage::setId" href="core-ioptionspage.html#setId" status="active" access="protected" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="69" documented="true" meta="plain" type="void" signature="void setId(Utils::Id id)">
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
                <function name="setWidgetCreator" fullname="Core::IOptionsPage::setWidgetCreator" href="core-ioptionspage.html#setWidgetCreator" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="58" documented="true" meta="plain" type="void" signature="void setWidgetCreator(const Core::IOptionsPage::WidgetCreator &amp;widgetCreator)">
                    <parameter type="const Core::IOptionsPage::WidgetCreator &amp;" name="widgetCreator" default=""/>
                </function>
                <function name="widget" fullname="Core::IOptionsPage::widget" href="core-ioptionspage.html#widget" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="60" documented="true" meta="plain" virtual="virtual" type="QWidget *" signature="QWidget * widget()"/>
            </class>
            <class name="IOptionsPageWidget" fullname="Core::IOptionsPageWidget" href="core-ioptionspagewidget.html" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="22" documented="true" groups="mainclasses" bases="QWidget" module="QtCreator" brief="Used to standardize the interaction between an IOptionsPage and its widget">
                <function name="apply" fullname="Core::IOptionsPageWidget::apply" href="core-ioptionspagewidget.html#apply" status="active" access="protected" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="34" documented="true" meta="plain" virtual="virtual" type="void" signature="void apply()"/>
                <function name="finish" fullname="Core::IOptionsPageWidget::finish" href="core-ioptionspagewidget.html#finish" status="active" access="protected" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="35" documented="true" meta="plain" virtual="virtual" type="void" signature="void finish()"/>
                <function name="setOnApply" fullname="Core::IOptionsPageWidget::setOnApply" href="core-ioptionspagewidget.html#setOnApply" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="29" documented="true" meta="plain" type="void" signature="void setOnApply(const std::function&lt;void ()&gt; &amp;func)">
                    <parameter type="const std::function&lt;void ()&gt; &amp;" name="func" default=""/>
                </function>
                <function name="setOnFinish" fullname="Core::IOptionsPageWidget::setOnFinish" href="core-ioptionspagewidget.html#setOnFinish" status="active" access="public" location="ioptionspage.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/dialogs/ioptionspage.h" lineno="30" documented="true" meta="plain" type="void" signature="void setOnFinish(const std::function&lt;void ()&gt; &amp;func)">
                    <parameter type="const std::function&lt;void ()&gt; &amp;" name="func" default=""/>
                </function>
            </class>
            <class name="IOutputPane" fullname="Core::IOutputPane" href="core-ioutputpane.html" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="16" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Interface for providing Output panes">
                <function name="IOutputPane" fullname="Core::IOutputPane::IOutputPane" href="core-ioutputpane.html#IOutputPane" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="21" documented="true" meta="constructor" signature="IOutputPane(QObject *parent)">
                    <parameter type="QObject *" name="parent" default="nullptr"/>
                </function>
                <function name="canFocus" fullname="Core::IOutputPane::canFocus" href="core-ioutputpane.html#canFocus" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="38" documented="true" meta="plain" virtual="pure" const="true" type="bool" signature="bool canFocus() const = 0"/>
                <function name="canNavigate" fullname="Core::IOutputPane::canNavigate" href="core-ioutputpane.html#canNavigate" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="40" documented="true" meta="plain" virtual="pure" const="true" type="bool" signature="bool canNavigate() const = 0"/>
                <function name="canNext" fullname="Core::IOutputPane::canNext" href="core-ioutputpane.html#canNext" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="41" documented="true" meta="plain" virtual="pure" const="true" type="bool" signature="bool canNext() const = 0"/>
                <function name="canPrevious" fullname="Core::IOutputPane::canPrevious" href="core-ioutputpane.html#canPrevious" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="42" documented="true" meta="plain" virtual="pure" const="true" type="bool" signature="bool canPrevious() const = 0"/>
                <function name="clearContents" fullname="Core::IOutputPane::clearContents" href="core-ioutputpane.html#clearContents" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="33" documented="true" meta="plain" virtual="pure" type="void" signature="void clearContents() = 0"/>
                <function name="displayName" fullname="Core::IOutputPane::displayName" href="core-ioutputpane.html#displayName" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="27" documented="true" meta="plain" const="true" type="QString" signature="QString displayName() const"/>
                <function name="flash" fullname="Core::IOutputPane::flash" href="core-ioutputpane.html#flash" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="58" documented="true" meta="slot" type="void" signature="void flash()"/>
                <function name="flashButton" fullname="Core::IOutputPane::flashButton" href="core-ioutputpane.html#flashButton" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="66" documented="true" meta="signal" type="void" signature="void flashButton()"/>
                <function name="goToNext" fullname="Core::IOutputPane::goToNext" href="core-ioutputpane.html#goToNext" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="43" documented="true" meta="plain" virtual="pure" type="void" signature="void goToNext() = 0"/>
                <function name="goToPrev" fullname="Core::IOutputPane::goToPrev" href="core-ioutputpane.html#goToPrev" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="44" documented="true" meta="plain" virtual="pure" type="void" signature="void goToPrev() = 0"/>
                <function name="hasFocus" fullname="Core::IOutputPane::hasFocus" href="core-ioutputpane.html#hasFocus" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="37" documented="true" meta="plain" virtual="pure" const="true" type="bool" signature="bool hasFocus() const = 0"/>
                <function name="hide" fullname="Core::IOutputPane::hide" href="core-ioutputpane.html#hide" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="55" documented="true" meta="slot" type="void" signature="void hide()"/>
                <function name="hidePage" fullname="Core::IOutputPane::hidePage" href="core-ioutputpane.html#hidePage" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="63" documented="true" meta="signal" type="void" signature="void hidePage()"/>
                <function name="id" fullname="Core::IOutputPane::id" href="core-ioutputpane.html#id" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="26" documented="true" meta="plain" const="true" type="Utils::Id" signature="Utils::Id id() const"/>
                <function name="navigateStateChanged" fullname="Core::IOutputPane::navigateStateChanged" href="core-ioutputpane.html#navigateStateChanged" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="57" documented="true" meta="slot" type="void" signature="void navigateStateChanged()"/>
                <function name="navigateStateUpdate" fullname="Core::IOutputPane::navigateStateUpdate" href="core-ioutputpane.html#navigateStateUpdate" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="65" documented="true" meta="signal" type="void" signature="void navigateStateUpdate()"/>
                <function name="outputWidget" fullname="Core::IOutputPane::outputWidget" href="core-ioutputpane.html#outputWidget" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="24" documented="true" meta="plain" virtual="pure" type="QWidget *" signature="QWidget * outputWidget(QWidget *parent) = 0">
                    <parameter type="QWidget *" name="parent" default=""/>
                </function>
                <function name="popup" fullname="Core::IOutputPane::popup" href="core-ioutputpane.html#popup" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="53" documented="true" meta="slot" type="void" signature="void popup(int flags)">
                    <parameter type="int" name="flags" default=""/>
                </function>
                <function name="priorityInStatusBar" fullname="Core::IOutputPane::priorityInStatusBar" href="core-ioutputpane.html#priorityInStatusBar" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="31" documented="true" meta="plain" const="true" type="int" signature="int priorityInStatusBar() const"/>
                <function name="setBadgeNumber" fullname="Core::IOutputPane::setBadgeNumber" href="core-ioutputpane.html#setBadgeNumber" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="67" documented="true" meta="signal" type="void" signature="void setBadgeNumber(int number)">
                    <parameter type="int" name="number" default=""/>
                </function>
                <function name="setDisplayName" fullname="Core::IOutputPane::setDisplayName" href="core-ioutputpane.html#setDisplayName" status="active" access="protected" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="76" documented="true" meta="plain" type="void" signature="void setDisplayName(const QString &amp;name)">
                    <parameter type="const QString &amp;" name="name" default=""/>
                </function>
                <function name="setFocus" fullname="Core::IOutputPane::setFocus" href="core-ioutputpane.html#setFocus" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="36" documented="true" meta="plain" virtual="pure" type="void" signature="void setFocus() = 0"/>
                <function name="setIconBadgeNumber" fullname="Core::IOutputPane::setIconBadgeNumber" href="core-ioutputpane.html#setIconBadgeNumber" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="59" documented="true" meta="slot" type="void" signature="void setIconBadgeNumber(int number)">
                    <parameter type="int" name="number" default=""/>
                </function>
                <function name="setId" fullname="Core::IOutputPane::setId" href="core-ioutputpane.html#setId" status="active" access="protected" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="75" documented="true" meta="plain" type="void" signature="void setId(const Utils::Id &amp;id)">
                    <parameter type="const Utils::Id &amp;" name="id" default=""/>
                </function>
                <function name="setPriorityInStatusBar" fullname="Core::IOutputPane::setPriorityInStatusBar" href="core-ioutputpane.html#setPriorityInStatusBar" status="active" access="protected" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="77" documented="true" meta="plain" type="void" signature="void setPriorityInStatusBar(int priority)">
                    <parameter type="int" name="priority" default=""/>
                </function>
                <function name="showPage" fullname="Core::IOutputPane::showPage" href="core-ioutputpane.html#showPage" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="62" documented="true" meta="signal" type="void" signature="void showPage(int flags)">
                    <parameter type="int" name="flags" default=""/>
                </function>
                <function name="toggle" fullname="Core::IOutputPane::toggle" href="core-ioutputpane.html#toggle" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="56" documented="true" meta="slot" type="void" signature="void toggle(int flags)">
                    <parameter type="int" name="flags" default=""/>
                </function>
                <function name="togglePage" fullname="Core::IOutputPane::togglePage" href="core-ioutputpane.html#togglePage" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="64" documented="true" meta="signal" type="void" signature="void togglePage(int flags)">
                    <parameter type="int" name="flags" default=""/>
                </function>
                <function name="toolBarWidgets" fullname="Core::IOutputPane::toolBarWidgets" href="core-ioutputpane.html#toolBarWidgets" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="25" documented="true" meta="plain" virtual="virtual" const="true" type="QList&lt;QWidget *&gt;" signature="QList&lt;QWidget *&gt; toolBarWidgets() const"/>
                <function name="visibilityChanged" fullname="Core::IOutputPane::visibilityChanged" href="core-ioutputpane.html#visibilityChanged" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="34" documented="true" meta="plain" virtual="virtual" type="void" signature="void visibilityChanged(bool visible)">
                    <parameter type="bool" name="visible" default=""/>
                </function>
                <enum name="Flag" fullname="Core::IOutputPane::Flag" href="core-ioutputpane.html#Flag-enum" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="49" documented="true" typedef="Core::IOutputPane::Flags">
                    <value name="NoModeSwitch" value="0"/>
                    <value name="ModeSwitch" value="1"/>
                    <value name="WithFocus" value="2"/>
                    <value name="EnsureSizeHint" value="4"/>
                </enum>
                <typedef name="Flags" fullname="Core::IOutputPane::Flags" href="core-ioutputpane.html#Flag-enum" status="active" access="public" location="ioutputpane.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../ioutputpane.h" lineno="50" enum="Core::IOutputPane::Flag"/>
            </class>
            <class name="IWizardFactory" fullname="Core::IWizardFactory" href="core-iwizardfactory.html" status="active" access="public" location="iwizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../iwizardfactory.h" lineno="27" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="The base class for all wizard factories">
                <function name="category" fullname="Core::IWizardFactory::category" href="core-iwizardfactory.html#category" status="active" access="public" location="iwizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../iwizardfactory.h" lineno="48" documented="true" meta="plain" const="true" type="QString" signature="QString category() const"/>
                <function name="description" fullname="Core::IWizardFactory::description" href="core-iwizardfactory.html#description" status="active" access="public" location="iwizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../iwizardfactory.h" lineno="46" documented="true" meta="plain" const="true" type="QString" signature="QString description() const"/>
                <function name="displayCategory" fullname="Core::IWizardFactory::displayCategory" href="core-iwizardfactory.html#displayCategory" status="active" access="public" location="iwizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../iwizardfactory.h" lineno="49" documented="true" meta="plain" const="true" type="QString" signature="QString displayCategory() const"/>
                <function name="displayName" fullname="Core::IWizardFactory::displayName" href="core-iwizardfactory.html#displayName" status="active" access="public" location="iwizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../iwizardfactory.h" lineno="47" documented="true" meta="plain" const="true" type="QString" signature="QString displayName() const"/>
                <function name="icon" fullname="Core::IWizardFactory::icon" href="core-iwizardfactory.html#icon" status="active" access="public" location="iwizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../iwizardfactory.h" lineno="44" documented="true" meta="plain" const="true" type="QIcon" signature="QIcon icon() const"/>
                <function name="id" fullname="Core::IWizardFactory::id" href="core-iwizardfactory.html#id" status="active" access="public" location="iwizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../iwizardfactory.h" lineno="42" documented="true" meta="plain" const="true" type="Utils::Id" signature="Utils::Id id() const"/>
                <function name="kind" fullname="Core::IWizardFactory::kind" href="core-iwizardfactory.html#kind" status="active" access="public" location="iwizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../iwizardfactory.h" lineno="43" documented="true" meta="plain" const="true" type="Core::IWizardFactory::WizardKind" signature="Core::IWizardFactory::WizardKind kind() const"/>
                <function name="runWizard" fullname="Core::IWizardFactory::runWizard" href="core-iwizardfactory.html#runWizard" status="active" access="public" location="iwizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../iwizardfactory.h" lineno="74" documented="true" meta="plain" type="Utils::Wizard *" signature="Utils::Wizard * runWizard(const Utils::FilePath &amp;path, QWidget *parent, Utils::Id platform, const QVariantMap &amp;variables, bool showWizard)">
                    <parameter type="const Utils::FilePath &amp;" name="path" default=""/>
                    <parameter type="QWidget *" name="parent" default=""/>
                    <parameter type="Utils::Id" name="platform" default=""/>
                    <parameter type="const QVariantMap &amp;" name="variables" default=""/>
                    <parameter type="bool" name="showWizard" default="true"/>
                </function>
                <enum name="WizardFlag" fullname="Core::IWizardFactory::WizardFlag" href="core-iwizardfactory.html#WizardFlag-enum" status="active" access="public" location="iwizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../iwizardfactory.h" lineno="36" documented="true" typedef="Core::IWizardFactory::WizardFlags">
                    <value name="PlatformIndependent" value="0x01"/>
                    <value name="ForceCapitalLetterForFileName" value="0x02"/>
                </enum>
                <enum name="WizardKind" fullname="Core::IWizardFactory::WizardKind" href="core-iwizardfactory.html#WizardKind-enum" status="active" access="public" location="iwizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../iwizardfactory.h" lineno="32" documented="true">
                    <value name="FileWizard" value="0x01"/>
                    <value name="ProjectWizard" value="0x02"/>
                </enum>
                <typedef name="WizardFlags" fullname="Core::IWizardFactory::WizardFlags" href="core-iwizardfactory.html#WizardFlag-enum" status="active" access="public" location="iwizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../iwizardfactory.h" lineno="40" enum="Core::IWizardFactory::WizardFlag"/>
            </class>
            <class name="LocatorFileCache" fullname="Core::LocatorFileCache" href="core-locatorfilecache.html" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="300" documented="true" module="QtCreator" brief="Encapsulates all the responsibilities needed for implementing a cache for file filters">
                <function name="LocatorFileCache" fullname="Core::LocatorFileCache::LocatorFileCache" href="core-locatorfilecache.html#LocatorFileCache-2" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="310" documented="true" meta="constructor" overload="true" overload-number="2" signature="LocatorFileCache()"/>
                <function name="filePathsGenerator" fullname="Core::LocatorFileCache::filePathsGenerator" href="core-locatorfilecache.html#filePathsGenerator" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="319" documented="true" meta="plain" static="true" type="Core::LocatorFileCache::FilePathsGenerator" signature="Core::LocatorFileCache::FilePathsGenerator filePathsGenerator(const Utils::FilePaths &amp;filePaths)">
                    <parameter type="const Utils::FilePaths &amp;" name="filePaths" default=""/>
                </function>
                <function name="invalidate" fullname="Core::LocatorFileCache::invalidate" href="core-locatorfilecache.html#invalidate" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="312" documented="true" meta="plain" type="void" signature="void invalidate()"/>
                <function name="matcher" fullname="Core::LocatorFileCache::matcher" href="core-locatorfilecache.html#matcher" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="320" documented="true" meta="plain" const="true" type="Core::LocatorMatcherTask" signature="Core::LocatorMatcherTask matcher() const"/>
                <function name="processFilePaths" fullname="Core::LocatorFileCache::processFilePaths" href="core-locatorfilecache.html#processFilePaths" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="323" documented="true" meta="plain" static="true" type="Utils::FilePaths" signature="Utils::FilePaths processFilePaths(const QFuture&lt;void&gt; &amp;future, const Utils::FilePaths &amp;filePaths, bool hasPathSeparator, const QRegularExpression &amp;regExp, const Utils::Link &amp;inputLink, LocatorFileCache::MatchedEntries *entries)">
                    <parameter type="const QFuture&lt;void&gt; &amp;" name="future" default=""/>
                    <parameter type="const Utils::FilePaths &amp;" name="filePaths" default=""/>
                    <parameter type="bool" name="hasPathSeparator" default=""/>
                    <parameter type="const QRegularExpression &amp;" name="regExp" default=""/>
                    <parameter type="const Utils::Link &amp;" name="inputLink" default=""/>
                    <parameter type="LocatorFileCache::MatchedEntries *" name="entries" default=""/>
                </function>
                <function name="setFilePaths" fullname="Core::LocatorFileCache::setFilePaths" href="core-locatorfilecache.html#setFilePaths" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="314" documented="true" meta="plain" type="void" signature="void setFilePaths(const Utils::FilePaths &amp;filePaths)">
                    <parameter type="const Utils::FilePaths &amp;" name="filePaths" default=""/>
                </function>
                <function name="setFilePathsGenerator" fullname="Core::LocatorFileCache::setFilePathsGenerator" href="core-locatorfilecache.html#setFilePathsGenerator" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="313" documented="true" meta="plain" type="void" signature="void setFilePathsGenerator(const Core::LocatorFileCache::FilePathsGenerator &amp;generator)">
                    <parameter type="const Core::LocatorFileCache::FilePathsGenerator &amp;" name="generator" default=""/>
                </function>
                <function name="setGeneratorProvider" fullname="Core::LocatorFileCache::setGeneratorProvider" href="core-locatorfilecache.html#setGeneratorProvider" status="active" access="public" location="ilocatorfilter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/locator/../locator/ilocatorfilter.h" lineno="315" documented="true" meta="plain" type="void" signature="void setGeneratorProvider(const Core::LocatorFileCache::GeneratorProvider &amp;provider)">
                    <parameter type="const Core::LocatorFileCache::GeneratorProvider &amp;" name="provider" default=""/>
                </function>
            </class>
            <class name="MessageManager" fullname="Core::MessageManager" href="core-messagemanager.html" status="active" access="public" location="messagemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/messagemanager.h" lineno="24" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Used to post messages in the General Messages pane">
                <function name="writeDisrupting" fullname="Core::MessageManager::writeDisrupting" href="core-messagemanager.html#writeDisrupting" status="active" access="public" location="messagemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/messagemanager.h" lineno="36" documented="true" meta="plain" static="true" type="void" signature="void writeDisrupting(const QString &amp;message)">
                    <parameter type="const QString &amp;" name="message" default=""/>
                </function>
                <function name="writeDisrupting" fullname="Core::MessageManager::writeDisrupting" href="core-messagemanager.html#writeDisrupting-1" status="active" access="public" location="messagemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/messagemanager.h" lineno="40" documented="true" meta="plain" static="true" overload="true" overload-number="1" type="void" signature="void writeDisrupting(const QStringList &amp;messages)">
                    <parameter type="const QStringList &amp;" name="messages" default=""/>
                </function>
                <function name="writeFlashing" fullname="Core::MessageManager::writeFlashing" href="core-messagemanager.html#writeFlashing" status="active" access="public" location="messagemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/messagemanager.h" lineno="35" documented="true" meta="plain" static="true" type="void" signature="void writeFlashing(const QString &amp;message)">
                    <parameter type="const QString &amp;" name="message" default=""/>
                </function>
                <function name="writeFlashing" fullname="Core::MessageManager::writeFlashing" href="core-messagemanager.html#writeFlashing-1" status="active" access="public" location="messagemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/messagemanager.h" lineno="39" documented="true" meta="plain" static="true" overload="true" overload-number="1" type="void" signature="void writeFlashing(const QStringList &amp;messages)">
                    <parameter type="const QStringList &amp;" name="messages" default=""/>
                </function>
                <function name="writeSilently" fullname="Core::MessageManager::writeSilently" href="core-messagemanager.html#writeSilently" status="active" access="public" location="messagemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/messagemanager.h" lineno="34" documented="true" meta="plain" static="true" type="void" signature="void writeSilently(const QString &amp;message)">
                    <parameter type="const QString &amp;" name="message" default=""/>
                </function>
                <function name="writeSilently" fullname="Core::MessageManager::writeSilently" href="core-messagemanager.html#writeSilently-1" status="active" access="public" location="messagemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/messagemanager.h" lineno="38" documented="true" meta="plain" static="true" overload="true" overload-number="1" type="void" signature="void writeSilently(const QStringList &amp;messages)">
                    <parameter type="const QStringList &amp;" name="messages" default=""/>
                </function>
            </class>
            <class name="MiniSplitter" fullname="Core::MiniSplitter" href="core-minisplitter.html" status="active" access="public" location="minisplitter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/minisplitter.h" lineno="17" documented="true" bases="QSplitter" module="QtCreator" brief="Simple helper-class to obtain macOS style 1-pixel wide splitters">
                <enum name="SplitterStyle" fullname="Core::MiniSplitter::SplitterStyle" href="core-minisplitter.html#SplitterStyle-enum" status="active" access="public" location="minisplitter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/minisplitter.h" lineno="20" documented="true">
                    <value name="Dark" value="0"/>
                    <value name="Light" value="1"/>
                </enum>
            </class>
            <class name="ModeManager" fullname="Core::ModeManager" href="core-modemanager.html" status="active" access="public" location="modemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/modemanager.h" lineno="26" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Manages the activation of modes and the actions in the mode selector's tool bar">
                <function name="activateMode" fullname="Core::ModeManager::activateMode" href="core-modemanager.html#activateMode" status="active" access="public" location="modemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/modemanager.h" lineno="45" documented="true" meta="plain" static="true" type="void" signature="void activateMode(Utils::Id id)">
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
                <function name="addAction" fullname="Core::ModeManager::addAction" href="core-modemanager.html#addAction" status="active" access="public" location="modemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/modemanager.h" lineno="42" documented="true" meta="plain" static="true" type="void" signature="void addAction(QAction *action, int priority)">
                    <parameter type="QAction *" name="action" default=""/>
                    <parameter type="int" name="priority" default=""/>
                </function>
                <function name="currentMode" fullname="Core::ModeManager::currentMode" href="core-modemanager.html#currentMode" status="active" access="public" location="modemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/modemanager.h" lineno="39" documented="true" meta="plain" static="true" type="Core::IMode *" signature="Core::IMode * currentMode()"/>
                <function name="currentModeAboutToChange" fullname="Core::ModeManager::currentModeAboutToChange" href="core-modemanager.html#currentModeAboutToChange" status="active" access="public" location="modemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/modemanager.h" lineno="55" documented="true" meta="signal" type="void" signature="void currentModeAboutToChange(Utils::Id mode)">
                    <parameter type="Utils::Id" name="mode" default=""/>
                </function>
                <function name="currentModeChanged" fullname="Core::ModeManager::currentModeChanged" href="core-modemanager.html#currentModeChanged" status="active" access="public" location="modemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/modemanager.h" lineno="58" documented="true" meta="signal" type="void" signature="void currentModeChanged(Utils::Id mode, Utils::Id oldMode)">
                    <parameter type="Utils::Id" name="mode" default=""/>
                    <parameter type="Utils::Id" name="oldMode" default="{}"/>
                </function>
                <function name="currentModeId" fullname="Core::ModeManager::currentModeId" href="core-modemanager.html#currentModeId" status="active" access="public" location="modemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/modemanager.h" lineno="40" documented="true" meta="plain" static="true" type="Utils::Id" signature="Utils::Id currentModeId()"/>
                <function name="instance" fullname="Core::ModeManager::instance" href="core-modemanager.html#instance" status="active" access="public" location="modemanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/modemanager.h" lineno="37" documented="true" meta="plain" static="true" type="Core::ModeManager *" signature="Core::ModeManager * instance()"/>
            </class>
            <struct name="NavigationView" fullname="Core::NavigationView" href="core-navigationview.html" status="active" access="public" location="inavigationwidgetfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/inavigationwidgetfactory.h" lineno="26" documented="true" module="Qt Creator" brief="C struct for wrapping a widget and a list of tool buttons. Wrapping the widget that is shown in the content area of the navigation widget and a list of tool buttons that is shown in the header above it"/>
            <class name="NonResizingSplitter" fullname="Core::NonResizingSplitter" href="core-nonresizingsplitter.html" status="active" access="public" location="minisplitter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/minisplitter.h" lineno="32" documented="true" bases="Core::MiniSplitter" module="QtCreator" brief="MiniSplitter that keeps its first widget's size fixed when it is resized">
                <function name="NonResizingSplitter" fullname="Core::NonResizingSplitter::NonResizingSplitter" href="core-nonresizingsplitter.html#NonResizingSplitter" status="active" access="public" location="minisplitter.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/minisplitter.h" lineno="35" documented="true" meta="constructor" explicit="true" signature="NonResizingSplitter(QWidget *parent, Core::MiniSplitter::SplitterStyle style)">
                    <parameter type="QWidget *" name="parent" default=""/>
                    <parameter type="Core::MiniSplitter::SplitterStyle" name="style" default="Light"/>
                </function>
            </class>
            <class name="ProcessProgress" fullname="Core::ProcessProgress" href="core-processprogress.html" status="active" access="public" location="processprogress.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/processprogress.h" lineno="20" documented="true" bases="QObject" module="QtCreator" brief="Responsible for showing progress of the running process"/>
            <class name="ProgressManager" fullname="Core::ProgressManager" href="core-progressmanager.html" status="active" access="public" location="progressmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/progressmanager.h" lineno="21" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Used to show a user interface for running tasks in Qt Creator">
                <contents name="registering-a-task" title="Registering a task" level="1"/>
                <contents name="create-a-threaded-task-with-qtconcurrent" title="Create a threaded task with QtConcurrent" level="2"/>
                <contents name="manually-create-qtconcurrent-objects-for-your-thread" title="Manually create QtConcurrent objects for your thread" level="2"/>
                <contents name="customizing-progress-appearance" title="Customizing progress appearance" level="1"/>
                <function name="addTask" fullname="Core::ProgressManager::addTask" href="core-progressmanager.html#addTask-1" status="active" access="public" location="progressmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/progressmanager.h" lineno="39" documented="true" meta="plain" static="true" overload="true" overload-number="1" type="Core::FutureProgress *" signature="Core::FutureProgress * addTask(const QFuture&lt;void&gt; &amp;future, const QString &amp;title, Utils::Id type, Core::ProgressManager::ProgressFlags flags)">
                    <parameter type="const QFuture&lt;void&gt; &amp;" name="future" default=""/>
                    <parameter type="const QString &amp;" name="title" default=""/>
                    <parameter type="Utils::Id" name="type" default=""/>
                    <parameter type="Core::ProgressManager::ProgressFlags" name="flags" default="{}"/>
                </function>
                <function name="addTimedTask" fullname="Core::ProgressManager::addTimedTask" href="core-progressmanager.html#addTimedTask" status="active" access="public" location="progressmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/progressmanager.h" lineno="41" documented="true" meta="plain" static="true" type="Core::FutureProgress *" signature="Core::FutureProgress * addTimedTask(const QFutureInterface&lt;void&gt; &amp;futureInterface, const QString &amp;title, Utils::Id type, std::chrono::seconds expectedDuration, Core::ProgressManager::ProgressFlags flags)">
                    <parameter type="const QFutureInterface&lt;void&gt; &amp;" name="futureInterface" default=""/>
                    <parameter type="const QString &amp;" name="title" default=""/>
                    <parameter type="Utils::Id" name="type" default=""/>
                    <parameter type="std::chrono::seconds" name="expectedDuration" default=""/>
                    <parameter type="Core::ProgressManager::ProgressFlags" name="flags" default="{}"/>
                </function>
                <function name="allTasksFinished" fullname="Core::ProgressManager::allTasksFinished" href="core-progressmanager.html#allTasksFinished" status="active" access="public" location="progressmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/progressmanager.h" lineno="58" documented="true" meta="signal" type="void" signature="void allTasksFinished(Utils::Id type)">
                    <parameter type="Utils::Id" name="type" default=""/>
                </function>
                <function name="cancelTasks" fullname="Core::ProgressManager::cancelTasks" href="core-progressmanager.html#cancelTasks" status="active" access="public" location="progressmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/progressmanager.h" lineno="54" documented="true" meta="slot" static="true" type="void" signature="void cancelTasks(Utils::Id type)">
                    <parameter type="Utils::Id" name="type" default=""/>
                </function>
                <function name="instance" fullname="Core::ProgressManager::instance" href="core-progressmanager.html#instance" status="active" access="public" location="progressmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/progressmanager.h" lineno="31" documented="true" meta="plain" static="true" type="Core::ProgressManager *" signature="Core::ProgressManager * instance()"/>
                <function name="setApplicationLabel" fullname="Core::ProgressManager::setApplicationLabel" href="core-progressmanager.html#setApplicationLabel" status="active" access="public" location="progressmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/progressmanager.h" lineno="51" documented="true" meta="plain" static="true" type="void" signature="void setApplicationLabel(const QString &amp;text)">
                    <parameter type="const QString &amp;" name="text" default=""/>
                </function>
                <function name="taskStarted" fullname="Core::ProgressManager::taskStarted" href="core-progressmanager.html#taskStarted" status="active" access="public" location="progressmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/progressmanager.h" lineno="57" documented="true" meta="signal" type="void" signature="void taskStarted(Utils::Id type)">
                    <parameter type="Utils::Id" name="type" default=""/>
                </function>
                <enum name="ProgressFlag" fullname="Core::ProgressManager::ProgressFlag" href="core-progressmanager.html#ProgressFlag-enum" status="active" access="public" location="progressmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/progressmanager.h" lineno="25" documented="true" typedef="Core::ProgressManager::ProgressFlags">
                    <value name="KeepOnFinish" value="0x01"/>
                    <value name="ShowInApplicationIcon" value="0x02"/>
                </enum>
                <typedef name="ProgressFlags" fullname="Core::ProgressManager::ProgressFlags" href="core-progressmanager.html#ProgressFlag-enum" status="active" access="public" location="progressmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/progressmanager.h" lineno="29" enum="Core::ProgressManager::ProgressFlag"/>
            </class>
            <class name="SearchResult" fullname="Core::SearchResult" href="core-searchresult.html" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="40" documented="true" bases="QObject" module="QtCreator" brief="Reports user interaction, such as the activation of a search result item">
                <function name="activated" fullname="Core::SearchResult::activated" href="core-searchresult.html#activated" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="75" documented="true" meta="signal" type="void" signature="void activated(const Utils::SearchResultItem &amp;item)">
                    <parameter type="const Utils::SearchResultItem &amp;" name="item" default=""/>
                </function>
                <function name="addResult" fullname="Core::SearchResult::addResult" href="core-searchresult.html#addResult" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="64" documented="true" meta="slot" type="void" signature="void addResult(const Utils::SearchResultItem &amp;item)">
                    <parameter type="const Utils::SearchResultItem &amp;" name="item" default=""/>
                </function>
                <function name="addResults" fullname="Core::SearchResult::addResults" href="core-searchresult.html#addResults" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="65" documented="true" meta="slot" type="void" signature="void addResults(const Utils::SearchResultItems &amp;items, Core::SearchResult::AddMode mode)">
                    <parameter type="const Utils::SearchResultItems &amp;" name="items" default=""/>
                    <parameter type="Core::SearchResult::AddMode" name="mode" default=""/>
                </function>
                <function name="additionalReplaceWidget" fullname="Core::SearchResult::additionalReplaceWidget" href="core-searchresult.html#additionalReplaceWidget" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="57" documented="true" meta="plain" const="true" type="QWidget *" signature="QWidget * additionalReplaceWidget() const"/>
                <function name="canceled" fullname="Core::SearchResult::canceled" href="core-searchresult.html#canceled" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="79" documented="true" meta="signal" type="void" signature="void canceled()"/>
                <function name="count" fullname="Core::SearchResult::count" href="core-searchresult.html#count" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="55" documented="true" meta="plain" const="true" type="int" signature="int count() const"/>
                <function name="countChanged" fullname="Core::SearchResult::countChanged" href="core-searchresult.html#countChanged" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="82" documented="true" meta="signal" type="void" signature="void countChanged(int count)">
                    <parameter type="int" name="count" default=""/>
                </function>
                <function name="finishSearch" fullname="Core::SearchResult::finishSearch" href="core-searchresult.html#finishSearch" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="67" documented="true" meta="slot" type="void" signature="void finishSearch(bool canceled, const QString &amp;reason)">
                    <parameter type="bool" name="canceled" default=""/>
                    <parameter type="const QString &amp;" name="reason" default="{}"/>
                </function>
                <function name="paused" fullname="Core::SearchResult::paused" href="core-searchresult.html#paused" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="80" documented="true" meta="signal" type="void" signature="void paused(bool paused)">
                    <parameter type="bool" name="paused" default=""/>
                </function>
                <function name="popup" fullname="Core::SearchResult::popup" href="core-searchresult.html#popup" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="72" documented="true" meta="slot" type="void" signature="void popup()"/>
                <function name="replaceButtonClicked" fullname="Core::SearchResult::replaceButtonClicked" href="core-searchresult.html#replaceButtonClicked" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="76" documented="true" meta="signal" type="void" signature="void replaceButtonClicked(const QString &amp;replaceText, const Utils::SearchResultItems &amp;checkedItems, bool preserveCase)">
                    <parameter type="const QString &amp;" name="replaceText" default=""/>
                    <parameter type="const Utils::SearchResultItems &amp;" name="checkedItems" default=""/>
                    <parameter type="bool" name="preserveCase" default=""/>
                </function>
                <function name="restart" fullname="Core::SearchResult::restart" href="core-searchresult.html#restart" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="69" documented="true" meta="slot" type="void" signature="void restart()"/>
                <function name="searchAgainRequested" fullname="Core::SearchResult::searchAgainRequested" href="core-searchresult.html#searchAgainRequested" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="83" documented="true" meta="signal" type="void" signature="void searchAgainRequested()"/>
                <function name="setAdditionalReplaceWidget" fullname="Core::SearchResult::setAdditionalReplaceWidget" href="core-searchresult.html#setAdditionalReplaceWidget" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="58" documented="true" meta="plain" type="void" signature="void setAdditionalReplaceWidget(QWidget *widget)">
                    <parameter type="QWidget *" name="widget" default=""/>
                </function>
                <function name="setReplaceEnabled" fullname="Core::SearchResult::setReplaceEnabled" href="core-searchresult.html#setReplaceEnabled" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="70" documented="true" meta="slot" type="void" signature="void setReplaceEnabled(bool enabled)">
                    <parameter type="bool" name="enabled" default=""/>
                </function>
                <function name="setSearchAgainEnabled" fullname="Core::SearchResult::setSearchAgainEnabled" href="core-searchresult.html#setSearchAgainEnabled" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="71" documented="true" meta="slot" type="void" signature="void setSearchAgainEnabled(bool enabled)">
                    <parameter type="bool" name="enabled" default=""/>
                </function>
                <function name="setSearchAgainSupported" fullname="Core::SearchResult::setSearchAgainSupported" href="core-searchresult.html#setSearchAgainSupported" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="56" documented="true" meta="plain" type="void" signature="void setSearchAgainSupported(bool supported)">
                    <parameter type="bool" name="supported" default=""/>
                </function>
                <function name="setTextToReplace" fullname="Core::SearchResult::setTextToReplace" href="core-searchresult.html#setTextToReplace" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="68" documented="true" meta="slot" type="void" signature="void setTextToReplace(const QString &amp;textToReplace)">
                    <parameter type="const QString &amp;" name="textToReplace" default=""/>
                </function>
                <function name="setUserData" fullname="Core::SearchResult::setUserData" href="core-searchresult.html#setUserData" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="51" documented="true" meta="plain" type="void" signature="void setUserData(const QVariant &amp;data)">
                    <parameter type="const QVariant &amp;" name="data" default=""/>
                </function>
                <function name="textToReplace" fullname="Core::SearchResult::textToReplace" href="core-searchresult.html#textToReplace" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="54" documented="true" meta="plain" const="true" type="QString" signature="QString textToReplace() const"/>
                <function name="userData" fullname="Core::SearchResult::userData" href="core-searchresult.html#userData" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="52" documented="true" meta="plain" const="true" type="QVariant" signature="QVariant userData() const"/>
                <function name="visibilityChanged" fullname="Core::SearchResult::visibilityChanged" href="core-searchresult.html#visibilityChanged" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="81" documented="true" meta="signal" type="void" signature="void visibilityChanged(bool visible)">
                    <parameter type="bool" name="visible" default=""/>
                </function>
                <enum name="AddMode" fullname="Core::SearchResult::AddMode" href="core-searchresult.html#AddMode-enum" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="45" documented="true">
                    <value name="AddSortedByContent" value="0"/>
                    <value name="AddSortedByPosition" value="1"/>
                    <value name="AddOrdered" value="2"/>
                </enum>
            </class>
            <class name="SearchResultWindow" fullname="Core::SearchResultWindow" href="core-searchresultwindow.html" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="95" documented="true" bases="Core::IOutputPane" module="QtCreator" brief="The implementation of a commonly shared Search Results output pane">
                <function name="clearContents" fullname="Core::SearchResultWindow::clearContents" href="core-searchresultwindow.html#clearContents" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="144" documented="true" meta="slot" virtual="virtual" override="true" type="void" signature="void clearContents() override"/>
                <function name="instance" fullname="Core::SearchResultWindow::instance" href="core-searchresultwindow.html#instance" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="112" documented="true" meta="plain" static="true" type="Core::SearchResultWindow *" signature="Core::SearchResultWindow * instance()"/>
                <function name="openNewSearchPanel" fullname="Core::SearchResultWindow::openNewSearchPanel" href="core-searchresultwindow.html#openNewSearchPanel" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="130" documented="true" meta="plain" type="void" signature="void openNewSearchPanel()"/>
                <function name="setTabWidth" fullname="Core::SearchResultWindow::setTabWidth" href="core-searchresultwindow.html#setTabWidth" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="129" documented="true" meta="plain" type="void" signature="void setTabWidth(int tabWidth)">
                    <parameter type="int" name="tabWidth" default=""/>
                </function>
                <function name="startNewSearch" fullname="Core::SearchResultWindow::startNewSearch" href="core-searchresultwindow.html#startNewSearch" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="136" documented="true" meta="plain" type="Core::SearchResult *" signature="Core::SearchResult * startNewSearch(const QString &amp;label, const QString &amp;toolTip, const QString &amp;searchTerm, Core::SearchResultWindow::SearchMode searchOrSearchAndReplace, Core::SearchResultWindow::PreserveCaseMode preserveCaseMode, const QString &amp;cfgGroup)">
                    <parameter type="const QString &amp;" name="label" default=""/>
                    <parameter type="const QString &amp;" name="toolTip" default=""/>
                    <parameter type="const QString &amp;" name="searchTerm" default=""/>
                    <parameter type="Core::SearchResultWindow::SearchMode" name="searchOrSearchAndReplace" default="SearchOnly"/>
                    <parameter type="Core::SearchResultWindow::PreserveCaseMode" name="preserveCaseMode" default="PreserveCaseEnabled"/>
                    <parameter type="const QString &amp;" name="cfgGroup" default="QString()"/>
                </function>
                <enum name="PreserveCaseMode" fullname="Core::SearchResultWindow::PreserveCaseMode" href="core-searchresultwindow.html#PreserveCaseMode-enum" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="105" documented="true">
                    <value name="PreserveCaseEnabled" value="0"/>
                    <value name="PreserveCaseDisabled" value="1"/>
                </enum>
                <enum name="SearchMode" fullname="Core::SearchResultWindow::SearchMode" href="core-searchresultwindow.html#SearchMode-enum" status="active" access="public" location="searchresultwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/find/searchresultwindow.h" lineno="100" documented="true">
                    <value name="SearchOnly" value="0"/>
                    <value name="SearchAndReplace" value="1"/>
                </enum>
            </class>
            <class name="SessionManager" fullname="Core::SessionManager" href="core-sessionmanager.html" status="active" access="public" location="session.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/session.h" lineno="20" documented="true" bases="QObject" module="QtCreator" brief="Manages sessions">
                <function name="confirmSessionDelete" fullname="Core::SessionManager::confirmSessionDelete" href="core-sessionmanager.html#confirmSessionDelete" status="active" access="public" location="session.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/session.h" lineno="41" documented="true" meta="plain" static="true" type="bool" signature="bool confirmSessionDelete(const QStringList &amp;sessions)">
                    <parameter type="const QStringList &amp;" name="sessions" default=""/>
                </function>
                <function name="createSession" fullname="Core::SessionManager::createSession" href="core-sessionmanager.html#createSession" status="active" access="public" location="session.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/session.h" lineno="39" documented="true" meta="plain" static="true" type="bool" signature="bool createSession(const QString &amp;session)">
                    <parameter type="const QString &amp;" name="session" default=""/>
                </function>
                <function name="deleteSession" fullname="Core::SessionManager::deleteSession" href="core-sessionmanager.html#deleteSession" status="active" access="public" location="session.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/session.h" lineno="42" documented="true" meta="plain" static="true" type="bool" signature="bool deleteSession(const QString &amp;session)">
                    <parameter type="const QString &amp;" name="session" default=""/>
                </function>
                <function name="lastSession" fullname="Core::SessionManager::lastSession" href="core-sessionmanager.html#lastSession" status="active" access="public" location="session.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/session.h" lineno="32" documented="true" meta="plain" static="true" type="QString" signature="QString lastSession()"/>
                <function name="setValue" fullname="Core::SessionManager::setValue" href="core-sessionmanager.html#setValue" status="active" access="public" location="session.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/session.h" lineno="57" documented="true" meta="plain" static="true" type="void" signature="void setValue(const Utils::Key &amp;name, const QVariant &amp;value)">
                    <parameter type="const Utils::Key &amp;" name="name" default=""/>
                    <parameter type="const QVariant &amp;" name="value" default=""/>
                </function>
                <function name="startupSession" fullname="Core::SessionManager::startupSession" href="core-sessionmanager.html#startupSession" status="active" access="public" location="session.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/session.h" lineno="33" documented="true" meta="plain" static="true" type="QString" signature="QString startupSession()"/>
            </class>
            <namespace name="SettingsDatabase" fullname="Core::SettingsDatabase" href="core-settingsdatabase.html" status="active" access="public" location="settingsdatabase.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/settingsdatabase.h" lineno="10" documented="true" module="QtCreator" brief="Offers an alternative to the application-wide QSettings that is more suitable for storing large amounts of data"/>
            <class name="TaskProgress" fullname="Core::TaskProgress" href="core-taskprogress.html" status="active" access="public" location="taskprogress.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/progressmanager/taskprogress.h" lineno="20" documented="true" bases="QObject" module="QtCreator" brief="Responsible for showing progress of the running task tree"/>
            <class name="WizardDialogParameters" fullname="Core::WizardDialogParameters" href="core-wizarddialogparameters.html" status="active" access="public" location="basefilewizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/basefilewizardfactory.h" lineno="26" documented="true" module="QtCreator" brief="Holds parameters for the new file wizard dialog">
                <enum name="DialogParameterEnum" fullname="Core::WizardDialogParameters::DialogParameterEnum" href="core-wizarddialogparameters.html#DialogParameterEnum-enum" status="active" access="public" location="basefilewizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/basefilewizardfactory.h" lineno="31" documented="true" typedef="Core::WizardDialogParameters::DialogParameterFlags">
                    <value name="ForceCapitalLetterForFileName" value="0x01"/>
                </enum>
                <typedef name="DialogParameterFlags" fullname="Core::WizardDialogParameters::DialogParameterFlags" href="core-wizarddialogparameters.html#DialogParameterEnum-enum" status="active" access="public" location="basefilewizardfactory.h" filepath="C:/Users/qt/work/build/qt-creator/src/plugins/coreplugin/basefilewizardfactory.h" lineno="34" enum="Core::WizardDialogParameters::DialogParameterEnum"/>
            </class>
        </namespace>
        <page name="creating-plugins.html" href="creating-plugins.html" status="active" location="creating-plugins.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/creating-plugins.qdoc" lineno="4" documented="true" subtype="page" title="Creating Plugins" fulltitle="Creating Plugins" subtitle="">
            <contents name="basics" title="Basics" level="1"/>
            <contents name="topics" title="Topics" level="1"/>
            <contents name="design-principles" title="Design Principles" level="1"/>
        </page>
        <page name="qtcreator-dev-wizards.html" href="qtcreator-dev-wizards.html" status="active" location="qtcreator-dev-wizards.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/qtcreator-dev-wizards.qdoc" lineno="4" documented="true" subtype="page" title="Creating Wizards in Code" fulltitle="Creating Wizards in Code" subtitle="">
            <contents name="introduction" title="Introduction" level="1"/>
            <contents name="relevant-classes" title="Relevant Classes" level="2"/>
            <contents name="setters-and-getters-of-iwizardfactory" title="Setters and Getters of IWizardFactory" level="2"/>
        </page>
        <page name="first-plugin.html" href="first-plugin.html" status="active" location="first-plugin.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/first-plugin.qdoc" lineno="4" documented="true" subtype="page" title="Creating Your First Plugin" fulltitle="Creating Your First Plugin" subtitle="">
            <contents name="creating-a-plugin-project" title="Creating a Plugin Project" level="1"/>
            <contents name="building-and-running-the-plugin" title="Building and Running the Plugin" level="1"/>
            <contents name="file-structure" title="File Structure" level="1"/>
            <contents name="cmake-project" title="CMake Project" level="1"/>
            <contents name="plugin-meta-data-template" title="Plugin Meta Data Template" level="1"/>
            <contents name="plugin-class" title="Plugin Class" level="1"/>
            <contents name="header-file" title="Header File" level="2"/>
            <contents name="source-file" title="Source File" level="2"/>
        </page>
        <page name="distributing-plugins.html" href="distributing-plugins.html" status="active" location="distributing-plugins.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/distributing-plugins.qdoc" lineno="4" documented="true" subtype="page" title="Distributing Plugins" fulltitle="Distributing Plugins" subtitle="">
            <contents name="creating-binaries" title="Creating Binaries" level="1"/>
            <contents name="packaging" title="Packaging" level="1"/>
            <contents name="single-library" title="Single Library" level="2"/>
            <contents name="summary" title="Summary" level="3"/>
            <contents name="multiple-files-following-qt-creator-s-filesystem-layout" title="Multiple Files Following Qt Creator's Filesystem Layout" level="2"/>
            <contents name="summary" title="Summary" level="3"/>
        </page>
        <page name="index.html" href="index.html" status="active" location="qtcreator-dev.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/qtcreator-dev.qdoc" lineno="4" documented="true" subtype="page" title="Extending Qt Creator Manual" fulltitle="Extending Qt Creator Manual" subtitle="">
            <contents name="generating-domain-specific-code-and-templates" title="Generating Domain Specific Code and Templates" level="1"/>
            <contents name="snippets" title="Snippets" level="2"/>
            <contents name="file-and-project-templates" title="File and Project Templates" level="2"/>
            <contents name="custom-wizards" title="Custom Wizards" level="2"/>
            <contents name="supporting-additional-file-types" title="Supporting Additional File Types" level="1"/>
            <contents name="mime-types" title="MIME Types" level="2"/>
            <contents name="text-highlighting-and-indentation" title="Text Highlighting and Indentation" level="2"/>
            <contents name="custom-text-editors" title="Custom Text Editors" level="2"/>
            <contents name="other-custom-editors" title="Other Custom Editors" level="2"/>
            <contents name="running-external-tools" title="Running External Tools" level="1"/>
            <contents name="simple-external-tools" title="Simple External Tools" level="2"/>
            <contents name="complex-external-tools" title="Complex External Tools" level="2"/>
            <contents name="loosely-integrating-tools" title="Loosely Integrating Tools" level="3"/>
            <contents name="interacting-with-tool-output" title="Interacting with Tool Output" level="3"/>
            <contents name="all-topics" title="All Topics" level="1"/>
        </page>
        <namespace name="ExtensionSystem" href="extensionsystem.html" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="20" documented="true" module="QtCreator" brief="Classes that belong to the core plugin system">
            <function name="invoke" fullname="ExtensionSystem::invoke" href="extensionsystem.html#invoke" status="active" access="public" location="invoker.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/invoker.h" lineno="149" documented="true" meta="plain" type="Result" signature="Result invoke(QObject *target, const char *slot)">
                <parameter type="QObject *" name="target" default=""/>
                <parameter type="const char *" name="slot" default=""/>
            </function>
            <function name="invoke" fullname="ExtensionSystem::invoke" href="extensionsystem.html#invoke-1" status="active" access="public" location="invoker.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/invoker.h" lineno="156" documented="true" meta="plain" overload="true" overload-number="1" type="Result" signature="Result invoke(QObject *target, const char *slot, const T0 &amp;t0)">
                <parameter type="QObject *" name="target" default=""/>
                <parameter type="const char *" name="slot" default=""/>
                <parameter type="const T0 &amp;" name="t0" default=""/>
            </function>
            <function name="invoke" fullname="ExtensionSystem::invoke" href="extensionsystem.html#invoke-2" status="active" access="public" location="invoker.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/invoker.h" lineno="164" documented="true" meta="plain" overload="true" overload-number="2" type="Result" signature="Result invoke(QObject *target, const char *slot, const T0 &amp;t0, const T1 &amp;t1)">
                <parameter type="QObject *" name="target" default=""/>
                <parameter type="const char *" name="slot" default=""/>
                <parameter type="const T0 &amp;" name="t0" default=""/>
                <parameter type="const T1 &amp;" name="t1" default=""/>
            </function>
            <function name="invoke" fullname="ExtensionSystem::invoke" href="extensionsystem.html#invoke-3" status="active" access="public" location="invoker.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/invoker.h" lineno="173" documented="true" meta="plain" overload="true" overload-number="3" type="Result" signature="Result invoke(QObject *target, const char *slot, const T0 &amp;t0, const T1 &amp;t1, const T2 &amp;t2)">
                <parameter type="QObject *" name="target" default=""/>
                <parameter type="const char *" name="slot" default=""/>
                <parameter type="const T0 &amp;" name="t0" default=""/>
                <parameter type="const T1 &amp;" name="t1" default=""/>
                <parameter type="const T2 &amp;" name="t2" default=""/>
            </function>
            <class name="IPlugin" fullname="ExtensionSystem::IPlugin" href="extensionsystem-iplugin.html" status="active" access="public" location="iplugin.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/iplugin.h" lineno="18" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Abstract base class that must be implemented once for each plugin">
                <function name="aboutToShutdown" fullname="ExtensionSystem::IPlugin::aboutToShutdown" href="extensionsystem-iplugin.html#aboutToShutdown" status="active" access="public" location="iplugin.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/iplugin.h" lineno="34" documented="true" meta="plain" virtual="virtual" type="ExtensionSystem::IPlugin::ShutdownFlag" signature="ExtensionSystem::IPlugin::ShutdownFlag aboutToShutdown()"/>
                <function name="addTestCreator" fullname="ExtensionSystem::IPlugin::addTestCreator" href="extensionsystem-iplugin.html#addTestCreator" status="active" access="public" location="iplugin.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/iplugin.h" lineno="42" documented="true" meta="plain" type="void" signature="void addTestCreator(const ExtensionSystem::TestCreator &amp;creator)">
                    <parameter type="const ExtensionSystem::TestCreator &amp;" name="creator" default=""/>
                </function>
                <function name="asynchronousShutdownFinished" fullname="ExtensionSystem::IPlugin::asynchronousShutdownFinished" href="extensionsystem-iplugin.html#asynchronousShutdownFinished" status="active" access="public" location="iplugin.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/iplugin.h" lineno="48" documented="true" meta="signal" type="void" signature="void asynchronousShutdownFinished()"/>
                <function name="delayedInitialize" fullname="ExtensionSystem::IPlugin::delayedInitialize" href="extensionsystem-iplugin.html#delayedInitialize" status="active" access="public" location="iplugin.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/iplugin.h" lineno="33" documented="true" meta="plain" virtual="virtual" type="bool" signature="bool delayedInitialize()"/>
                <function name="extensionsInitialized" fullname="ExtensionSystem::IPlugin::extensionsInitialized" href="extensionsystem-iplugin.html#extensionsInitialized" status="active" access="public" location="iplugin.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/iplugin.h" lineno="32" documented="true" meta="plain" virtual="virtual" type="void" signature="void extensionsInitialized()"/>
                <function name="initialize" fullname="ExtensionSystem::IPlugin::initialize" href="extensionsystem-iplugin.html#initialize" status="active" access="public" location="iplugin.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/iplugin.h" lineno="31" documented="true" meta="plain" virtual="virtual" type="bool" signature="bool initialize(const QStringList &amp;arguments, QString *errorString)">
                    <parameter type="const QStringList &amp;" name="arguments" default=""/>
                    <parameter type="QString *" name="errorString" default=""/>
                </function>
                <function name="initialize" fullname="ExtensionSystem::IPlugin::initialize" href="extensionsystem-iplugin.html#initialize-1" status="active" access="protected" location="iplugin.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/iplugin.h" lineno="45" documented="true" meta="plain" virtual="virtual" overload="true" overload-number="1" type="void" signature="void initialize()"/>
                <function name="remoteCommand" fullname="ExtensionSystem::IPlugin::remoteCommand" href="extensionsystem-iplugin.html#remoteCommand" status="active" access="public" location="iplugin.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/iplugin.h" lineno="35" documented="true" meta="plain" virtual="virtual" type="QObject *" signature="QObject * remoteCommand(const QStringList &amp;options, const QString &amp;workingDirectory, const QStringList &amp;arguments)">
                    <parameter type="const QStringList &amp;" name="options" default=""/>
                    <parameter type="const QString &amp;" name="workingDirectory" default=""/>
                    <parameter type="const QStringList &amp;" name="arguments" default=""/>
                </function>
                <enum name="ShutdownFlag" fullname="ExtensionSystem::IPlugin::ShutdownFlag" href="extensionsystem-iplugin.html#ShutdownFlag-enum" status="active" access="public" location="iplugin.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/iplugin.h" lineno="23" documented="true">
                    <value name="SynchronousShutdown" value="0"/>
                    <value name="AsynchronousShutdown" value="1"/>
                </enum>
            </class>
            <struct name="PluginArgumentDescription" fullname="ExtensionSystem::PluginArgumentDescription" href="extensionsystem-pluginargumentdescription.html" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="49" documented="true" module="QtCreator" brief="PluginArgumentDescriptions class holds a list of descriptions of command line arguments that a plugin processes"/>
            <struct name="PluginDependency" fullname="ExtensionSystem::PluginDependency" href="extensionsystem-plugindependency.html" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="30" documented="true" module="QtCreator" brief="Contains the name and required compatible version number of a plugin's dependency">
                <enum name="Type" fullname="ExtensionSystem::PluginDependency::Type" href="extensionsystem-plugindependency.html#Type-enum" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="32" documented="true">
                    <value name="Required" value="0"/>
                    <value name="Optional" value="1"/>
                    <value name="Test" value="2"/>
                </enum>
                <variable name="name" fullname="ExtensionSystem::PluginDependency::name" href="extensionsystem-plugindependency.html#name-var" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="42" documented="true" type="QString" static="false"/>
                <variable name="type" fullname="ExtensionSystem::PluginDependency::type" href="extensionsystem-plugindependency.html#type-var" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="44" documented="true" type="ExtensionSystem::PluginDependency::Type" static="false"/>
                <variable name="version" fullname="ExtensionSystem::PluginDependency::version" href="extensionsystem-plugindependency.html#version-var" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="43" documented="true" type="QString" static="false"/>
            </struct>
            <class name="PluginDetailsView" fullname="ExtensionSystem::PluginDetailsView" href="extensionsystem-plugindetailsview.html" status="active" access="public" location="plugindetailsview.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/plugindetailsview.h" lineno="16" documented="true" bases="QWidget" module="QtCreator" brief="Implements a widget that displays the contents of a PluginSpec">
                <function name="PluginDetailsView" fullname="ExtensionSystem::PluginDetailsView::PluginDetailsView" href="extensionsystem-plugindetailsview.html#PluginDetailsView" status="active" access="public" location="plugindetailsview.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/plugindetailsview.h" lineno="21" documented="true" meta="constructor" signature="PluginDetailsView(QWidget *parent)">
                    <parameter type="QWidget *" name="parent" default="nullptr"/>
                </function>
                <function name="update" fullname="ExtensionSystem::PluginDetailsView::update" href="extensionsystem-plugindetailsview.html#update" status="active" access="public" location="plugindetailsview.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/plugindetailsview.h" lineno="24" documented="true" meta="plain" type="void" signature="void update(ExtensionSystem::PluginSpec *spec)">
                    <parameter type="ExtensionSystem::PluginSpec *" name="spec" default=""/>
                </function>
            </class>
            <class name="PluginErrorView" fullname="ExtensionSystem::PluginErrorView" href="extensionsystem-pluginerrorview.html" status="active" access="public" location="pluginerrorview.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginerrorview.h" lineno="15" documented="true" bases="QWidget" module="QtCreator" brief="Implements a widget that displays the state and error message of a PluginSpec">
                <function name="PluginErrorView" fullname="ExtensionSystem::PluginErrorView::PluginErrorView" href="extensionsystem-pluginerrorview.html#PluginErrorView" status="active" access="public" location="pluginerrorview.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginerrorview.h" lineno="20" documented="true" meta="constructor" signature="PluginErrorView(QWidget *parent)">
                    <parameter type="QWidget *" name="parent" default="nullptr"/>
                </function>
                <function name="update" fullname="ExtensionSystem::PluginErrorView::update" href="extensionsystem-pluginerrorview.html#update" status="active" access="public" location="pluginerrorview.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginerrorview.h" lineno="23" documented="true" meta="plain" type="void" signature="void update(ExtensionSystem::PluginSpec *spec)">
                    <parameter type="ExtensionSystem::PluginSpec *" name="spec" default=""/>
                </function>
            </class>
            <class name="PluginManager" fullname="ExtensionSystem::PluginManager" href="extensionsystem-pluginmanager.html" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="26" documented="true" groups="mainclasses" bases="QObject" module="QtCreator" brief="Implements the core plugin system that manages the plugins, their life cycle, and their registered objects">
                <contents name="plugins" title="Plugins" level="1"/>
                <contents name="object-pool" title="Object Pool" level="1"/>
                <function name="PluginManager" fullname="ExtensionSystem::PluginManager::PluginManager" href="extensionsystem-pluginmanager.html#PluginManager" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="33" documented="true" meta="constructor" signature="PluginManager()"/>
                <function name="addObject" fullname="ExtensionSystem::PluginManager::addObject" href="extensionsystem-pluginmanager.html#addObject" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="37" documented="true" meta="plain" static="true" type="void" signature="void addObject(QObject *obj)">
                    <parameter type="QObject *" name="obj" default=""/>
                </function>
                <function name="allObjects" fullname="ExtensionSystem::PluginManager::allObjects" href="extensionsystem-pluginmanager.html#allObjects" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="39" documented="true" meta="plain" static="true" type="QVector&lt;QObject *&gt;" signature="QVector&lt;QObject *&gt; allObjects()"/>
                <function name="arguments" fullname="ExtensionSystem::PluginManager::arguments" href="extensionsystem-pluginmanager.html#arguments" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="93" documented="true" meta="plain" static="true" type="QStringList" signature="QStringList arguments()"/>
                <function name="argumentsForRestart" fullname="ExtensionSystem::PluginManager::argumentsForRestart" href="extensionsystem-pluginmanager.html#argumentsForRestart" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="94" documented="true" meta="plain" static="true" type="QStringList" signature="QStringList argumentsForRestart()"/>
                <function name="formatOptions" fullname="ExtensionSystem::PluginManager::formatOptions" href="extensionsystem-pluginmanager.html#formatOptions" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="99" documented="true" meta="plain" static="true" type="void" signature="void formatOptions(QTextStream &amp;str, int optionIndentation, int descriptionIndentation)">
                    <parameter type="QTextStream &amp;" name="str" default=""/>
                    <parameter type="int" name="optionIndentation" default=""/>
                    <parameter type="int" name="descriptionIndentation" default=""/>
                </function>
                <function name="formatPluginOptions" fullname="ExtensionSystem::PluginManager::formatPluginOptions" href="extensionsystem-pluginmanager.html#formatPluginOptions" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="100" documented="true" meta="plain" static="true" type="void" signature="void formatPluginOptions(QTextStream &amp;str, int optionIndentation, int descriptionIndentation)">
                    <parameter type="QTextStream &amp;" name="str" default=""/>
                    <parameter type="int" name="optionIndentation" default=""/>
                    <parameter type="int" name="descriptionIndentation" default=""/>
                </function>
                <function name="formatPluginVersions" fullname="ExtensionSystem::PluginManager::formatPluginVersions" href="extensionsystem-pluginmanager.html#formatPluginVersions" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="101" documented="true" meta="plain" static="true" type="void" signature="void formatPluginVersions(QTextStream &amp;str)">
                    <parameter type="QTextStream &amp;" name="str" default=""/>
                </function>
                <function name="getObject" fullname="ExtensionSystem::PluginManager::getObject" href="extensionsystem-pluginmanager.html#getObject" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="43" documented="true" meta="plain" static="true" type="T *" signature="T * getObject()"/>
                <function name="getObject" fullname="ExtensionSystem::PluginManager::getObject" href="extensionsystem-pluginmanager.html#getObject-1" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="53" documented="true" meta="plain" static="true" overload="true" overload-number="1" type="T *" signature="T * getObject(Predicate predicate)">
                    <parameter type="Predicate" name="predicate" default=""/>
                </function>
                <function name="getObjectByName" fullname="ExtensionSystem::PluginManager::getObjectByName" href="extensionsystem-pluginmanager.html#getObjectByName" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="65" documented="true" meta="plain" static="true" type="QObject *" signature="QObject * getObjectByName(const QString &amp;name)">
                    <parameter type="const QString &amp;" name="name" default=""/>
                </function>
                <function name="globalSettings" fullname="ExtensionSystem::PluginManager::globalSettings" href="extensionsystem-pluginmanager.html#globalSettings" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="89" documented="true" meta="plain" static="true" type="Utils::QtcSettings *" signature="Utils::QtcSettings * globalSettings()"/>
                <function name="hasError" fullname="ExtensionSystem::PluginManager::hasError" href="extensionsystem-pluginmanager.html#hasError" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="78" documented="true" meta="plain" static="true" type="bool" signature="bool hasError()"/>
                <function name="instance" fullname="ExtensionSystem::PluginManager::instance" href="extensionsystem-pluginmanager.html#instance" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="31" documented="true" meta="plain" static="true" type="ExtensionSystem::PluginManager *" signature="ExtensionSystem::PluginManager * instance()"/>
                <function name="loadPlugins" fullname="ExtensionSystem::PluginManager::loadPlugins" href="extensionsystem-pluginmanager.html#loadPlugins" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="70" documented="true" meta="plain" static="true" type="void" signature="void loadPlugins()"/>
                <function name="loadQueue" fullname="ExtensionSystem::PluginManager::loadQueue" href="extensionsystem-pluginmanager.html#loadQueue" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="69" documented="true" meta="plain" static="true" type="QVector&lt;ExtensionSystem::PluginSpec *&gt;" signature="QVector&lt;ExtensionSystem::PluginSpec *&gt; loadQueue()"/>
                <function name="parseOptions" fullname="ExtensionSystem::PluginManager::parseOptions" href="extensionsystem-pluginmanager.html#parseOptions" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="95" documented="true" meta="plain" static="true" type="bool" signature="bool parseOptions(const QStringList &amp;args, const QMap&lt;QString, bool&gt; &amp;appOptions, QMap&lt;QString, QString&gt; *foundAppOptions, QString *errorString)">
                    <parameter type="const QStringList &amp;" name="args" default=""/>
                    <parameter type="const QMap&lt;QString, bool&gt; &amp;" name="appOptions" default=""/>
                    <parameter type="QMap&lt;QString, QString&gt; *" name="foundAppOptions" default=""/>
                    <parameter type="QString *" name="errorString" default=""/>
                </function>
                <function name="pluginIID" fullname="ExtensionSystem::PluginManager::pluginIID" href="extensionsystem-pluginmanager.html#pluginIID" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="74" documented="true" meta="plain" static="true" type="QString" signature="QString pluginIID()"/>
                <function name="pluginPaths" fullname="ExtensionSystem::PluginManager::pluginPaths" href="extensionsystem-pluginmanager.html#pluginPaths" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="72" documented="true" meta="plain" static="true" type="QStringList" signature="QStringList pluginPaths()"/>
                <function name="plugins" fullname="ExtensionSystem::PluginManager::plugins" href="extensionsystem-pluginmanager.html#plugins" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="76" documented="true" meta="plain" static="true" type="const QVector&lt;ExtensionSystem::PluginSpec *&gt;" signature="const QVector&lt;ExtensionSystem::PluginSpec *&gt; plugins()"/>
                <function name="pluginsRequiredByPlugin" fullname="ExtensionSystem::PluginManager::pluginsRequiredByPlugin" href="extensionsystem-pluginmanager.html#pluginsRequiredByPlugin" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="81" documented="true" meta="plain" static="true" type="const QSet&lt;ExtensionSystem::PluginSpec *&gt;" signature="const QSet&lt;ExtensionSystem::PluginSpec *&gt; pluginsRequiredByPlugin(ExtensionSystem::PluginSpec *spec)">
                    <parameter type="ExtensionSystem::PluginSpec *" name="spec" default=""/>
                </function>
                <function name="pluginsRequiringPlugin" fullname="ExtensionSystem::PluginManager::pluginsRequiringPlugin" href="extensionsystem-pluginmanager.html#pluginsRequiringPlugin" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="80" documented="true" meta="plain" static="true" type="const QSet&lt;ExtensionSystem::PluginSpec *&gt;" signature="const QSet&lt;ExtensionSystem::PluginSpec *&gt; pluginsRequiringPlugin(ExtensionSystem::PluginSpec *spec)">
                    <parameter type="ExtensionSystem::PluginSpec *" name="spec" default=""/>
                </function>
                <function name="remoteArguments" fullname="ExtensionSystem::PluginManager::remoteArguments" href="extensionsystem-pluginmanager.html#remoteArguments" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="134" documented="true" meta="plain" static="true" type="void" signature="void remoteArguments(const QString &amp;serializedArgument, QObject *socket)">
                    <parameter type="const QString &amp;" name="serializedArgument" default=""/>
                    <parameter type="QObject *" name="socket" default=""/>
                </function>
                <function name="removeObject" fullname="ExtensionSystem::PluginManager::removeObject" href="extensionsystem-pluginmanager.html#removeObject" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="38" documented="true" meta="plain" static="true" type="void" signature="void removeObject(QObject *obj)">
                    <parameter type="QObject *" name="obj" default=""/>
                </function>
                <function name="serializedArguments" fullname="ExtensionSystem::PluginManager::serializedArguments" href="extensionsystem-pluginmanager.html#serializedArguments" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="103" documented="true" meta="plain" static="true" type="QString" signature="QString serializedArguments()"/>
                <function name="setInstallSettings" fullname="ExtensionSystem::PluginManager::setInstallSettings" href="extensionsystem-pluginmanager.html#setInstallSettings" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="88" documented="true" meta="plain" static="true" type="void" signature="void setInstallSettings(Utils::QtcSettings *settings)">
                    <parameter type="Utils::QtcSettings *" name="settings" default=""/>
                </function>
                <function name="setPluginIID" fullname="ExtensionSystem::PluginManager::setPluginIID" href="extensionsystem-pluginmanager.html#setPluginIID" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="75" documented="true" meta="plain" static="true" type="void" signature="void setPluginIID(const QString &amp;iid)">
                    <parameter type="const QString &amp;" name="iid" default=""/>
                </function>
                <function name="setPluginPaths" fullname="ExtensionSystem::PluginManager::setPluginPaths" href="extensionsystem-pluginmanager.html#setPluginPaths" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="73" documented="true" meta="plain" static="true" type="void" signature="void setPluginPaths(const QStringList &amp;paths)">
                    <parameter type="const QStringList &amp;" name="paths" default=""/>
                </function>
                <function name="setSettings" fullname="ExtensionSystem::PluginManager::setSettings" href="extensionsystem-pluginmanager.html#setSettings" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="86" documented="true" meta="plain" static="true" type="void" signature="void setSettings(Utils::QtcSettings *settings)">
                    <parameter type="Utils::QtcSettings *" name="settings" default=""/>
                </function>
                <function name="settings" fullname="ExtensionSystem::PluginManager::settings" href="extensionsystem-pluginmanager.html#settings" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="87" documented="true" meta="plain" static="true" type="Utils::QtcSettings *" signature="Utils::QtcSettings * settings()"/>
                <function name="shutdown" fullname="ExtensionSystem::PluginManager::shutdown" href="extensionsystem-pluginmanager.html#shutdown" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="135" documented="true" meta="plain" static="true" type="void" signature="void shutdown()"/>
                <function name="specForPlugin" fullname="ExtensionSystem::PluginManager::specForPlugin" href="extensionsystem-pluginmanager.html#specForPlugin" status="active" access="public" location="pluginmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginmanager.h" lineno="83" documented="true" meta="plain" static="true" type="ExtensionSystem::PluginSpec *" signature="ExtensionSystem::PluginSpec * specForPlugin(ExtensionSystem::IPlugin *plugin)">
                    <parameter type="ExtensionSystem::IPlugin *" name="plugin" default=""/>
                </function>
            </class>
            <class name="PluginSpec" fullname="ExtensionSystem::PluginSpec" href="extensionsystem-pluginspec.html" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="74" documented="true" module="QtCreator" brief="Contains the information of the plugin's embedded meta data and information about the plugin's current state">
                <function name="addArgument" fullname="ExtensionSystem::PluginSpec::addArgument" href="extensionsystem-pluginspec.html#addArgument" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="118" documented="true" meta="plain" type="void" signature="void addArgument(const QString &amp;argument)">
                    <parameter type="const QString &amp;" name="argument" default=""/>
                </function>
                <function name="argumentDescriptions" fullname="ExtensionSystem::PluginSpec::argumentDescriptions" href="extensionsystem-pluginspec.html#argumentDescriptions" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="110" documented="true" meta="plain" const="true" type="ExtensionSystem::PluginSpec::PluginArgumentDescriptions" signature="ExtensionSystem::PluginSpec::PluginArgumentDescriptions argumentDescriptions() const"/>
                <function name="arguments" fullname="ExtensionSystem::PluginSpec::arguments" href="extensionsystem-pluginspec.html#arguments" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="116" documented="true" meta="plain" const="true" type="QStringList" signature="QStringList arguments() const"/>
                <function name="category" fullname="ExtensionSystem::PluginSpec::category" href="extensionsystem-pluginspec.html#category" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="91" documented="true" meta="plain" const="true" type="QString" signature="QString category() const"/>
                <function name="compatVersion" fullname="ExtensionSystem::PluginSpec::compatVersion" href="extensionsystem-pluginspec.html#compatVersion" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="84" documented="true" meta="plain" const="true" type="QString" signature="QString compatVersion() const"/>
                <function name="copyright" fullname="ExtensionSystem::PluginSpec::copyright" href="extensionsystem-pluginspec.html#copyright" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="86" documented="true" meta="plain" const="true" type="QString" signature="QString copyright() const"/>
                <function name="dependencies" fullname="ExtensionSystem::PluginSpec::dependencies" href="extensionsystem-pluginspec.html#dependencies" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="105" documented="true" meta="plain" const="true" type="QVector&lt;ExtensionSystem::PluginDependency&gt;" signature="QVector&lt;ExtensionSystem::PluginDependency&gt; dependencies() const"/>
                <function name="dependencySpecs" fullname="ExtensionSystem::PluginSpec::dependencySpecs" href="extensionsystem-pluginspec.html#dependencySpecs" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="123" documented="true" meta="plain" const="true" type="QHash&lt;ExtensionSystem::PluginDependency, ExtensionSystem::PluginSpec *&gt;" signature="QHash&lt;ExtensionSystem::PluginDependency, ExtensionSystem::PluginSpec *&gt; dependencySpecs() const"/>
                <function name="description" fullname="ExtensionSystem::PluginSpec::description" href="extensionsystem-pluginspec.html#description" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="88" documented="true" meta="plain" const="true" type="QString" signature="QString description() const"/>
                <function name="errorString" fullname="ExtensionSystem::PluginSpec::errorString" href="extensionsystem-pluginspec.html#errorString" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="132" documented="true" meta="plain" const="true" type="QString" signature="QString errorString() const"/>
                <function name="filePath" fullname="ExtensionSystem::PluginSpec::filePath" href="extensionsystem-pluginspec.html#filePath" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="114" documented="true" meta="plain" const="true" type="QString" signature="QString filePath() const"/>
                <function name="hasError" fullname="ExtensionSystem::PluginSpec::hasError" href="extensionsystem-pluginspec.html#hasError" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="131" documented="true" meta="plain" const="true" type="bool" signature="bool hasError() const"/>
                <function name="isAvailableForHostPlatform" fullname="ExtensionSystem::PluginSpec::isAvailableForHostPlatform" href="extensionsystem-pluginspec.html#isAvailableForHostPlatform" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="94" documented="true" meta="plain" const="true" type="bool" signature="bool isAvailableForHostPlatform() const"/>
                <function name="isDeprecated" fullname="ExtensionSystem::PluginSpec::isDeprecated" href="extensionsystem-pluginspec.html#isDeprecated" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="97" documented="true" meta="plain" const="true" type="bool" signature="bool isDeprecated() const"/>
                <function name="isEffectivelyEnabled" fullname="ExtensionSystem::PluginSpec::isEffectivelyEnabled" href="extensionsystem-pluginspec.html#isEffectivelyEnabled" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="100" documented="true" meta="plain" const="true" type="bool" signature="bool isEffectivelyEnabled() const"/>
                <function name="isEnabledByDefault" fullname="ExtensionSystem::PluginSpec::isEnabledByDefault" href="extensionsystem-pluginspec.html#isEnabledByDefault" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="98" documented="true" meta="plain" const="true" type="bool" signature="bool isEnabledByDefault() const"/>
                <function name="isEnabledBySettings" fullname="ExtensionSystem::PluginSpec::isEnabledBySettings" href="extensionsystem-pluginspec.html#isEnabledBySettings" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="99" documented="true" meta="plain" const="true" type="bool" signature="bool isEnabledBySettings() const"/>
                <function name="isEnabledIndirectly" fullname="ExtensionSystem::PluginSpec::isEnabledIndirectly" href="extensionsystem-pluginspec.html#isEnabledIndirectly" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="101" documented="true" meta="plain" const="true" type="bool" signature="bool isEnabledIndirectly() const"/>
                <function name="isExperimental" fullname="ExtensionSystem::PluginSpec::isExperimental" href="extensionsystem-pluginspec.html#isExperimental" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="96" documented="true" meta="plain" const="true" type="bool" signature="bool isExperimental() const"/>
                <function name="isForceDisabled" fullname="ExtensionSystem::PluginSpec::isForceDisabled" href="extensionsystem-pluginspec.html#isForceDisabled" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="103" documented="true" meta="plain" const="true" type="bool" signature="bool isForceDisabled() const"/>
                <function name="isForceEnabled" fullname="ExtensionSystem::PluginSpec::isForceEnabled" href="extensionsystem-pluginspec.html#isForceEnabled" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="102" documented="true" meta="plain" const="true" type="bool" signature="bool isForceEnabled() const"/>
                <function name="isRequired" fullname="ExtensionSystem::PluginSpec::isRequired" href="extensionsystem-pluginspec.html#isRequired" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="95" documented="true" meta="plain" const="true" type="bool" signature="bool isRequired() const"/>
                <function name="isSoftLoadable" fullname="ExtensionSystem::PluginSpec::isSoftLoadable" href="extensionsystem-pluginspec.html#isSoftLoadable" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="104" documented="true" meta="plain" const="true" type="bool" signature="bool isSoftLoadable() const"/>
                <function name="license" fullname="ExtensionSystem::PluginSpec::license" href="extensionsystem-pluginspec.html#license" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="87" documented="true" meta="plain" const="true" type="QString" signature="QString license() const"/>
                <function name="location" fullname="ExtensionSystem::PluginSpec::location" href="extensionsystem-pluginspec.html#location" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="113" documented="true" meta="plain" const="true" type="QString" signature="QString location() const"/>
                <function name="longDescription" fullname="ExtensionSystem::PluginSpec::longDescription" href="extensionsystem-pluginspec.html#longDescription" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="89" documented="true" meta="plain" const="true" type="QString" signature="QString longDescription() const"/>
                <function name="metaData" fullname="ExtensionSystem::PluginSpec::metaData" href="extensionsystem-pluginspec.html#metaData" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="106" documented="true" meta="plain" const="true" type="QJsonObject" signature="QJsonObject metaData() const"/>
                <function name="name" fullname="ExtensionSystem::PluginSpec::name" href="extensionsystem-pluginspec.html#name" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="82" documented="true" meta="plain" const="true" type="QString" signature="QString name() const"/>
                <function name="platformSpecification" fullname="ExtensionSystem::PluginSpec::platformSpecification" href="extensionsystem-pluginspec.html#platformSpecification" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="93" documented="true" since="3.0" meta="plain" const="true" type="QRegularExpression" signature="QRegularExpression platformSpecification() const"/>
                <function name="plugin" fullname="ExtensionSystem::PluginSpec::plugin" href="extensionsystem-pluginspec.html#plugin" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="127" documented="true" meta="plain" const="true" type="ExtensionSystem::IPlugin *" signature="ExtensionSystem::IPlugin * plugin() const"/>
                <function name="provides" fullname="ExtensionSystem::PluginSpec::provides" href="extensionsystem-pluginspec.html#provides" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="120" documented="true" meta="plain" const="true" type="bool" signature="bool provides(const QString &amp;pluginName, const QString &amp;version) const">
                    <parameter type="const QString &amp;" name="pluginName" default=""/>
                    <parameter type="const QString &amp;" name="version" default=""/>
                </function>
                <function name="requiresAny" fullname="ExtensionSystem::PluginSpec::requiresAny" href="extensionsystem-pluginspec.html#requiresAny" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="124" documented="true" meta="plain" const="true" type="bool" signature="bool requiresAny(const QSet&lt;ExtensionSystem::PluginSpec *&gt; &amp;plugins) const">
                    <parameter type="const QSet&lt;ExtensionSystem::PluginSpec *&gt; &amp;" name="plugins" default=""/>
                </function>
                <function name="setArguments" fullname="ExtensionSystem::PluginSpec::setArguments" href="extensionsystem-pluginspec.html#setArguments" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="117" documented="true" meta="plain" type="void" signature="void setArguments(const QStringList &amp;arguments)">
                    <parameter type="const QStringList &amp;" name="arguments" default=""/>
                </function>
                <function name="setEnabledBySettings" fullname="ExtensionSystem::PluginSpec::setEnabledBySettings" href="extensionsystem-pluginspec.html#setEnabledBySettings" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="134" documented="true" meta="plain" type="void" signature="void setEnabledBySettings(bool value)">
                    <parameter type="bool" name="value" default=""/>
                </function>
                <function name="state" fullname="ExtensionSystem::PluginSpec::state" href="extensionsystem-pluginspec.html#state" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="130" documented="true" meta="plain" const="true" type="ExtensionSystem::PluginSpec::State" signature="ExtensionSystem::PluginSpec::State state() const"/>
                <function name="url" fullname="ExtensionSystem::PluginSpec::url" href="extensionsystem-pluginspec.html#url" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="90" documented="true" meta="plain" const="true" type="QString" signature="QString url() const"/>
                <function name="vendor" fullname="ExtensionSystem::PluginSpec::vendor" href="extensionsystem-pluginspec.html#vendor" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="85" documented="true" meta="plain" const="true" type="QString" signature="QString vendor() const"/>
                <function name="version" fullname="ExtensionSystem::PluginSpec::version" href="extensionsystem-pluginspec.html#version" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="83" documented="true" meta="plain" const="true" type="QString" signature="QString version() const"/>
                <enum name="State" fullname="ExtensionSystem::PluginSpec::State" href="extensionsystem-pluginspec.html#State-enum" status="active" access="public" location="pluginspec.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\extensionsystem/pluginspec.h" lineno="77" documented="true">
                    <value name="Invalid" value="0"/>
                    <value name="Read" value="1"/>
                    <value name="Resolved" value="2"/>
                    <value name="Loaded" value="3"/>
                    <value name="Initialized" value="4"/>
                    <value name="Running" value="5"/>
                    <value name="Stopped" value="6"/>
                    <value name="Deleted" value="7"/>
                </enum>
            </class>
            <class name="PluginView" fullname="ExtensionSystem::PluginView" href="extensionsystem-pluginview.html" status="active" access="public" location="pluginview.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginview.h" lineno="31" documented="true" bases="QWidget" module="QtCreator" brief="Implements a widget that shows a list of all plugins and their state">
                <function name="PluginView" fullname="ExtensionSystem::PluginView::PluginView" href="extensionsystem-pluginview.html#PluginView" status="active" access="public" location="pluginview.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginview.h" lineno="36" documented="true" meta="constructor" explicit="true" signature="PluginView(QWidget *parent)">
                    <parameter type="QWidget *" name="parent" default="nullptr"/>
                </function>
                <function name="currentPlugin" fullname="ExtensionSystem::PluginView::currentPlugin" href="extensionsystem-pluginview.html#currentPlugin" status="active" access="public" location="pluginview.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginview.h" lineno="39" documented="true" meta="plain" const="true" type="ExtensionSystem::PluginSpec *" signature="ExtensionSystem::PluginSpec * currentPlugin() const"/>
                <function name="currentPluginChanged" fullname="ExtensionSystem::PluginView::currentPluginChanged" href="extensionsystem-pluginview.html#currentPluginChanged" status="active" access="public" location="pluginview.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginview.h" lineno="44" documented="true" meta="signal" type="void" signature="void currentPluginChanged(ExtensionSystem::PluginSpec *spec)">
                    <parameter type="ExtensionSystem::PluginSpec *" name="spec" default=""/>
                </function>
                <function name="pluginActivated" fullname="ExtensionSystem::PluginView::pluginActivated" href="extensionsystem-pluginview.html#pluginActivated" status="active" access="public" location="pluginview.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginview.h" lineno="45" documented="true" meta="signal" type="void" signature="void pluginActivated(ExtensionSystem::PluginSpec *spec)">
                    <parameter type="ExtensionSystem::PluginSpec *" name="spec" default=""/>
                </function>
                <function name="setFilter" fullname="ExtensionSystem::PluginView::setFilter" href="extensionsystem-pluginview.html#setFilter" status="active" access="public" location="pluginview.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/extensionsystem/pluginview.h" lineno="40" documented="true" meta="plain" type="void" signature="void setFilter(const QString &amp;filter)">
                    <parameter type="const QString &amp;" name="filter" default=""/>
                </function>
            </class>
        </namespace>
        <page name="external-tool-spec.html" href="external-tool-spec.html" status="active" location="external-tool-spec.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/external-tool-spec.qdoc" lineno="4" documented="true" subtype="page" title="External Tool Specification Files" fulltitle="External Tool Specification Files" subtitle="">
            <contents name="file-name" title="File Name" level="1"/>
            <contents name="location" title="Location" level="1"/>
            <contents name="file-format" title="File Format" level="1"/>
            <contents name="main-tag" title="Main Tag" level="2"/>
            <contents name="description-tags" title="Description Tags" level="2"/>
            <contents name="executable-specification-tag" title="Executable Specification Tag" level="2"/>
            <contents name="example" title="Example" level="1"/>
        </page>
        <page name="getting-and-building.html" href="getting-and-building.html" status="active" location="getting-and-building.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/getting-and-building.qdoc" lineno="4" documented="true" subtype="page" title="Getting Qt and Qt Creator" fulltitle="Getting Qt and Qt Creator" subtitle="">
            <contents name="getting-qt" title="Getting Qt" level="1"/>
            <contents name="getting-qt-creator" title="Getting Qt Creator" level="1"/>
            <contents name="installing-a-prebuilt-package" title="Installing a Prebuilt Package" level="2"/>
            <contents name="building-qt-creator" title="Building Qt Creator" level="2"/>
        </page>
        <namespace name="Layouting" href="layouting.html" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="32" documented="true" module="QtCreator" brief="Contains classes for use with layout builders">
            <class name="LayoutItem" fullname="Layouting::LayoutItem" href="layouting-layoutitem.html" status="active" access="public" location="layoutbuilder.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/layoutbuilder.h" lineno="37" documented="true" module="QtCreator" brief="Represents widgets, layouts, and aggregate items for use in conjunction with layout builders">
                <function name="LayoutItem" fullname="Layouting::LayoutItem::LayoutItem" href="layouting-layoutitem.html#LayoutItem" status="active" access="public" location="layoutbuilder.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/layoutbuilder.h" lineno="42" documented="true" meta="constructor" signature="LayoutItem()"/>
                <function name="addItem" fullname="Layouting::LayoutItem::addItem" href="layouting-layoutitem.html#addItem" status="active" access="public" location="layoutbuilder.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/layoutbuilder.h" lineno="59" documented="true" meta="plain" type="void" signature="void addItem(const Layouting::LayoutItem &amp;item)">
                    <parameter type="const Layouting::LayoutItem &amp;" name="item" default=""/>
                </function>
                <function name="addItems" fullname="Layouting::LayoutItem::addItems" href="layouting-layoutitem.html#addItems" status="active" access="public" location="layoutbuilder.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/layoutbuilder.h" lineno="60" documented="true" meta="plain" type="void" signature="void addItems(const Layouting::LayoutItems &amp;items)">
                    <parameter type="const Layouting::LayoutItems &amp;" name="items" default=""/>
                </function>
                <function name="addRow" fullname="Layouting::LayoutItem::addRow" href="layouting-layoutitem.html#addRow" status="active" access="public" location="layoutbuilder.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/layoutbuilder.h" lineno="61" documented="true" meta="plain" type="void" signature="void addRow(const Layouting::LayoutItems &amp;items)">
                    <parameter type="const Layouting::LayoutItems &amp;" name="items" default=""/>
                </function>
                <function name="attachTo" fullname="Layouting::LayoutItem::attachTo" href="layouting-layoutitem.html#attachTo" status="active" access="public" location="layoutbuilder.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/layoutbuilder.h" lineno="56" documented="true" meta="plain" const="true" type="void" signature="void attachTo(QWidget *w) const">
                    <parameter type="QWidget *" name="w" default=""/>
                </function>
            </class>
            <class name="Space" fullname="Layouting::Space" href="layouting-space.html" status="active" access="public" location="layoutbuilder.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/layoutbuilder.h" lineno="71" documented="true" module="QtCreator" brief="Represents some empty space in a layout"/>
            <class name="Stretch" fullname="Layouting::Stretch" href="layouting-stretch.html" status="active" access="public" location="layoutbuilder.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/layoutbuilder.h" lineno="78" documented="true" module="QtCreator" brief="Represents some stretch in a layout"/>
        </namespace>
        <page name="plugin-lifecycle.html" href="plugin-lifecycle.html" status="active" location="plugin-lifecycle.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/plugin-lifecycle.qdoc" lineno="4" documented="true" subtype="page" title="Plugin Life Cycle" fulltitle="Plugin Life Cycle" subtitle=""/>
        <page name="plugin-meta-data.html" href="plugin-meta-data.html" status="active" location="plugin-metadata.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/plugin-metadata.qdoc" lineno="4" documented="true" subtype="page" title="Plugin Meta Data" fulltitle="Plugin Meta Data" subtitle="">
            <contents name="main-keys" title="Main Keys" level="2"/>
            <contents name="plugin-describing-keys" title="Plugin-describing Keys" level="2"/>
            <contents name="dependencies" title="Dependencies" level="2"/>
            <contents name="optional-dependencies" title="Optional Dependencies" level="3"/>
            <contents name="test-dependencies" title="Test Dependencies" level="3"/>
            <contents name="command-line-arguments" title="Command-Line Arguments" level="2"/>
            <contents name="example-test-op-op-json" title="Example Test&lt;@op&gt;.&lt;/@op&gt;json" level="2"/>
            <contents name="a-note-on-plugin-versions" title="A Note on Plugin Versions" level="2"/>
        </page>
        <page name="qtcreator-api.html" href="qtcreator-api.html" status="active" location="qtcreator-module.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/qtcreator-module.qdoc" lineno="4" documented="true" subtype="page" title="Qt Creator API Reference" fulltitle="Qt Creator API Reference" subtitle="">
            <contents name="libraries" title="Libraries" level="1"/>
            <contents name="core-libraries" title="Core Libraries" level="2"/>
            <contents name="plugins" title="Plugins" level="1"/>
            <contents name="solutions" title="Solutions" level="1"/>
            <contents name="reference" title="Reference" level="1"/>
        </page>
        <page name="coding-style.html" href="coding-style.html" status="active" location="coding-style.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/coding-style.qdoc" lineno="4" documented="true" subtype="page" title="Qt Creator Coding Rules" fulltitle="Qt Creator Coding Rules" subtitle="">
            <target name="coding-rules-namespacing"/>
            <contents name="submitting-code" title="Submitting Code" level="1"/>
            <contents name="binary-and-source-compatibility" title="Binary and Source Compatibility" level="1"/>
            <contents name="code-constructs" title="Code Constructs" level="1"/>
            <contents name="formatting" title="Formatting" level="1"/>
            <contents name="capitalizing-identifiers" title="Capitalizing Identifiers" level="2"/>
            <contents name="whitespace" title="Whitespace" level="2"/>
            <contents name="pointers-and-references" title="Pointers and References" level="3"/>
            <contents name="operator-names-and-parentheses" title="Operator Names and Parentheses" level="3"/>
            <contents name="function-names-and-parentheses" title="Function Names and Parentheses" level="3"/>
            <contents name="keywords" title="Keywords" level="3"/>
            <contents name="comments" title="Comments" level="3"/>
            <contents name="braces" title="Braces" level="2"/>
            <contents name="parentheses" title="Parentheses" level="2"/>
            <contents name="line-breaks" title="Line Breaks" level="2"/>
            <contents name="declarations" title="Declarations" level="2"/>
            <contents name="declaring-variables" title="Declaring Variables" level="3"/>
            <contents name="namespaces" title="Namespaces" level="2"/>
            <contents name="patterns-and-practices" title="Patterns and Practices" level="1"/>
            <contents name="namespacing" title="Namespacing" level="2"/>
            <contents name="passing-file-names" title="Passing File Names" level="2"/>
            <contents name="classes-to-use-and-classes-not-to-use" title="Classes to Use and Classes Not to Use" level="2"/>
            <contents name="plugin-dependencies" title="Plugin Dependencies" level="2"/>
            <contents name="extending-base-plugin-functionality-by-callbacks" title="Extending Base Plugin Functionality by Callbacks" level="2"/>
            <contents name="plugin-extension-points" title="Plugin Extension Points" level="2"/>
            <contents name="using-the-global-object-pool" title="Using the Global Object Pool" level="2"/>
            <contents name="c-features" title="C++ Features" level="2"/>
            <contents name="null-pointers" title="Null Pointers" level="3"/>
            <contents name="lambdas" title="Lambdas" level="3"/>
            <contents name="keyword-auto-keyword-keyword" title="&lt;@keyword&gt;auto&lt;/@keyword&gt; Keyword" level="3"/>
            <contents name="scoped-enums" title="Scoped enums" level="3"/>
            <contents name="delegating-constructors" title="Delegating constructors" level="3"/>
            <contents name="initializer-list" title="Initializer list" level="3"/>
            <contents name="initialization-with-curly-brackets" title="Initialization with Curly Brackets" level="3"/>
            <contents name="non-static-data-member-initialization" title="Non-Static Data Member Initialization" level="3"/>
            <contents name="defaulted-and-deleted-functions" title="Defaulted and Deleted Functions" level="3"/>
            <contents name="override" title="Override" level="3"/>
            <contents name="range-based-for-loop" title="Range-Based for-Loop" level="3"/>
            <contents name="std-optional" title="std::optional" level="3"/>
            <contents name="using-qobject" title="Using QObject" level="2"/>
            <contents name="file-headers" title="File Headers" level="2"/>
            <contents name="including-headers" title="Including Headers" level="2"/>
            <contents name="casting" title="Casting" level="2"/>
            <contents name="compiler-and-platform-specific-issues" title="Compiler and Platform-specific Issues" level="2"/>
            <contents name="esthetics" title="Esthetics" level="2"/>
            <contents name="inheriting-from-template-or-tool-classes" title="Inheriting from Template or Tool Classes" level="2"/>
            <contents name="inheritance-versus-aggregation" title="Inheritance Versus Aggregation" level="2"/>
            <contents name="conventions-for-public-header-files" title="Conventions for Public Header Files" level="2"/>
            <contents name="class-member-names" title="Class Member Names" level="1"/>
            <contents name="documentation" title="Documentation" level="1"/>
        </page>
        <page name="functions.html" href="functions.html" status="active" location="qtcreator-module.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/qtcreator-module.qdoc" lineno="172" documented="true" subtype="page" title="Qt Creator Functions" fulltitle="Qt Creator Functions" subtitle=""/>
        <page name="mainclasses.html" href="mainclasses.html" status="active" location="qtcreator-module.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/qtcreator-module.qdoc" lineno="163" documented="true" subtype="page" title="Qt Creator Main Classes" fulltitle="Qt Creator Main Classes" subtitle=""/>
        <page name="namespaces.html" href="namespaces.html" status="active" location="qtcreator-module.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/qtcreator-module.qdoc" lineno="152" documented="true" subtype="page" title="Qt Creator Namespaces" fulltitle="Qt Creator Namespaces" subtitle=""/>
        <page name="solutions-index.html" href="solutions-index.html" status="active" location="solutions-index.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/solutions-index.qdoc" lineno="4" documented="true" subtype="page" title="Solutions" fulltitle="Solutions" subtitle="" brief="A collection of reusable object libraries"/>
        <namespace name="SpinnerSolution" href="spinnersolution.html" status="active" access="public" location="spinner.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/spinner/spinner.h" lineno="11" documented="true" module="SpinnerSolution" brief="Encloses the Spinner class">
            <class name="Spinner" fullname="SpinnerSolution::Spinner" href="spinnersolution-spinner.html" status="active" access="public" location="spinner.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/spinner/spinner.h" lineno="23" documented="true" bases="QObject" module="SpinnerSolution" brief="Renders a circular, endlessly animated progress indicator, that may be attached to any widget as an overlay">
                <function name="Spinner" fullname="SpinnerSolution::Spinner::Spinner" href="spinnersolution-spinner.html#Spinner" status="active" access="public" location="spinner.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/spinner/spinner.h" lineno="28" documented="true" meta="constructor" explicit="true" signature="Spinner(SpinnerSolution::SpinnerSize size, QWidget *parent)">
                    <parameter type="SpinnerSolution::SpinnerSize" name="size" default=""/>
                    <parameter type="QWidget *" name="parent" default="nullptr"/>
                </function>
                <function name="hide" fullname="SpinnerSolution::Spinner::hide" href="spinnersolution-spinner.html#hide" status="active" access="public" location="spinner.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/spinner/spinner.h" lineno="31" documented="true" meta="plain" type="void" signature="void hide()"/>
                <function name="isVisible" fullname="SpinnerSolution::Spinner::isVisible" href="spinnersolution-spinner.html#isVisible" status="active" access="public" location="spinner.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/spinner/spinner.h" lineno="32" documented="true" meta="plain" const="true" type="bool" signature="bool isVisible() const"/>
                <function name="setSize" fullname="SpinnerSolution::Spinner::setSize" href="spinnersolution-spinner.html#setSize" status="active" access="public" location="spinner.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/spinner/spinner.h" lineno="29" documented="true" meta="plain" type="void" signature="void setSize(SpinnerSolution::SpinnerSize size)">
                    <parameter type="SpinnerSolution::SpinnerSize" name="size" default=""/>
                </function>
                <function name="setVisible" fullname="SpinnerSolution::Spinner::setVisible" href="spinnersolution-spinner.html#setVisible" status="active" access="public" location="spinner.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/spinner/spinner.h" lineno="33" documented="true" meta="plain" type="void" signature="void setVisible(bool visible)">
                    <parameter type="bool" name="visible" default=""/>
                </function>
                <function name="show" fullname="SpinnerSolution::Spinner::show" href="spinnersolution-spinner.html#show" status="active" access="public" location="spinner.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/spinner/spinner.h" lineno="30" documented="true" meta="plain" type="void" signature="void show()"/>
            </class>
            <enum name="SpinnerSize" fullname="SpinnerSolution::SpinnerSize" href="spinnersolution.html#SpinnerSize-enum" status="active" access="public" location="spinner.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/spinner/spinner.h" lineno="15" documented="true" scoped="true">
                <value name="Small" value="0"/>
                <value name="Medium" value="1"/>
                <value name="Large" value="2"/>
            </enum>
        </namespace>
        <namespace name="Tasking" href="tasking.html" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="18" documented="true" module="TaskingSolution" brief="Encloses all classes and global functions of the Tasking solution">
            <function name="onGroupDone" fullname="Tasking::onGroupDone" href="tasking.html#onGroupDone" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="366" documented="true" meta="plain" type="Tasking::GroupItem" signature="Tasking::GroupItem onGroupDone(Handler &amp;&amp;handler, Tasking::CallDoneIf callDoneIf)">
                <parameter type="Handler &amp;&amp;" name="handler" default=""/>
                <parameter type="Tasking::CallDoneIf" name="callDoneIf" default="CallDoneIf::SuccessOrError"/>
            </function>
            <function name="onGroupSetup" fullname="Tasking::onGroupSetup" href="tasking.html#onGroupSetup" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="360" documented="true" meta="plain" type="Tasking::GroupItem" signature="Tasking::GroupItem onGroupSetup(Handler &amp;&amp;handler)">
                <parameter type="Handler &amp;&amp;" name="handler" default=""/>
            </function>
            <function name="parallelLimit" fullname="Tasking::parallelLimit" href="tasking.html#parallelLimit" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="371" documented="true" meta="plain" type="Tasking::GroupItem" signature="Tasking::GroupItem parallelLimit(int limit)">
                <parameter type="int" name="limit" default=""/>
            </function>
            <function name="workflowPolicy" fullname="Tasking::workflowPolicy" href="tasking.html#workflowPolicy" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="372" documented="true" meta="plain" type="Tasking::GroupItem" signature="Tasking::GroupItem workflowPolicy(Tasking::WorkflowPolicy policy)">
                <parameter type="Tasking::WorkflowPolicy" name="policy" default=""/>
            </function>
            <class threadsafety="reentrant" name="CustomTask" fullname="Tasking::CustomTask" href="tasking-customtask.html" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="439" documented="true" bases="Tasking::ExecutableItem" module="TaskingSolution" brief="A class template used for declaring custom task items and defining their setup and done handlers">
                <function name="CustomTask" fullname="Tasking::CustomTask::CustomTask" href="tasking-customtask.html#CustomTask" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="451" documented="true" meta="constructor" signature="CustomTask(SetupHandler &amp;&amp;setup, DoneHandler &amp;&amp;done, Tasking::CallDoneIf callDoneIf)">
                    <parameter type="SetupHandler &amp;&amp;" name="setup" default="TaskSetupHandler()"/>
                    <parameter type="DoneHandler &amp;&amp;" name="done" default="TaskDoneHandler()"/>
                    <parameter type="Tasking::CallDoneIf" name="callDoneIf" default="CallDoneIf::SuccessOrError"/>
                </function>
                <typedef name="Deleter" fullname="Tasking::CustomTask::Deleter" href="tasking-customtask.html#Deleter-typedef" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="443" documented="true" aliasedtype="typename Adapter::DeleterType"/>
                <typedef name="Task" fullname="Tasking::CustomTask::Task" href="tasking-customtask.html#Task-typedef" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="442" documented="true" aliasedtype="typename Adapter::TaskType"/>
                <typedef name="TaskDoneHandler" fullname="Tasking::CustomTask::TaskDoneHandler" href="tasking-customtask.html#TaskDoneHandler-typedef" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="448" documented="true" aliasedtype="std::function&lt;DoneResult(const Task &amp;, DoneWith)&gt;"/>
                <typedef name="TaskSetupHandler" fullname="Tasking::CustomTask::TaskSetupHandler" href="tasking-customtask.html#TaskSetupHandler-typedef" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="447" documented="true" aliasedtype="std::function&lt;SetupResult(Task &amp;)&gt;"/>
            </class>
            <class threadsafety="reentrant" name="ExecutableItem" fullname="Tasking::ExecutableItem" href="tasking-executableitem.html" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="287" documented="true" bases="Tasking::GroupItem" module="TaskingSolution" brief="Base class for executable task items">
                <function name="withLog" fullname="Tasking::ExecutableItem::withLog" href="tasking-executableitem.html#withLog" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="292" documented="true" meta="plain" const="true" type="Tasking::ExecutableItem" signature="Tasking::ExecutableItem withLog(const QString &amp;logName) const">
                    <parameter type="const QString &amp;" name="logName" default=""/>
                </function>
                <function name="withTimeout" fullname="Tasking::ExecutableItem::withTimeout" href="tasking-executableitem.html#withTimeout" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="290" documented="true" meta="plain" const="true" type="Tasking::ExecutableItem" signature="Tasking::ExecutableItem withTimeout(std::chrono::milliseconds timeout, const std::function&lt;void ()&gt; &amp;handler) const">
                    <parameter type="std::chrono::milliseconds" name="timeout" default=""/>
                    <parameter type="const std::function&lt;void ()&gt; &amp;" name="handler" default="{}"/>
                </function>
            </class>
            <class threadsafety="reentrant" name="Group" fullname="Tasking::Group" href="tasking-group.html" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="299" documented="true" bases="Tasking::ExecutableItem" module="TaskingSolution" brief="Represents the basic element for composing declarative recipes describing how to execute and handle a nested tree of asynchronous tasks">
                <function name="Group" fullname="Tasking::Group::Group" href="tasking-group.html#Group" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="302" documented="true" meta="constructor" signature="Group(const QList&lt;Tasking::GroupItem&gt; &amp;children)">
                    <parameter type="const QList&lt;Tasking::GroupItem&gt; &amp;" name="children" default=""/>
                </function>
                <function name="Group" fullname="Tasking::Group::Group" href="tasking-group.html#Group-1" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="303" documented="true" meta="constructor" overload="true" overload-number="1" signature="Group(std::initializer_list&lt;GroupItem&gt; children)">
                    <parameter type="std::initializer_list&lt;GroupItem&gt;" name="children" default=""/>
                </function>
            </class>
            <class threadsafety="reentrant" name="GroupItem" fullname="Tasking::GroupItem" href="tasking-groupitem.html" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="196" documented="true" module="TaskingSolution" brief="Represents the basic element that may be a part of any Group">
                <function name="GroupItem" fullname="Tasking::GroupItem::GroupItem" href="tasking-groupitem.html#GroupItem" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="205" documented="true" meta="constructor" signature="GroupItem(const Storage&lt;StorageStruct&gt; &amp;storage)">
                    <parameter type="const Storage&lt;StorageStruct&gt; &amp;" name="storage" default=""/>
                </function>
                <function name="GroupItem" fullname="Tasking::GroupItem::GroupItem" href="tasking-groupitem.html#GroupItem-2" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="212" documented="true" meta="constructor" overload="true" overload-number="2" signature="GroupItem(const QList&lt;Tasking::GroupItem&gt; &amp;items)">
                    <parameter type="const QList&lt;Tasking::GroupItem&gt; &amp;" name="items" default=""/>
                </function>
                <function name="GroupItem" fullname="Tasking::GroupItem::GroupItem" href="tasking-groupitem.html#GroupItem-3" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="213" documented="true" meta="constructor" overload="true" overload-number="3" signature="GroupItem(std::initializer_list&lt;GroupItem&gt; items)">
                    <parameter type="std::initializer_list&lt;GroupItem&gt;" name="items" default=""/>
                </function>
                <typedef name="GroupDoneHandler" fullname="Tasking::GroupItem::GroupDoneHandler" href="tasking-groupitem.html#GroupDoneHandler-typedef" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="202" documented="true" aliasedtype="std::function&lt;DoneResult(DoneWith)&gt;"/>
                <typedef name="GroupSetupHandler" fullname="Tasking::GroupItem::GroupSetupHandler" href="tasking-groupitem.html#GroupSetupHandler-typedef" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="200" documented="true" aliasedtype="std::function&lt;SetupResult()&gt;"/>
            </class>
            <class threadsafety="reentrant" name="Storage" fullname="Tasking::Storage" href="tasking-storage.html" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="179" documented="true" bases="Tasking::StorageBase" module="TaskingSolution" brief="A class template for custom data exchange in the running task tree">
                <function name="Storage" fullname="Tasking::Storage::Storage" href="tasking-storage.html#Storage" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="182" documented="true" meta="constructor" signature="Storage()"/>
                <function name="activeStorage" fullname="Tasking::Storage::activeStorage" href="tasking-storage.html#activeStorage" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="185" documented="true" meta="plain" const="true" type="StorageStruct *" signature="StorageStruct * activeStorage() const"/>
                <function name="operator*" fullname="Tasking::Storage::operator*" href="tasking-storage.html#operator-2a" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="183" documented="true" meta="plain" const="true" noexcept="true" type="StorageStruct &amp;" signature="StorageStruct &amp; operator*() const"/>
                <function name="operator-&gt;" fullname="Tasking::Storage::operator-&gt;" href="tasking-storage.html#operator--gt" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="184" documented="true" meta="plain" const="true" noexcept="true" type="StorageStruct *" signature="StorageStruct * operator-&gt;() const"/>
            </class>
            <class threadsafety="reentrant" name="Sync" fullname="Tasking::Sync" href="tasking-sync.html" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="395" documented="true" bases="Tasking::ExecutableItem" module="TaskingSolution" brief="Synchronously executes a custom handler between other tasks">
                <function name="Sync" fullname="Tasking::Sync::Sync" href="tasking-sync.html#Sync" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="399" documented="true" meta="constructor" signature="Sync(Handler &amp;&amp;handler)">
                    <parameter type="Handler &amp;&amp;" name="handler" default=""/>
                </function>
            </class>
            <class threadsafety="reentrant" name="TaskAdapter" fullname="Tasking::TaskAdapter" href="tasking-taskadapter.html" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="424" documented="true" bases="Tasking::TaskInterface" module="TaskingSolution" brief="A class template for implementing custom task adapters">
                <function name="TaskAdapter" fullname="Tasking::TaskAdapter::TaskAdapter" href="tasking-taskadapter.html#TaskAdapter" status="active" access="protected" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="427" documented="true" meta="constructor" signature="TaskAdapter()"/>
                <function name="task" fullname="Tasking::TaskAdapter::task" href="tasking-taskadapter.html#task" status="active" access="protected" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="428" documented="true" meta="plain" type="Task *" signature="Task * task()"/>
                <function name="task" fullname="Tasking::TaskAdapter::task" href="tasking-taskadapter.html#task-1" status="active" access="protected" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="429" documented="true" meta="plain" const="true" overload="true" overload-number="1" type="const Task *" signature="const Task * task() const"/>
            </class>
            <class threadsafety="reentrant" name="TaskInterface" fullname="Tasking::TaskInterface" href="tasking-taskinterface.html" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="83" documented="true" bases="QObject" module="TaskingSolution" brief="The abstract base class for implementing custom task adapters">
                <function name="done" fullname="Tasking::TaskInterface::done" href="tasking-taskinterface.html#done" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="88" documented="true" meta="signal" type="void" signature="void done(Tasking::DoneResult result)">
                    <parameter type="Tasking::DoneResult" name="result" default=""/>
                </function>
                <function name="start" fullname="Tasking::TaskInterface::start" href="tasking-taskinterface.html#start" status="active" access="protected" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="97" documented="true" meta="plain" virtual="pure" type="void" signature="void start() = 0"/>
            </class>
            <class threadsafety="reentrant" name="TaskTree" fullname="Tasking::TaskTree" href="tasking-tasktree.html" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="519" documented="true" bases="QObject" module="TaskingSolution" brief="Runs an async task tree structure defined in a declarative way">
                <contents name="root-element-and-tasks" title="Root Element and Tasks" level="1"/>
                <contents name="groups" title="Groups" level="1"/>
                <contents name="task-types" title="Task Types" level="1"/>
                <contents name="task-handlers" title="Task Handlers" level="1"/>
                <contents name="task-s-start-handler" title="Task's Start Handler" level="2"/>
                <contents name="task-s-done-handler" title="Task's Done Handler" level="2"/>
                <contents name="group-handlers" title="Group Handlers" level="1"/>
                <contents name="group-s-start-handler" title="Group's Start Handler" level="2"/>
                <contents name="groups-s-done-handler" title="Groups's Done Handler" level="2"/>
                <contents name="other-group-elements" title="Other Group Elements" level="1"/>
                <contents name="execution-mode" title="Execution Mode" level="2"/>
                <contents name="workflow-policy" title="Workflow Policy" level="2"/>
                <contents name="storage" title="Storage" level="2"/>
                <contents name="tasktree-class" title="TaskTree class" level="1"/>
                <contents name="task-adapters" title="Task Adapters" level="1"/>
                <function name="TaskTree" fullname="Tasking::TaskTree::TaskTree" href="tasking-tasktree.html#TaskTree" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="524" documented="true" meta="constructor" signature="TaskTree()"/>
                <function name="TaskTree" fullname="Tasking::TaskTree::TaskTree" href="tasking-tasktree.html#TaskTree-1" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="525" documented="true" meta="constructor" overload="true" overload-number="1" signature="TaskTree(const Tasking::Group &amp;recipe)">
                    <parameter type="const Tasking::Group &amp;" name="recipe" default=""/>
                </function>
                <function name="asyncCount" fullname="Tasking::TaskTree::asyncCount" href="tasking-tasktree.html#asyncCount" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="544" documented="true" meta="plain" const="true" type="int" signature="int asyncCount() const"/>
                <function name="asyncCountChanged" fullname="Tasking::TaskTree::asyncCountChanged" href="tasking-tasktree.html#asyncCountChanged" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="569" documented="true" meta="signal" type="void" signature="void asyncCountChanged(int count)">
                    <parameter type="int" name="count" default=""/>
                </function>
                <function name="cancel" fullname="Tasking::TaskTree::cancel" href="tasking-tasktree.html#cancel" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="531" documented="true" meta="plain" type="void" signature="void cancel()"/>
                <function name="done" fullname="Tasking::TaskTree::done" href="tasking-tasktree.html#done" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="568" documented="true" meta="signal" type="void" signature="void done(Tasking::DoneWith result)">
                    <parameter type="Tasking::DoneWith" name="result" default=""/>
                </function>
                <function name="isRunning" fullname="Tasking::TaskTree::isRunning" href="tasking-tasktree.html#isRunning" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="532" documented="true" meta="plain" const="true" type="bool" signature="bool isRunning() const"/>
                <function name="onStorageDone" fullname="Tasking::TaskTree::onStorageDone" href="tasking-tasktree.html#onStorageDone" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="558" documented="true" meta="plain" type="void" signature="void onStorageDone(const Storage&lt;StorageStruct&gt; &amp;storage, Handler &amp;&amp;handler)">
                    <parameter type="const Storage&lt;StorageStruct&gt; &amp;" name="storage" default=""/>
                    <parameter type="Handler &amp;&amp;" name="handler" default=""/>
                </function>
                <function name="onStorageSetup" fullname="Tasking::TaskTree::onStorageSetup" href="tasking-tasktree.html#onStorageSetup" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="550" documented="true" meta="plain" type="void" signature="void onStorageSetup(const Storage&lt;StorageStruct&gt; &amp;storage, Handler &amp;&amp;handler)">
                    <parameter type="const Storage&lt;StorageStruct&gt; &amp;" name="storage" default=""/>
                    <parameter type="Handler &amp;&amp;" name="handler" default=""/>
                </function>
                <function name="progressMaximum" fullname="Tasking::TaskTree::progressMaximum" href="tasking-tasktree.html#progressMaximum" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="546" documented="true" meta="plain" const="true" type="int" signature="int progressMaximum() const"/>
                <function name="progressValue" fullname="Tasking::TaskTree::progressValue" href="tasking-tasktree.html#progressValue" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="547" documented="true" meta="plain" const="true" type="int" signature="int progressValue() const"/>
                <function name="progressValueChanged" fullname="Tasking::TaskTree::progressValueChanged" href="tasking-tasktree.html#progressValueChanged" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="570" documented="true" meta="signal" type="void" signature="void progressValueChanged(int value)">
                    <parameter type="int" name="value" default=""/>
                </function>
                <function name="runBlocking" fullname="Tasking::TaskTree::runBlocking" href="tasking-tasktree.html#runBlocking" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="537" documented="true" meta="plain" type="Tasking::DoneWith" signature="Tasking::DoneWith runBlocking()"/>
                <function name="runBlocking" fullname="Tasking::TaskTree::runBlocking" href="tasking-tasktree.html#runBlocking-1" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="538" documented="true" meta="plain" overload="true" overload-number="1" type="Tasking::DoneWith" signature="Tasking::DoneWith runBlocking(const QFuture&lt;void&gt; &amp;future)">
                    <parameter type="const QFuture&lt;void&gt; &amp;" name="future" default=""/>
                </function>
                <function name="runBlocking" fullname="Tasking::TaskTree::runBlocking" href="tasking-tasktree.html#runBlocking-2" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="539" documented="true" meta="plain" static="true" overload="true" overload-number="2" type="Tasking::DoneWith" signature="Tasking::DoneWith runBlocking(const Tasking::Group &amp;recipe, std::chrono::milliseconds timeout)">
                    <parameter type="const Tasking::Group &amp;" name="recipe" default=""/>
                    <parameter type="std::chrono::milliseconds" name="timeout" default="std::chrono::milliseconds::max()"/>
                </function>
                <function name="runBlocking" fullname="Tasking::TaskTree::runBlocking" href="tasking-tasktree.html#runBlocking-3" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="541" documented="true" meta="plain" static="true" overload="true" overload-number="3" type="Tasking::DoneWith" signature="Tasking::DoneWith runBlocking(const Tasking::Group &amp;recipe, const QFuture&lt;void&gt; &amp;future, std::chrono::milliseconds timeout)">
                    <parameter type="const Tasking::Group &amp;" name="recipe" default=""/>
                    <parameter type="const QFuture&lt;void&gt; &amp;" name="future" default=""/>
                    <parameter type="std::chrono::milliseconds" name="timeout" default="std::chrono::milliseconds::max()"/>
                </function>
                <function name="setRecipe" fullname="Tasking::TaskTree::setRecipe" href="tasking-tasktree.html#setRecipe" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="528" documented="true" meta="plain" type="void" signature="void setRecipe(const Tasking::Group &amp;recipe)">
                    <parameter type="const Tasking::Group &amp;" name="recipe" default=""/>
                </function>
                <function name="start" fullname="Tasking::TaskTree::start" href="tasking-tasktree.html#start" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="530" documented="true" meta="plain" type="void" signature="void start()"/>
                <function name="started" fullname="Tasking::TaskTree::started" href="tasking-tasktree.html#started" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="567" documented="true" meta="signal" type="void" signature="void started()"/>
                <function name="taskCount" fullname="Tasking::TaskTree::taskCount" href="tasking-tasktree.html#taskCount" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="545" documented="true" meta="plain" const="true" type="int" signature="int taskCount() const"/>
                <function name="~TaskTree" fullname="Tasking::TaskTree::~TaskTree" href="tasking-tasktree.html#dtor.TaskTree" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="526" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~TaskTree()"/>
            </class>
            <enum name="CallDoneIf" fullname="Tasking::CallDoneIf" href="tasking.html#CallDoneIf-enum" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="69" documented="true" scoped="true">
                <value name="SuccessOrError" value="0"/>
                <value name="Success" value="1"/>
                <value name="Error" value="2"/>
            </enum>
            <enum name="DoneResult" fullname="Tasking::DoneResult" href="tasking.html#DoneResult-enum" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="54" documented="true" scoped="true">
                <value name="Success" value="0"/>
                <value name="Error" value="1"/>
            </enum>
            <enum name="DoneWith" fullname="Tasking::DoneWith" href="tasking.html#DoneWith-enum" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="61" documented="true" scoped="true">
                <value name="Success" value="0"/>
                <value name="Error" value="1"/>
                <value name="Cancel" value="2"/>
            </enum>
            <enum name="SetupResult" fullname="Tasking::SetupResult" href="tasking.html#SetupResult-enum" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="46" documented="true" scoped="true">
                <value name="Continue" value="0"/>
                <value name="StopWithSuccess" value="1"/>
                <value name="StopWithError" value="2"/>
            </enum>
            <enum name="WorkflowPolicy" fullname="Tasking::WorkflowPolicy" href="tasking.html#WorkflowPolicy-enum" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="34" documented="true" scoped="true">
                <value name="StopOnError" value="0"/>
                <value name="ContinueOnError" value="1"/>
                <value name="StopOnSuccess" value="2"/>
                <value name="ContinueOnSuccess" value="3"/>
                <value name="StopOnSuccessOrError" value="4"/>
                <value name="FinishAllAndSuccess" value="5"/>
                <value name="FinishAllAndError" value="6"/>
            </enum>
            <typedef name="TaskTreeTask" fullname="Tasking::TaskTreeTask" href="tasking.html#TaskTreeTask-typedef" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="607" documented="true" aliasedtype="CustomTask&lt;TaskTreeTaskAdapter&gt;"/>
            <typedef name="TimeoutTask" fullname="Tasking::TimeoutTask" href="tasking.html#TimeoutTask-typedef" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="608" documented="true" aliasedtype="CustomTask&lt;TimeoutTaskAdapter&gt;"/>
            <variable name="continueOnError" fullname="Tasking::continueOnError" href="tasking.html#continueOnError-var" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="380" documented="true" type="const Tasking::GroupItem" static="false"/>
            <variable name="continueOnSuccess" fullname="Tasking::continueOnSuccess" href="tasking.html#continueOnSuccess-var" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="382" documented="true" type="const Tasking::GroupItem" static="false"/>
            <variable name="finishAllAndError" fullname="Tasking::finishAllAndError" href="tasking.html#finishAllAndError-var" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="385" documented="true" type="const Tasking::GroupItem" static="false"/>
            <variable name="finishAllAndSuccess" fullname="Tasking::finishAllAndSuccess" href="tasking.html#finishAllAndSuccess-var" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="384" documented="true" type="const Tasking::GroupItem" static="false"/>
            <variable name="parallel" fullname="Tasking::parallel" href="tasking.html#parallel-var" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="377" documented="true" type="const Tasking::GroupItem" static="false"/>
            <variable name="sequential" fullname="Tasking::sequential" href="tasking.html#sequential-var" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="376" documented="true" type="const Tasking::GroupItem" static="false"/>
            <variable name="stopOnError" fullname="Tasking::stopOnError" href="tasking.html#stopOnError-var" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="379" documented="true" type="const Tasking::GroupItem" static="false"/>
            <variable name="stopOnSuccess" fullname="Tasking::stopOnSuccess" href="tasking.html#stopOnSuccess-var" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="381" documented="true" type="const Tasking::GroupItem" static="false"/>
            <variable name="stopOnSuccessOrError" fullname="Tasking::stopOnSuccessOrError" href="tasking.html#stopOnSuccessOrError-var" status="active" access="public" location="tasktree.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/solutions/tasking/tasktree.h" lineno="383" documented="true" type="const Tasking::GroupItem" static="false"/>
        </namespace>
        <page name="actionmanager.html" href="actionmanager.html" status="active" location="actionmanager.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/actionmanager.qdoc" lineno="4" documented="true" subtype="page" title="The Action Manager and Commands" fulltitle="The Action Manager and Commands" subtitle="">
            <contents name="command" title="Command" level="1"/>
            <contents name="contexts" title="Contexts" level="1"/>
            <contents name="using-icontext" title="Using IContext" level="2"/>
            <contents name="manually-managing-contexts" title="Manually Managing Contexts" level="2"/>
            <contents name="registering-actions" title="Registering Actions" level="1"/>
            <contents name="summary" title="Summary" level="1"/>
        </page>
        <page name="pluginmanager.html" href="pluginmanager.html" status="active" location="pluginmanager.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/pluginmanager.qdoc" lineno="4" documented="true" subtype="page" title="The Plugin Manager, the Object Pool, and Registered Objects" fulltitle="The Plugin Manager, the Object Pool, and Registered Objects" subtitle="">
            <target name="object-pool" title="object pool"/>
            <contents name="plugin-manager" title="Plugin Manager" level="1"/>
            <contents name="object-pool-and-registered-objects" title="Object Pool and Registered Objects" level="1"/>
        </page>
        <page name="qtcreator-ui-text.html" href="qtcreator-ui-text.html" status="active" location="qtcreator-ui-text.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/qtcreator-ui-text.qdoc" lineno="4" documented="true" subtype="page" title="User Interface Text Guidelines" fulltitle="User Interface Text Guidelines" subtitle="">
            <contents name="grammar-and-style" title="Grammar and Style" level="1"/>
            <contents name="punctuation" title="Punctuation" level="1"/>
            <contents name="writing-tooltips" title="Writing Tooltips" level="2"/>
            <contents name="tooltips-for-icons" title="Tooltips for Icons" level="3"/>
            <contents name="other-tooltips" title="Other Tooltips" level="3"/>
            <contents name="examples" title="Examples" level="3"/>
            <contents name="writing-tooltips-in-design-mode" title="Writing Tooltips in Design Mode" level="3"/>
            <contents name="writing-messages" title="Writing Messages" level="2"/>
            <contents name="ui-text-capitalization" title="UI Text Capitalization" level="1"/>
            <contents name="using-book-style-capitalization" title="Using Book Style Capitalization" level="2"/>
            <contents name="checking-book-style-capitalization" title="Checking Book Style Capitalization" level="3"/>
            <contents name="using-sentence-style-capitalization" title="Using Sentence Style Capitalization" level="2"/>
            <contents name="preparing-for-localization" title="Preparing for Localization" level="1"/>
            <contents name="marking-ui-text-for-translation" title="Marking UI Text for Translation" level="2"/>
            <contents name="features-of-languages-or-writing-systems" title="Features of Languages or Writing Systems" level="2"/>
            <contents name="common-qt-creator-terms" title="Common Qt Creator Terms" level="1"/>
        </page>
        <namespace name="Utils" href="utils.html" status="active" access="public" location="qtcolorbutton.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/qtcolorbutton.h" lineno="10" documented="true" module="QtCreator" brief="Contains a collection of utility classes and functions for use by all plugins">
            <function name="addToolTipsToMenu" fullname="Utils::addToolTipsToMenu" href="utils.html#addToolTipsToMenu" status="active" access="public" location="execmenu.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/execmenu.h" lineno="17" documented="true" meta="plain" type="void" signature="void addToolTipsToMenu(QMenu *menu)">
                <parameter type="QMenu *" name="menu" default=""/>
            </function>
            <function name="execMenuAtWidget" fullname="Utils::execMenuAtWidget" href="utils.html#execMenuAtWidget" status="active" access="public" location="execmenu.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/execmenu.h" lineno="16" documented="true" meta="plain" type="QAction *" signature="QAction * execMenuAtWidget(QMenu *menu, QWidget *widget)">
                <parameter type="QMenu *" name="menu" default=""/>
                <parameter type="QWidget *" name="widget" default=""/>
            </function>
            <function name="globalMacroExpander" fullname="Utils::globalMacroExpander" href="utils.html#globalMacroExpander" status="active" access="public" location="macroexpander.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/macroexpander.h" lineno="82" documented="true" meta="plain" type="Utils::MacroExpander *" signature="Utils::MacroExpander * globalMacroExpander()"/>
            <function name="joinStrings" fullname="Utils::joinStrings" href="utils.html#joinStrings" status="active" access="public" location="stringutils.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/stringutils.h" lineno="117" documented="true" meta="plain" type="QString" signature="QString joinStrings(const QStringList &amp;strings, QChar separator)">
                <parameter type="const QStringList &amp;" name="strings" default=""/>
                <parameter type="QChar" name="separator" default=""/>
            </function>
            <function name="qtcEnvironmentVariable" fullname="Utils::qtcEnvironmentVariable" href="utils.html#qtcEnvironmentVariable" status="active" access="public" location="environment.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/environment.h" lineno="151" documented="true" meta="plain" type="QString" signature="QString qtcEnvironmentVariable(const QString &amp;key)">
                <parameter type="const QString &amp;" name="key" default=""/>
            </function>
            <function name="qtcEnvironmentVariable" fullname="Utils::qtcEnvironmentVariable" href="utils.html#qtcEnvironmentVariable-1" status="active" access="public" location="environment.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/environment.h" lineno="152" documented="true" meta="plain" overload="true" overload-number="1" type="QString" signature="QString qtcEnvironmentVariable(const QString &amp;key, const QString &amp;defaultValue)">
                <parameter type="const QString &amp;" name="key" default=""/>
                <parameter type="const QString &amp;" name="defaultValue" default=""/>
            </function>
            <function name="qtcEnvironmentVariableIntValue" fullname="Utils::qtcEnvironmentVariableIntValue" href="utils.html#qtcEnvironmentVariableIntValue" status="active" access="public" location="environment.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/environment.h" lineno="156" documented="true" meta="plain" type="int" signature="int qtcEnvironmentVariableIntValue(const QString &amp;key, bool *ok)">
                <parameter type="const QString &amp;" name="key" default=""/>
                <parameter type="bool *" name="ok" default="nullptr"/>
            </function>
            <function name="qtcEnvironmentVariableIsEmpty" fullname="Utils::qtcEnvironmentVariableIsEmpty" href="utils.html#qtcEnvironmentVariableIsEmpty" status="active" access="public" location="environment.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/environment.h" lineno="155" documented="true" meta="plain" type="bool" signature="bool qtcEnvironmentVariableIsEmpty(const QString &amp;key)">
                <parameter type="const QString &amp;" name="key" default=""/>
            </function>
            <function name="qtcEnvironmentVariableIsSet" fullname="Utils::qtcEnvironmentVariableIsSet" href="utils.html#qtcEnvironmentVariableIsSet" status="active" access="public" location="environment.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/environment.h" lineno="154" documented="true" meta="plain" type="bool" signature="bool qtcEnvironmentVariableIsSet(const QString &amp;key)">
                <parameter type="const QString &amp;" name="key" default=""/>
            </function>
            <function name="trim" fullname="Utils::trim" href="utils.html#trim" status="active" access="public" location="stringutils.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/stringutils.h" lineno="120" documented="true" meta="plain" type="QString" signature="QString trim(const QString &amp;string, QChar ch)">
                <parameter type="const QString &amp;" name="string" default=""/>
                <parameter type="QChar" name="ch" default=""/>
            </function>
            <function name="trimBack" fullname="Utils::trimBack" href="utils.html#trimBack" status="active" access="public" location="stringutils.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/stringutils.h" lineno="119" documented="true" meta="plain" type="QString" signature="QString trimBack(const QString &amp;string, QChar ch)">
                <parameter type="const QString &amp;" name="string" default=""/>
                <parameter type="QChar" name="ch" default=""/>
            </function>
            <function name="trimFront" fullname="Utils::trimFront" href="utils.html#trimFront" status="active" access="public" location="stringutils.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/stringutils.h" lineno="118" documented="true" meta="plain" type="QString" signature="QString trimFront(const QString &amp;string, QChar ch)">
                <parameter type="const QString &amp;" name="string" default=""/>
                <parameter type="QChar" name="ch" default=""/>
            </function>
            <class name="Action" fullname="Utils::Action" href="utils-action.html" status="active" access="public" location="action.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/action.h" lineno="12" documented="true" bases="QAction" module="QtCreator" brief="Intended for actions that act on a 'current', string-type parameter (typically a file name), for example 'Save file %1'">
                <function name="emptyText" fullname="Utils::Action::emptyText" href="utils-action.html#emptyText-prop" status="active" access="public" location="action.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/action.h" lineno="29" meta="plain" const="true" associated-property="emptyText" type="QString" signature="QString emptyText() const"/>
                <function name="enablingMode" fullname="Utils::Action::enablingMode" href="utils-action.html#enablingMode-prop" status="active" access="public" location="action.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/action.h" lineno="35" meta="plain" const="true" associated-property="enablingMode" type="Utils::Action::EnablingMode" signature="Utils::Action::EnablingMode enablingMode() const"/>
                <function name="parameterText" fullname="Utils::Action::parameterText" href="utils-action.html#parameterText-prop" status="active" access="public" location="action.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/action.h" lineno="32" meta="plain" const="true" associated-property="parameterText" type="QString" signature="QString parameterText() const"/>
                <function name="setEmptyText" fullname="Utils::Action::setEmptyText" href="utils-action.html#emptyText-prop" status="active" access="public" location="action.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/action.h" lineno="30" meta="plain" associated-property="emptyText" type="void" signature="void setEmptyText(const QString &amp;)">
                    <parameter type="const QString &amp;" name="" default=""/>
                </function>
                <function name="setEnablingMode" fullname="Utils::Action::setEnablingMode" href="utils-action.html#enablingMode-prop" status="active" access="public" location="action.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/action.h" lineno="36" meta="plain" associated-property="enablingMode" type="void" signature="void setEnablingMode(Utils::Action::EnablingMode m)">
                    <parameter type="Utils::Action::EnablingMode" name="m" default=""/>
                </function>
                <function name="setParameterText" fullname="Utils::Action::setParameterText" href="utils-action.html#parameterText-prop" status="active" access="public" location="action.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/action.h" lineno="33" meta="plain" associated-property="parameterText" type="void" signature="void setParameterText(const QString &amp;)">
                    <parameter type="const QString &amp;" name="" default=""/>
                </function>
            </class>
            <class name="AnsiEscapeCodeHandler" fullname="Utils::AnsiEscapeCodeHandler" href="utils-ansiescapecodehandler.html" status="active" access="public" location="ansiescapecodehandler.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/ansiescapecodehandler.h" lineno="23" documented="true" module="QtCreator" brief="Parses text and extracts ANSI escape codes from it"/>
            <class name="AspectContainer" fullname="Utils::AspectContainer" href="utils-aspectcontainer.html" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="932" documented="true" bases="Utils::BaseAspect" module="QtCreator" brief="Wraps one or more aspects while providing the interface of a single aspect">
                <function name="aspect" fullname="Utils::AspectContainer::aspect" href="utils-aspectcontainer.html#aspect-1" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="976" documented="true" meta="plain" const="true" overload="true" overload-number="1" type="Utils::BaseAspect *" signature="Utils::BaseAspect * aspect(Utils::Id id) const">
                    <parameter type="Utils::Id" name="id" default=""/>
                </function>
            </class>
            <class name="BaseAspect" fullname="Utils::BaseAspect" href="utils-baseaspect.html" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="61" documented="true" bases="QObject" module="QtCreator" brief="Common base for classes implementing aspects">
                <function name="BaseAspect" fullname="Utils::BaseAspect::BaseAspect" href="utils-baseaspect.html#BaseAspect" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="66" documented="true" meta="constructor" signature="BaseAspect(Utils::AspectContainer *container)">
                    <parameter type="Utils::AspectContainer *" name="container" default="nullptr"/>
                </function>
                <function name="addToLayout" fullname="Utils::BaseAspect::addToLayout" href="utils-baseaspect.html#addToLayout" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="129" documented="true" meta="plain" virtual="virtual" type="void" signature="void addToLayout(Layouting::LayoutItem &amp;parent)">
                    <parameter type="Layouting::LayoutItem &amp;" name="parent" default=""/>
                </function>
                <function name="apply" fullname="Utils::BaseAspect::apply" href="utils-baseaspect.html#apply" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="140" documented="true" meta="plain" virtual="virtual" type="void" signature="void apply()"/>
                <function name="cancel" fullname="Utils::BaseAspect::cancel" href="utils-baseaspect.html#cancel" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="141" documented="true" meta="plain" virtual="virtual" type="void" signature="void cancel()"/>
                <function name="displayName" fullname="Utils::BaseAspect::displayName" href="utils-baseaspect.html#displayName" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="86" documented="true" meta="plain" const="true" type="QString" signature="QString displayName() const"/>
                <function name="fromMap" fullname="Utils::BaseAspect::fromMap" href="utils-baseaspect.html#fromMap" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="124" documented="true" meta="plain" virtual="virtual" type="void" signature="void fromMap(const Utils::Store &amp;map)">
                    <parameter type="const Utils::Store &amp;" name="map" default=""/>
                </function>
                <function name="labelText" fullname="Utils::BaseAspect::labelText" href="utils-baseaspect.html#labelText" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="110" documented="true" meta="plain" const="true" type="QString" signature="QString labelText() const"/>
                <function name="setAutoApply" fullname="Utils::BaseAspect::setAutoApply" href="utils-baseaspect.html#setAutoApply" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="96" documented="true" meta="plain" virtual="virtual" type="void" signature="void setAutoApply(bool on)">
                    <parameter type="bool" name="on" default=""/>
                </function>
                <function name="setEnabler" fullname="Utils::BaseAspect::setEnabler" href="utils-baseaspect.html#setEnabler" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="103" documented="true" meta="plain" type="void" signature="void setEnabler(Utils::BoolAspect *checker)">
                    <parameter type="Utils::BoolAspect *" name="checker" default=""/>
                </function>
                <function name="setLabelPixmap" fullname="Utils::BaseAspect::setLabelPixmap" href="utils-baseaspect.html#setLabelPixmap" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="112" documented="true" meta="plain" type="void" signature="void setLabelPixmap(const QPixmap &amp;labelPixmap)">
                    <parameter type="const QPixmap &amp;" name="labelPixmap" default=""/>
                </function>
                <function name="setLabelText" fullname="Utils::BaseAspect::setLabelText" href="utils-baseaspect.html#setLabelText" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="111" documented="true" meta="plain" type="void" signature="void setLabelText(const QString &amp;labelText)">
                    <parameter type="const QString &amp;" name="labelText" default=""/>
                </function>
                <function name="setSettingsKey" fullname="Utils::BaseAspect::setSettingsKey" href="utils-baseaspect.html#setSettingsKey" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="83" documented="true" meta="plain" type="void" signature="void setSettingsKey(const Utils::Key &amp;key)">
                    <parameter type="const Utils::Key &amp;" name="key" default=""/>
                </function>
                <function name="setSettingsKey" fullname="Utils::BaseAspect::setSettingsKey" href="utils-baseaspect.html#setSettingsKey-1" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="84" documented="true" meta="plain" overload="true" overload-number="1" type="void" signature="void setSettingsKey(const Utils::Key &amp;group, const Utils::Key &amp;key)">
                    <parameter type="const Utils::Key &amp;" name="group" default=""/>
                    <parameter type="const Utils::Key &amp;" name="key" default=""/>
                </function>
                <function name="setToolTip" fullname="Utils::BaseAspect::setToolTip" href="utils-baseaspect.html#setToolTip" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="90" documented="true" meta="plain" type="void" signature="void setToolTip(const QString &amp;tooltip)">
                    <parameter type="const QString &amp;" name="tooltip" default=""/>
                </function>
                <function name="setVariantValue" fullname="Utils::BaseAspect::setVariantValue" href="utils-baseaspect.html#setVariantValue" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="76" documented="true" meta="plain" virtual="virtual" type="void" signature="void setVariantValue(const QVariant &amp;value, Utils::BaseAspect::Announcement howToAnnounce)">
                    <parameter type="const QVariant &amp;" name="value" default=""/>
                    <parameter type="Utils::BaseAspect::Announcement" name="howToAnnounce" default="DoEmit"/>
                </function>
                <function name="setVisible" fullname="Utils::BaseAspect::setVisible" href="utils-baseaspect.html#setVisible" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="93" documented="true" meta="plain" type="void" signature="void setVisible(bool visible)">
                    <parameter type="bool" name="visible" default=""/>
                </function>
                <function name="settingsKey" fullname="Utils::BaseAspect::settingsKey" href="utils-baseaspect.html#settingsKey" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="82" documented="true" meta="plain" const="true" type="Utils::Key" signature="Utils::Key settingsKey() const"/>
                <function name="toMap" fullname="Utils::BaseAspect::toMap" href="utils-baseaspect.html#toMap" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="125" documented="true" meta="plain" virtual="virtual" const="true" type="void" signature="void toMap(Utils::Store &amp;map) const">
                    <parameter type="Utils::Store &amp;" name="map" default=""/>
                </function>
                <function name="writeToSettingsImmediatly" fullname="Utils::BaseAspect::writeToSettingsImmediatly" href="utils-baseaspect.html#writeToSettingsImmediatly" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="206" documented="true" meta="plain" const="true" type="void" signature="void writeToSettingsImmediatly() const"/>
                <function name="~BaseAspect" fullname="Utils::BaseAspect::~BaseAspect" href="utils-baseaspect.html#dtor.BaseAspect" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="67" documented="true" meta="destructor" virtual="virtual" override="true" noexcept="true" signature="~BaseAspect() override"/>
            </class>
            <class name="BoolAspect" fullname="Utils::BoolAspect" href="utils-boolaspect.html" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="434" documented="true" bases="Utils::TypedAspect" module="QtCreator" brief="A boolean aspect is a boolean property of some object, together with a description of its behavior for common operations like visualizing or persisting">
                <function name="addToLayout" fullname="Utils::BoolAspect::addToLayout" href="utils-boolaspect.html#addToLayout" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="442" documented="true" meta="plain" virtual="virtual" override="true" type="void" signature="void addToLayout(Layouting::LayoutItem &amp;parent) override">
                    <parameter type="Layouting::LayoutItem &amp;" name="parent" default=""/>
                </function>
            </class>
            <class name="CheckableMessageBox" fullname="Utils::CheckableMessageBox" href="utils-checkablemessagebox.html" status="active" access="public" location="checkablemessagebox.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/checkablemessagebox.h" lineno="30" documented="true" module="QtCreator" brief="Implements a message box suitable for questions with a Do not ask again or Do not show again checkbox">
                <function name="hasSuppressedQuestions" fullname="Utils::CheckableMessageBox::hasSuppressedQuestions" href="utils-checkablemessagebox.html#hasSuppressedQuestions" status="active" access="public" location="checkablemessagebox.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/checkablemessagebox.h" lineno="81" documented="true" meta="plain" static="true" type="bool" signature="bool hasSuppressedQuestions()"/>
                <function name="msgDoNotAskAgain" fullname="Utils::CheckableMessageBox::msgDoNotAskAgain" href="utils-checkablemessagebox.html#msgDoNotAskAgain" status="active" access="public" location="checkablemessagebox.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/checkablemessagebox.h" lineno="82" documented="true" meta="plain" static="true" type="QString" signature="QString msgDoNotAskAgain()"/>
                <function name="msgDoNotShowAgain" fullname="Utils::CheckableMessageBox::msgDoNotShowAgain" href="utils-checkablemessagebox.html#msgDoNotShowAgain" status="active" access="public" location="checkablemessagebox.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/checkablemessagebox.h" lineno="83" documented="true" meta="plain" static="true" type="QString" signature="QString msgDoNotShowAgain()"/>
                <function name="resetAllDoNotAskAgainQuestions" fullname="Utils::CheckableMessageBox::resetAllDoNotAskAgainQuestions" href="utils-checkablemessagebox.html#resetAllDoNotAskAgainQuestions" status="active" access="public" location="checkablemessagebox.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/checkablemessagebox.h" lineno="80" documented="true" meta="plain" static="true" type="void" signature="void resetAllDoNotAskAgainQuestions()"/>
            </class>
            <class name="ClassNameValidatingLineEdit" fullname="Utils::ClassNameValidatingLineEdit" href="utils-classnamevalidatinglineedit.html" status="active" access="public" location="classnamevalidatinglineedit.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/classnamevalidatinglineedit.h" lineno="14" documented="true" bases="Utils::FancyLineEdit" module="QtCreator" brief="Implements a line edit that validates a C++ class name and emits a signal to derive suggested file names from it">
                <function name="lowerCaseFileName" fullname="Utils::ClassNameValidatingLineEdit::lowerCaseFileName" href="utils-classnamevalidatinglineedit.html#lowerCaseFileName-prop" status="active" access="public" location="classnamevalidatinglineedit.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/classnamevalidatinglineedit.h" lineno="30" meta="plain" const="true" associated-property="lowerCaseFileName" type="bool" signature="bool lowerCaseFileName() const"/>
                <function name="namespacesEnabled" fullname="Utils::ClassNameValidatingLineEdit::namespacesEnabled" href="utils-classnamevalidatinglineedit.html#namespacesEnabled-prop" status="active" access="public" location="classnamevalidatinglineedit.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/classnamevalidatinglineedit.h" lineno="24" meta="plain" const="true" associated-property="namespacesEnabled" type="bool" signature="bool namespacesEnabled() const"/>
                <function name="setLowerCaseFileName" fullname="Utils::ClassNameValidatingLineEdit::setLowerCaseFileName" href="utils-classnamevalidatinglineedit.html#lowerCaseFileName-prop" status="active" access="public" location="classnamevalidatinglineedit.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/classnamevalidatinglineedit.h" lineno="31" meta="plain" associated-property="lowerCaseFileName" type="void" signature="void setLowerCaseFileName(bool v)">
                    <parameter type="bool" name="v" default=""/>
                </function>
                <function name="setNamespacesEnabled" fullname="Utils::ClassNameValidatingLineEdit::setNamespacesEnabled" href="utils-classnamevalidatinglineedit.html#namespacesEnabled-prop" status="active" access="public" location="classnamevalidatinglineedit.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/classnamevalidatinglineedit.h" lineno="25" meta="plain" associated-property="namespacesEnabled" type="void" signature="void setNamespacesEnabled(bool b)">
                    <parameter type="bool" name="b" default=""/>
                </function>
            </class>
            <class name="ColorAspect" fullname="Utils::ColorAspect" href="utils-coloraspect.html" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="499" documented="true" bases="Utils::TypedAspect" module="QtCreator" brief="A color aspect is a color property of some object, together with a description of its behavior for common operations like visualizing or persisting"/>
            <class name="CommandLine" fullname="Utils::CommandLine" href="utils-commandline.html" status="active" access="public" location="commandline.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/commandline.h" lineno="115" documented="true" module="QtCreator" brief="Represents a command line of a QProcess or similar utility"/>
            <class name="CompletingTextEdit" fullname="Utils::CompletingTextEdit" href="utils-completingtextedit.html" status="active" access="public" location="completingtextedit.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/completingtextedit.h" lineno="17" documented="true" bases="QTextEdit" module="QtCreator" brief="QTextEdit with auto-completion support">
                <function name="completionLengthThreshold" fullname="Utils::CompletingTextEdit::completionLengthThreshold" href="utils-completingtextedit.html#completionLengthThreshold-prop" status="active" access="public" location="completingtextedit.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/completingtextedit.h" lineno="30" meta="plain" const="true" associated-property="completionLengthThreshold" type="int" signature="int completionLengthThreshold() const"/>
                <function name="setCompletionLengthThreshold" fullname="Utils::CompletingTextEdit::setCompletionLengthThreshold" href="utils-completingtextedit.html#completionLengthThreshold-prop" status="active" access="public" location="completingtextedit.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/completingtextedit.h" lineno="31" meta="plain" associated-property="completionLengthThreshold" type="void" signature="void setCompletionLengthThreshold(int len)">
                    <parameter type="int" name="len" default=""/>
                </function>
            </class>
            <class name="DetailsWidget" fullname="Utils::DetailsWidget" href="utils-detailswidget.html" status="active" access="public" location="detailswidget.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/detailswidget.h" lineno="15" documented="true" bases="QWidget" module="QtCreator" brief="Implements a button to expand a Details area">
                <function name="additionalSummaryText" fullname="Utils::DetailsWidget::additionalSummaryText" href="utils-detailswidget.html#additionalSummaryText-prop" status="active" access="public" location="detailswidget.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/detailswidget.h" lineno="40" meta="plain" const="true" associated-property="additionalSummaryText" type="QString" signature="QString additionalSummaryText() const"/>
                <function name="isChecked" fullname="Utils::DetailsWidget::isChecked" href="utils-detailswidget.html#checked-prop" status="active" access="public" location="detailswidget.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/detailswidget.h" lineno="54" meta="plain" const="true" associated-property="checked" type="bool" signature="bool isChecked() const"/>
                <function name="setAdditionalSummaryText" fullname="Utils::DetailsWidget::setAdditionalSummaryText" href="utils-detailswidget.html#additionalSummaryText-prop" status="active" access="public" location="detailswidget.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/detailswidget.h" lineno="39" meta="plain" associated-property="additionalSummaryText" type="void" signature="void setAdditionalSummaryText(const QString &amp;text)">
                    <parameter type="const QString &amp;" name="text" default=""/>
                </function>
                <function name="setChecked" fullname="Utils::DetailsWidget::setChecked" href="utils-detailswidget.html#checked-prop" status="active" access="public" location="detailswidget.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/detailswidget.h" lineno="55" meta="plain" associated-property="checked" type="void" signature="void setChecked(bool b)">
                    <parameter type="bool" name="b" default=""/>
                </function>
                <function name="setState" fullname="Utils::DetailsWidget::setState" href="utils-detailswidget.html#state-prop" status="active" access="public" location="detailswidget.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/detailswidget.h" lineno="42" meta="plain" associated-property="state" type="void" signature="void setState(Utils::DetailsWidget::State state)">
                    <parameter type="Utils::DetailsWidget::State" name="state" default=""/>
                </function>
                <function name="setSummaryText" fullname="Utils::DetailsWidget::setSummaryText" href="utils-detailswidget.html#summaryText-prop" status="active" access="public" location="detailswidget.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/detailswidget.h" lineno="36" meta="plain" associated-property="summaryText" type="void" signature="void setSummaryText(const QString &amp;text)">
                    <parameter type="const QString &amp;" name="text" default=""/>
                </function>
                <function name="setUseCheckBox" fullname="Utils::DetailsWidget::setUseCheckBox" href="utils-detailswidget.html#useCheckBox-prop" status="active" access="public" location="detailswidget.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/detailswidget.h" lineno="58" meta="plain" associated-property="useCheckBox" type="void" signature="void setUseCheckBox(bool b)">
                    <parameter type="bool" name="b" default=""/>
                </function>
                <function name="state" fullname="Utils::DetailsWidget::state" href="utils-detailswidget.html#state-prop" status="active" access="public" location="detailswidget.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/detailswidget.h" lineno="43" meta="plain" const="true" associated-property="state" type="Utils::DetailsWidget::State" signature="Utils::DetailsWidget::State state() const"/>
                <function name="summaryText" fullname="Utils::DetailsWidget::summaryText" href="utils-detailswidget.html#summaryText-prop" status="active" access="public" location="detailswidget.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/detailswidget.h" lineno="37" meta="plain" const="true" associated-property="summaryText" type="QString" signature="QString summaryText() const"/>
                <function name="useCheckBox" fullname="Utils::DetailsWidget::useCheckBox" href="utils-detailswidget.html#useCheckBox-prop" status="active" access="public" location="detailswidget.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/detailswidget.h" lineno="57" meta="plain" associated-property="useCheckBox" type="bool" signature="bool useCheckBox()"/>
            </class>
            <class name="DoubleAspect" fullname="Utils::DoubleAspect" href="utils-doubleaspect.html" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="754" documented="true" bases="Utils::TypedAspect" module="QtCreator" brief="An double aspect is a numerical property of some object, together with a description of its behavior for common operations like visualizing or persisting">
                <function name="addToLayout" fullname="Utils::DoubleAspect::addToLayout" href="utils-doubleaspect.html#addToLayout" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="762" documented="true" meta="plain" virtual="virtual" override="true" type="void" signature="void addToLayout(Layouting::LayoutItem &amp;builder) override">
                    <parameter type="Layouting::LayoutItem &amp;" name="builder" default=""/>
                </function>
            </class>
            <class name="ElidingLabel" fullname="Utils::ElidingLabel" href="utils-elidinglabel.html" status="active" access="public" location="elidinglabel.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/elidinglabel.h" lineno="12" documented="true" bases="QLabel" module="QtCreator" brief="Label suitable for displaying elided text">
                <function name="additionalToolTip" fullname="Utils::ElidingLabel::additionalToolTip" href="utils-elidinglabel.html#additionalToolTip-prop" status="active" access="public" location="elidinglabel.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/elidinglabel.h" lineno="26" meta="plain" associated-property="additionalToolTip" type="QString" signature="QString additionalToolTip()"/>
                <function name="additionalToolTipSeparator" fullname="Utils::ElidingLabel::additionalToolTipSeparator" href="utils-elidinglabel.html#additionalToolTipSeparator-prop" status="active" access="public" location="elidinglabel.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/elidinglabel.h" lineno="29" meta="plain" const="true" associated-property="additionalToolTipSeparator" type="QString" signature="QString additionalToolTipSeparator() const"/>
                <function name="elideMode" fullname="Utils::ElidingLabel::elideMode" href="utils-elidinglabel.html#elideMode-prop" status="active" access="public" location="elidinglabel.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/elidinglabel.h" lineno="23" meta="plain" const="true" associated-property="elideMode" type="Qt::TextElideMode" signature="Qt::TextElideMode elideMode() const"/>
                <function name="setAdditionalToolTip" fullname="Utils::ElidingLabel::setAdditionalToolTip" href="utils-elidinglabel.html#additionalToolTip-prop" status="active" access="public" location="elidinglabel.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/elidinglabel.h" lineno="27" meta="plain" associated-property="additionalToolTip" type="void" signature="void setAdditionalToolTip(const QString &amp;additionalToolTip)">
                    <parameter type="const QString &amp;" name="additionalToolTip" default=""/>
                </function>
                <function name="setAdditionalToolTipSeparator" fullname="Utils::ElidingLabel::setAdditionalToolTipSeparator" href="utils-elidinglabel.html#additionalToolTipSeparator-prop" status="active" access="public" location="elidinglabel.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/elidinglabel.h" lineno="30" meta="plain" associated-property="additionalToolTipSeparator" type="void" signature="void setAdditionalToolTipSeparator(const QString &amp;newAdditionalToolTipSeparator)">
                    <parameter type="const QString &amp;" name="newAdditionalToolTipSeparator" default=""/>
                </function>
                <function name="setElideMode" fullname="Utils::ElidingLabel::setElideMode" href="utils-elidinglabel.html#elideMode-prop" status="active" access="public" location="elidinglabel.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/elidinglabel.h" lineno="24" meta="plain" associated-property="elideMode" type="void" signature="void setElideMode(const Qt::TextElideMode &amp;elideMode)">
                    <parameter type="const Qt::TextElideMode &amp;" name="elideMode" default=""/>
                </function>
            </class>
            <class name="Environment" fullname="Utils::Environment" href="utils-environment.html" status="active" access="public" location="environment.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/environment.h" lineno="22" documented="true" module="QtCreator" brief="Sets Qt Creator's system environment">
                <function name="systemEnvironment" fullname="Utils::Environment::systemEnvironment" href="utils-environment.html#systemEnvironment" status="active" access="public" location="environment.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/environment.h" lineno="93" documented="true" meta="plain" static="true" type="Utils::Environment" signature="Utils::Environment systemEnvironment()"/>
            </class>
            <class name="FakeToolTip" fullname="Utils::FakeToolTip" href="utils-faketooltip.html" status="active" access="public" location="faketooltip.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/faketooltip.h" lineno="12" documented="true" bases="QWidget" module="QtCreator" brief="Widget that pretends to be a tooltip"/>
            <class name="FancyLineEdit" fullname="Utils::FancyLineEdit" href="utils-fancylineedit.html" status="active" access="public" location="fancylineedit.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/fancylineedit.h" lineno="53" documented="true" bases="Utils::CompletingLineEdit" module="QtCreator" brief="Enhanced line edit with several opt-in features"/>
            <class name="FancyMainWindow" fullname="Utils::FancyMainWindow" href="utils-fancymainwindow.html" status="active" access="public" location="fancymainwindow.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fancymainwindow.h" lineno="17" documented="true" bases="QMainWindow" module="QtCreator" brief="MainWindow with dock widgets and additional &quot;lock&quot; functionality (locking the dock widgets in place) and &quot;reset layout&quot; functionality"/>
            <class name="FileInProjectFinder" fullname="Utils::FileInProjectFinder" href="utils-fileinprojectfinder.html" status="active" access="public" location="fileinprojectfinder.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fileinprojectfinder.h" lineno="17" documented="true" module="QtCreator" brief="Helper class to find the original file in the project directory for a given file URL">
                <function name="findFile" fullname="Utils::FileInProjectFinder::findFile" href="utils-fileinprojectfinder.html#findFile" status="active" access="public" location="fileinprojectfinder.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fileinprojectfinder.h" lineno="35" documented="true" meta="plain" const="true" type="Utils::FilePaths" signature="Utils::FilePaths findFile(const QUrl &amp;fileUrl, bool *success) const">
                    <parameter type="const QUrl &amp;" name="fileUrl" default=""/>
                    <parameter type="bool *" name="success" default="nullptr"/>
                </function>
            </class>
            <class name="FileNameValidatingLineEdit" fullname="Utils::FileNameValidatingLineEdit" href="utils-filenamevalidatinglineedit.html" status="active" access="public" location="filenamevalidatinglineedit.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/filenamevalidatinglineedit.h" lineno="10" documented="true" bases="Utils::FancyLineEdit" module="QtCreator" brief="Control that lets the user choose a (base) file name, based on a QLineEdit">
                <function name="allowDirectories" fullname="Utils::FileNameValidatingLineEdit::allowDirectories" href="utils-filenamevalidatinglineedit.html#allowDirectories-prop" status="active" access="public" location="filenamevalidatinglineedit.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/filenamevalidatinglineedit.h" lineno="32" meta="plain" const="true" associated-property="allowDirectories" type="bool" signature="bool allowDirectories() const"/>
                <function name="forceFirstCapitalLetter" fullname="Utils::FileNameValidatingLineEdit::forceFirstCapitalLetter" href="utils-filenamevalidatinglineedit.html#forceFirstCapitalLetter-prop" status="active" access="public" location="filenamevalidatinglineedit.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/filenamevalidatinglineedit.h" lineno="39" meta="plain" const="true" associated-property="forceFirstCapitalLetter" type="bool" signature="bool forceFirstCapitalLetter() const"/>
                <function name="requiredExtensions" fullname="Utils::FileNameValidatingLineEdit::requiredExtensions" href="utils-filenamevalidatinglineedit.html#requiredExtensions-prop" status="active" access="public" location="filenamevalidatinglineedit.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/filenamevalidatinglineedit.h" lineno="46" meta="plain" const="true" associated-property="requiredExtensions" type="QStringList" signature="QStringList requiredExtensions() const"/>
                <function name="setAllowDirectories" fullname="Utils::FileNameValidatingLineEdit::setAllowDirectories" href="utils-filenamevalidatinglineedit.html#allowDirectories-prop" status="active" access="public" location="filenamevalidatinglineedit.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/filenamevalidatinglineedit.h" lineno="33" meta="plain" associated-property="allowDirectories" type="void" signature="void setAllowDirectories(bool v)">
                    <parameter type="bool" name="v" default=""/>
                </function>
                <function name="setForceFirstCapitalLetter" fullname="Utils::FileNameValidatingLineEdit::setForceFirstCapitalLetter" href="utils-filenamevalidatinglineedit.html#forceFirstCapitalLetter-prop" status="active" access="public" location="filenamevalidatinglineedit.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/filenamevalidatinglineedit.h" lineno="40" meta="plain" associated-property="forceFirstCapitalLetter" type="void" signature="void setForceFirstCapitalLetter(bool b)">
                    <parameter type="bool" name="b" default=""/>
                </function>
                <function name="setRequiredExtensions" fullname="Utils::FileNameValidatingLineEdit::setRequiredExtensions" href="utils-filenamevalidatinglineedit.html#requiredExtensions-prop" status="active" access="public" location="filenamevalidatinglineedit.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/filenamevalidatinglineedit.h" lineno="47" meta="plain" associated-property="requiredExtensions" type="void" signature="void setRequiredExtensions(const QStringList &amp;extensionList)">
                    <parameter type="const QStringList &amp;" name="extensionList" default=""/>
                </function>
            </class>
            <class name="FilePath" fullname="Utils::FilePath" href="utils-filepath.html" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="58" documented="true" module="QtCreator" brief="Abstraction for handles to objects in a (possibly remote) file system, similar to a URL or, in the local case, a path to a file or directory">
                <function name="baseName" fullname="Utils::FilePath::baseName" href="utils-filepath.html#baseName" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="93" documented="true" meta="plain" const="true" type="QString" signature="QString baseName() const"/>
                <function name="calcRelativePath" fullname="Utils::FilePath::calcRelativePath" href="utils-filepath.html#calcRelativePath" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="264" documented="true" meta="plain" static="true" type="QString" signature="QString calcRelativePath(QStringView absolutePath, QStringView absoluteAnchorPath)">
                    <parameter type="QStringView" name="absolutePath" default=""/>
                    <parameter type="QStringView" name="absoluteAnchorPath" default=""/>
                </function>
                <function name="canonicalPath" fullname="Utils::FilePath::canonicalPath" href="utils-filepath.html#canonicalPath" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="161" documented="true" meta="plain" const="true" type="Utils::FilePath" signature="Utils::FilePath canonicalPath() const"/>
                <function name="caseSensitivity" fullname="Utils::FilePath::caseSensitivity" href="utils-filepath.html#caseSensitivity" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="147" documented="true" meta="plain" const="true" type="Qt::CaseSensitivity" brief="Returns the caseSensitivity of the path" signature="Qt::CaseSensitivity caseSensitivity() const"/>
                <function name="chopped" fullname="Utils::FilePath::chopped" href="utils-filepath.html#chopped" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="173" documented="true" meta="plain" const="true" type="Utils::FilePath" signature="Utils::FilePath chopped(int n) const">
                    <parameter type="int" name="n" default=""/>
                </function>
                <function name="cleanPath" fullname="Utils::FilePath::cleanPath" href="utils-filepath.html#cleanPath" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="160" documented="true" meta="plain" const="true" type="Utils::FilePath" brief="Cleans path part similar to QDir::cleanPath()" signature="Utils::FilePath cleanPath() const"/>
                <function name="clear" fullname="Utils::FilePath::clear" href="utils-filepath.html#clear" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="151" documented="true" meta="plain" type="void" brief="Clears all parts of the FilePath" signature="void clear()"/>
                <function name="completeBaseName" fullname="Utils::FilePath::completeBaseName" href="utils-filepath.html#completeBaseName" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="94" documented="true" meta="plain" const="true" type="QString" signature="QString completeBaseName() const"/>
                <function name="completeSuffix" fullname="Utils::FilePath::completeSuffix" href="utils-filepath.html#completeSuffix" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="97" documented="true" meta="plain" const="true" type="QString" signature="QString completeSuffix() const"/>
                <function name="contains" fullname="Utils::FilePath::contains" href="utils-filepath.html#contains" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="104" documented="true" meta="plain" const="true" type="bool" signature="bool contains(const QString &amp;s) const">
                    <parameter type="const QString &amp;" name="s" default=""/>
                </function>
                <function name="createDir" fullname="Utils::FilePath::createDir" href="utils-filepath.html#createDir" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="138" documented="true" meta="plain" const="true" type="bool" brief="Creates a directory in this location" signature="bool createDir() const"/>
                <function name="displayName" fullname="Utils::FilePath::displayName" href="utils-filepath.html#displayName" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="218" documented="true" meta="plain" const="true" type="QString" signature="QString displayName(const QString &amp;args) const">
                    <parameter type="const QString &amp;" name="args" default="{}"/>
                </function>
                <function name="endsWith" fullname="Utils::FilePath::endsWith" href="utils-filepath.html#endsWith" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="103" documented="true" meta="plain" const="true" type="bool" signature="bool endsWith(const QString &amp;s) const">
                    <parameter type="const QString &amp;" name="s" default=""/>
                </function>
                <function name="ensureWritableDir" fullname="Utils::FilePath::ensureWritableDir" href="utils-filepath.html#ensureWritableDir" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="113" documented="true" meta="plain" const="true" type="expected_str&lt;void&gt;" brief="Re-uses or creates a directory in this location" signature="expected_str&lt;void&gt; ensureWritableDir() const"/>
                <function name="exists" fullname="Utils::FilePath::exists" href="utils-filepath.html#exists" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="106" documented="true" meta="plain" const="true" type="bool" signature="bool exists() const"/>
                <function name="fromFileInfo" fullname="Utils::FilePath::fromFileInfo" href="utils-filepath.html#fromFileInfo" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="249" documented="true" meta="plain" static="true" type="Utils::FilePath" signature="Utils::FilePath fromFileInfo(const QFileInfo &amp;info)">
                    <parameter type="const QFileInfo &amp;" name="info" default=""/>
                </function>
                <function name="fromString" fullname="Utils::FilePath::fromString" href="utils-filepath.html#fromString" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="65" documented="true" meta="plain" static="true" type="Utils::FilePath" signature="Utils::FilePath fromString(const QString &amp;filepath)">
                    <parameter type="const QString &amp;" name="filepath" default=""/>
                </function>
                <function name="fromStringWithExtension" fullname="Utils::FilePath::fromStringWithExtension" href="utils-filepath.html#fromStringWithExtension" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="66" documented="true" meta="plain" static="true" type="Utils::FilePath" signature="Utils::FilePath fromStringWithExtension(const QString &amp;filepath, const QString &amp;defaultExtension)">
                    <parameter type="const QString &amp;" name="filepath" default=""/>
                    <parameter type="const QString &amp;" name="defaultExtension" default=""/>
                </function>
                <function name="fromUrl" fullname="Utils::FilePath::fromUrl" href="utils-filepath.html#fromUrl" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="71" documented="true" meta="plain" static="true" type="Utils::FilePath" signature="Utils::FilePath fromUrl(const QUrl &amp;url)">
                    <parameter type="const QUrl &amp;" name="url" default=""/>
                </function>
                <function name="fromUserInput" fullname="Utils::FilePath::fromUserInput" href="utils-filepath.html#fromUserInput" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="67" documented="true" meta="plain" static="true" type="Utils::FilePath" signature="Utils::FilePath fromUserInput(const QString &amp;filePath)">
                    <parameter type="const QString &amp;" name="filePath" default=""/>
                </function>
                <function name="fromUtf8" fullname="Utils::FilePath::fromUtf8" href="utils-filepath.html#fromUtf8" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="68" documented="true" meta="plain" static="true" type="Utils::FilePath" signature="Utils::FilePath fromUtf8(const char *filename, int filenameSize)">
                    <parameter type="const char *" name="filename" default=""/>
                    <parameter type="int" name="filenameSize" default="-1"/>
                </function>
                <function name="fromVariant" fullname="Utils::FilePath::fromVariant" href="utils-filepath.html#fromVariant" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="70" documented="true" meta="plain" static="true" type="Utils::FilePath" signature="Utils::FilePath fromVariant(const QVariant &amp;variant)">
                    <parameter type="const QVariant &amp;" name="variant" default=""/>
                </function>
                <function name="isChildOf" fullname="Utils::FilePath::isChildOf" href="utils-filepath.html#isChildOf" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="109" documented="true" meta="plain" const="true" type="bool" signature="bool isChildOf(const Utils::FilePath &amp;s) const">
                    <parameter type="const Utils::FilePath &amp;" name="s" default=""/>
                </function>
                <function name="isEmpty" fullname="Utils::FilePath::isEmpty" href="utils-filepath.html#isEmpty" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="152" documented="true" meta="plain" const="true" type="bool" brief="Checks if the path() is empty" signature="bool isEmpty() const"/>
                <function name="isExecutableFile" fullname="Utils::FilePath::isExecutableFile" href="utils-filepath.html#isExecutableFile" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="115" documented="true" meta="plain" const="true" type="bool" signature="bool isExecutableFile() const"/>
                <function name="isNewerThan" fullname="Utils::FilePath::isNewerThan" href="utils-filepath.html#isNewerThan" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="126" documented="true" meta="plain" const="true" type="bool" brief="Checks if this is newer than timeStamp" signature="bool isNewerThan(const QDateTime &amp;timeStamp) const">
                    <parameter type="const QDateTime &amp;" name="timeStamp" default=""/>
                </function>
                <function name="isRelativePath" fullname="Utils::FilePath::isRelativePath" href="utils-filepath.html#isRelativePath" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="118" documented="true" meta="plain" const="true" type="bool" brief="Checks whether the path is relative" signature="bool isRelativePath() const"/>
                <function name="isWritableDir" fullname="Utils::FilePath::isWritableDir" href="utils-filepath.html#isWritableDir" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="111" documented="true" meta="plain" const="true" type="bool" signature="bool isWritableDir() const"/>
                <function name="isWritableFile" fullname="Utils::FilePath::isWritableFile" href="utils-filepath.html#isWritableFile" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="112" documented="true" meta="plain" const="true" type="bool" signature="bool isWritableFile() const"/>
                <function name="iterateDirectory" fullname="Utils::FilePath::iterateDirectory" href="utils-filepath.html#iterateDirectory" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="181" documented="true" meta="plain" const="true" type="void" signature="void iterateDirectory(const Utils::FilePath::IterateDirCallback &amp;callBack, const Utils::FileFilter &amp;filter) const">
                    <parameter type="const Utils::FilePath::IterateDirCallback &amp;" name="callBack" default=""/>
                    <parameter type="const Utils::FileFilter &amp;" name="filter" default=""/>
                </function>
                <function name="nativePath" fullname="Utils::FilePath::nativePath" href="utils-filepath.html#nativePath" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="219" documented="true" meta="plain" const="true" type="QString" signature="QString nativePath() const"/>
                <function name="parentDir" fullname="Utils::FilePath::parentDir" href="utils-filepath.html#parentDir" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="108" documented="true" meta="plain" const="true" type="Utils::FilePath" signature="Utils::FilePath parentDir() const"/>
                <function name="pathComponentSeparator" fullname="Utils::FilePath::pathComponentSeparator" href="utils-filepath.html#pathComponentSeparator" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="148" documented="true" meta="plain" const="true" type="QChar" brief="Returns the separator of path components for this path" signature="QChar pathComponentSeparator() const"/>
                <function name="pathListSeparator" fullname="Utils::FilePath::pathListSeparator" href="utils-filepath.html#pathListSeparator" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="149" documented="true" meta="plain" const="true" type="QChar" brief="Returns the path list separator for the device this path belongs to" signature="QChar pathListSeparator() const"/>
                <function name="refersToExecutableFile" fullname="Utils::FilePath::refersToExecutableFile" href="utils-filepath.html#refersToExecutableFile" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="209" documented="true" meta="plain" const="true" type="std::optional&lt;FilePath&gt;" signature="std::optional&lt;FilePath&gt; refersToExecutableFile(Utils::FilePath::MatchScope matchScope) const">
                    <parameter type="Utils::FilePath::MatchScope" name="matchScope" default=""/>
                </function>
                <function name="relativeChildPath" fullname="Utils::FilePath::relativeChildPath" href="utils-filepath.html#relativeChildPath" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="166" documented="true" meta="plain" const="true" type="Utils::FilePath" brief="Relative path from parent to this" signature="Utils::FilePath relativeChildPath(const Utils::FilePath &amp;parent) const">
                    <parameter type="const Utils::FilePath &amp;" name="parent" default=""/>
                </function>
                <function name="relativePathFrom" fullname="Utils::FilePath::relativePathFrom" href="utils-filepath.html#relativePathFrom" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="167" documented="true" meta="plain" const="true" type="Utils::FilePath" signature="Utils::FilePath relativePathFrom(const Utils::FilePath &amp;anchor) const">
                    <parameter type="const Utils::FilePath &amp;" name="anchor" default=""/>
                </function>
                <function name="removeRecursively" fullname="Utils::FilePath::removeRecursively" href="utils-filepath.html#removeRecursively" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="132" documented="true" meta="plain" const="true" type="bool" signature="bool removeRecursively(QString *error) const">
                    <parameter type="QString *" name="error" default="nullptr"/>
                </function>
                <function name="resolvePath" fullname="Utils::FilePath::resolvePath" href="utils-filepath.html#resolvePath" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="158" documented="true" meta="plain" const="true" type="Utils::FilePath" brief="Appends the tail to this, if the tail is a relative path" signature="Utils::FilePath resolvePath(const Utils::FilePath &amp;tail) const">
                    <parameter type="const Utils::FilePath &amp;" name="tail" default=""/>
                </function>
                <function name="resolvePath" fullname="Utils::FilePath::resolvePath" href="utils-filepath.html#resolvePath-1" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="159" documented="true" meta="plain" const="true" overload="true" overload-number="1" type="Utils::FilePath" brief="Appends the tail to this, if the tail is a relative path" signature="Utils::FilePath resolvePath(const QString &amp;tail) const">
                    <parameter type="const QString &amp;" name="tail" default=""/>
                </function>
                <function name="resolveSymlinks" fullname="Utils::FilePath::resolveSymlinks" href="utils-filepath.html#resolveSymlinks" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="163" documented="true" meta="plain" const="true" type="Utils::FilePath" brief="Recursively resolves symlinks if this is a symlink" signature="Utils::FilePath resolveSymlinks() const"/>
                <function name="searchInDirectories" fullname="Utils::FilePath::searchInDirectories" href="utils-filepath.html#searchInDirectories" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="194" documented="true" meta="plain" const="true" type="Utils::FilePath" signature="Utils::FilePath searchInDirectories(const Utils::FilePaths &amp;dirs, const Utils::FilePathPredicate &amp;filter, Utils::FilePath::MatchScope matchScope) const">
                    <parameter type="const Utils::FilePaths &amp;" name="dirs" default=""/>
                    <parameter type="const Utils::FilePathPredicate &amp;" name="filter" default="{}"/>
                    <parameter type="Utils::FilePath::MatchScope" name="matchScope" default="WithAnySuffix"/>
                </function>
                <function name="shortNativePath" fullname="Utils::FilePath::shortNativePath" href="utils-filepath.html#shortNativePath" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="220" documented="true" meta="plain" const="true" type="QString" brief="Converts the path to a possibly shortened path with native separators" signature="QString shortNativePath() const"/>
                <function name="startsWith" fullname="Utils::FilePath::startsWith" href="utils-filepath.html#startsWith" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="102" documented="true" meta="plain" const="true" type="bool" signature="bool startsWith(const QString &amp;s) const">
                    <parameter type="const QString &amp;" name="s" default=""/>
                </function>
                <function name="startsWithDriveLetter" fullname="Utils::FilePath::startsWithDriveLetter" href="utils-filepath.html#startsWithDriveLetter" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="223" documented="true" meta="plain" const="true" type="bool" brief="Checks whether the FilePath starts with a drive letter. Returns whether FilePath starts with a drive letter" signature="bool startsWithDriveLetter() const"/>
                <function name="suffixView" fullname="Utils::FilePath::suffixView" href="utils-filepath.html#suffixView" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="96" documented="true" meta="plain" const="true" type="QStringView" signature="QStringView suffixView() const"/>
                <function name="symLinkTarget" fullname="Utils::FilePath::symLinkTarget" href="utils-filepath.html#symLinkTarget" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="162" documented="true" meta="plain" const="true" type="Utils::FilePath" signature="Utils::FilePath symLinkTarget() const"/>
                <function name="toFSPathString" fullname="Utils::FilePath::toFSPathString" href="utils-filepath.html#toFSPathString" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="259" documented="true" meta="plain" const="true" type="QString" signature="QString toFSPathString() const"/>
                <function name="toFileInfo" fullname="Utils::FilePath::toFileInfo" href="utils-filepath.html#toFileInfo" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="248" documented="true" meta="plain" const="true" type="QFileInfo" signature="QFileInfo toFileInfo() const"/>
                <function name="toString" fullname="Utils::FilePath::toString" href="utils-filepath.html#toString" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="269" documented="true" meta="plain" const="true" type="QString" signature="QString toString() const"/>
                <function name="toUserOutput" fullname="Utils::FilePath::toUserOutput" href="utils-filepath.html#toUserOutput" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="77" documented="true" meta="plain" const="true" type="QString" signature="QString toUserOutput() const"/>
                <function name="toVariant" fullname="Utils::FilePath::toVariant" href="utils-filepath.html#toVariant" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="79" documented="true" meta="plain" const="true" type="QVariant" signature="QVariant toVariant() const"/>
                <function name="withNewMappedPath" fullname="Utils::FilePath::withNewMappedPath" href="utils-filepath.html#withNewMappedPath" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="172" documented="true" meta="plain" const="true" type="Utils::FilePath" signature="Utils::FilePath withNewMappedPath(const Utils::FilePath &amp;newPath) const">
                    <parameter type="const Utils::FilePath &amp;" name="newPath" default=""/>
                </function>
                <function name="withNewPath" fullname="Utils::FilePath::withNewPath" href="utils-filepath.html#withNewPath" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="171" documented="true" meta="plain" const="true" type="Utils::FilePath" signature="Utils::FilePath withNewPath(const QString &amp;newPath) const">
                    <parameter type="const QString &amp;" name="newPath" default=""/>
                </function>
                <function name="withTildeHomePath" fullname="Utils::FilePath::withTildeHomePath" href="utils-filepath.html#withTildeHomePath" status="active" access="public" location="filepath.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/fsengine/../filepath.h" lineno="221" documented="true" meta="plain" const="true" type="QString" signature="QString withTildeHomePath() const"/>
            </class>
            <class name="FilePathAspect" fullname="Utils::FilePathAspect" href="utils-filepathaspect.html" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="654" documented="true" bases="Utils::TypedAspect" module="QtCreator" brief="A file path aspect is shallow wrapper around a Utils::StringAspect that represents a file in the file system">
                <function name="fromMap" fullname="Utils::FilePathAspect::fromMap" href="utils-filepathaspect.html#fromMap" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="708" documented="true" meta="plain" virtual="virtual" override="true" type="void" signature="void fromMap(const Utils::Store &amp;map) override">
                    <parameter type="const Utils::Store &amp;" name="map" default=""/>
                </function>
                <function name="makeCheckable" fullname="Utils::FilePathAspect::makeCheckable" href="utils-filepathaspect.html#makeCheckable" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="696" documented="true" meta="plain" type="void" signature="void makeCheckable(Utils::CheckBoxPlacement checkBoxPlacement, const QString &amp;checkerLabel, const Utils::Key &amp;checkerKey)">
                    <parameter type="Utils::CheckBoxPlacement" name="checkBoxPlacement" default=""/>
                    <parameter type="const QString &amp;" name="checkerLabel" default=""/>
                    <parameter type="const Utils::Key &amp;" name="checkerKey" default=""/>
                </function>
                <function name="operator()" fullname="Utils::FilePathAspect::operator()" href="utils-filepathaspect.html#operator-28-29" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="668" documented="true" meta="plain" const="true" type="Utils::FilePath" signature="Utils::FilePath operator()() const"/>
                <function name="setExpectedKind" fullname="Utils::FilePathAspect::setExpectedKind" href="utils-filepathaspect.html#setExpectedKind" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="682" documented="true" meta="plain" type="void" signature="void setExpectedKind(const PathChooser::Kind expectedKind)">
                    <parameter type="const PathChooser::Kind" name="expectedKind" default=""/>
                </function>
                <function name="setValue" fullname="Utils::FilePathAspect::setValue" href="utils-filepathaspect.html#setValue" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="671" documented="true" meta="plain" type="void" signature="void setValue(const Utils::FilePath &amp;filePath, Utils::BaseAspect::Announcement howToAnnounce)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                    <parameter type="Utils::BaseAspect::Announcement" name="howToAnnounce" default="DoEmit"/>
                </function>
                <function name="toMap" fullname="Utils::FilePathAspect::toMap" href="utils-filepathaspect.html#toMap" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="709" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="void" signature="void toMap(Utils::Store &amp;map) const override">
                    <parameter type="Utils::Store &amp;" name="map" default=""/>
                </function>
            </class>
            <class name="FilePathListAspect" fullname="Utils::FilePathListAspect" href="utils-filepathlistaspect.html" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="846" documented="true" bases="Utils::TypedAspect" module="QtCreator" brief="A filepath list aspect represents a property of some object that is a list of filepathList"/>
            <class name="FileSystemWatcher" fullname="Utils::FileSystemWatcher" href="utils-filesystemwatcher.html" status="active" access="public" location="filesystemwatcher.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/filesystemwatcher.h" lineno="16" documented="true" bases="QObject" module="QtCreator" brief="File watcher that internally uses a centralized QFileSystemWatcher and enforces limits on Mac OS">
                <contents name="design-considerations" title="Design Considerations" level="1"/>
                <contents name="mac-os-specifics" title="Mac OS Specifics" level="1"/>
                <function name="FileSystemWatcher" fullname="Utils::FileSystemWatcher::FileSystemWatcher" href="utils-filesystemwatcher.html#FileSystemWatcher" status="active" access="public" location="filesystemwatcher.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/filesystemwatcher.h" lineno="27" documented="true" meta="constructor" explicit="true" signature="FileSystemWatcher(QObject *parent)">
                    <parameter type="QObject *" name="parent" default="nullptr"/>
                </function>
                <function name="FileSystemWatcher" fullname="Utils::FileSystemWatcher::FileSystemWatcher" href="utils-filesystemwatcher.html#FileSystemWatcher-1" status="active" access="public" location="filesystemwatcher.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/filesystemwatcher.h" lineno="28" documented="true" meta="constructor" explicit="true" overload="true" overload-number="1" signature="FileSystemWatcher(int id, QObject *parent)">
                    <parameter type="int" name="id" default=""/>
                    <parameter type="QObject *" name="parent" default="nullptr"/>
                </function>
            </class>
            <class name="FileUtils" fullname="Utils::FileUtils" href="utils-fileutils.html" status="active" access="public" location="fileutils.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/fileutils.h" lineno="43" documented="true" module="QtCreator" brief="Contains file and directory related convenience functions">
                <function name="copyIfDifferent" fullname="Utils::FileUtils::copyIfDifferent" href="utils-fileutils.html#copyIfDifferent" status="active" access="public" location="fileutils.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/fileutils.h" lineno="70" documented="true" meta="plain" static="true" type="bool" signature="bool copyIfDifferent(const Utils::FilePath &amp;srcFilePath, const Utils::FilePath &amp;tgtFilePath)">
                    <parameter type="const Utils::FilePath &amp;" name="srcFilePath" default=""/>
                    <parameter type="const Utils::FilePath &amp;" name="tgtFilePath" default=""/>
                </function>
            </class>
            <class name="FileWizardPage" fullname="Utils::FileWizardPage" href="utils-filewizardpage.html" status="active" access="public" location="filewizardpage.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/filewizardpage.h" lineno="14" documented="true" bases="Utils::WizardPage" module="QtCreator" brief="Standard wizard page for a single file letting the user choose name and path">
                <function name="fileName" fullname="Utils::FileWizardPage::fileName" href="utils-filewizardpage.html#fileName-prop" status="active" access="public" location="filewizardpage.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/filewizardpage.h" lineno="24" meta="plain" const="true" associated-property="fileName" type="QString" signature="QString fileName() const"/>
                <function name="path" fullname="Utils::FileWizardPage::path" href="utils-filewizardpage.html#path-prop" status="active" access="public" location="filewizardpage.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/filewizardpage.h" lineno="25" meta="plain" const="true" associated-property="path" type="QString" signature="QString path() const"/>
                <function name="setFileName" fullname="Utils::FileWizardPage::setFileName" href="utils-filewizardpage.html#fileName-prop" status="active" access="public" location="filewizardpage.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/filewizardpage.h" lineno="48" meta="slot" associated-property="fileName" type="void" signature="void setFileName(const QString &amp;name)">
                    <parameter type="const QString &amp;" name="name" default=""/>
                </function>
                <function name="setPath" fullname="Utils::FileWizardPage::setPath" href="utils-filewizardpage.html#path-prop" status="active" access="public" location="filewizardpage.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/filewizardpage.h" lineno="47" meta="slot" associated-property="path" type="void" signature="void setPath(const QString &amp;path)">
                    <parameter type="const QString &amp;" name="path" default=""/>
                </function>
            </class>
            <class name="FutureSynchronizer" fullname="Utils::FutureSynchronizer" href="utils-futuresynchronizer.html" status="active" access="public" location="futuresynchronizer.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/futuresynchronizer.h" lineno="14" documented="true" module="QtCreator" brief="Enhanced version of QFutureSynchronizer"/>
            <class name="Guard" fullname="Utils::Guard" href="utils-guard.html" status="active" access="public" location="guard.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/guard.h" lineno="12" documented="true" module="QtCreator" brief="Implements a recursive guard with locking mechanism"/>
            <class name="HeaderViewStretcher" fullname="Utils::HeaderViewStretcher" href="utils-headerviewstretcher.html" status="active" access="public" location="headerviewstretcher.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/headerviewstretcher.h" lineno="16" documented="true" bases="QObject" module="QtCreator" brief="Fixes QHeaderView to resize all columns to contents, except one stretching column"/>
            <class name="Id" fullname="Utils::Id" href="utils-id.html" status="active" access="public" location="id.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/id.h" lineno="21" documented="true" module="QtCreator" brief="Encapsulates an identifier that is unique within a specific running Qt Creator process">
                <function name="Id" fullname="Utils::Id::Id" href="utils-id.html#Id-1" status="active" access="public" location="id.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/id.h" lineno="25" documented="true" meta="constructor" overload="true" overload-number="1" signature="Id(const char *name)">
                    <parameter type="const char *" name="name" default=""/>
                </function>
                <function name="fromName" fullname="Utils::Id::fromName" href="utils-id-obsolete.html#fromName" status="deprecated" access="public" location="id.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/id.h" lineno="49" documented="true" meta="plain" static="true" type="Utils::Id" signature="Utils::Id fromName(const QByteArray &amp;name)">
                    <parameter type="const QByteArray &amp;" name="name" default=""/>
                </function>
                <function name="fromSetting" fullname="Utils::Id::fromSetting" href="utils-id.html#fromSetting" status="active" access="public" location="id.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/id.h" lineno="50" documented="true" meta="plain" static="true" type="Utils::Id" signature="Utils::Id fromSetting(const QVariant &amp;variant)">
                    <parameter type="const QVariant &amp;" name="variant" default=""/>
                </function>
                <function name="fromString" fullname="Utils::Id::fromString" href="utils-id-obsolete.html#fromString" status="deprecated" access="public" location="id.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/id.h" lineno="48" documented="true" meta="plain" static="true" type="Utils::Id" signature="Utils::Id fromString(const QString &amp;name)">
                    <parameter type="const QString &amp;" name="name" default=""/>
                </function>
                <function name="name" fullname="Utils::Id::name" href="utils-id.html#name" status="active" access="public" location="id.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/id.h" lineno="33" documented="true" meta="plain" const="true" type="QByteArray" signature="QByteArray name() const"/>
                <function name="suffixAfter" fullname="Utils::Id::suffixAfter" href="utils-id.html#suffixAfter" status="active" access="public" location="id.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/id.h" lineno="37" documented="true" meta="plain" const="true" type="QString" signature="QString suffixAfter(Utils::Id baseId) const">
                    <parameter type="Utils::Id" name="baseId" default=""/>
                </function>
                <function name="toSetting" fullname="Utils::Id::toSetting" href="utils-id.html#toSetting" status="active" access="public" location="id.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/id.h" lineno="36" documented="true" meta="plain" const="true" type="QVariant" signature="QVariant toSetting() const"/>
                <function name="toString" fullname="Utils::Id::toString" href="utils-id.html#toString" status="active" access="public" location="id.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/id.h" lineno="34" documented="true" meta="plain" const="true" type="QString" signature="QString toString() const"/>
                <function name="withPrefix" fullname="Utils::Id::withPrefix" href="utils-id.html#withPrefix" status="active" access="public" location="id.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/id.h" lineno="31" documented="true" meta="plain" const="true" type="Utils::Id" signature="Utils::Id withPrefix(const char *prefix) const">
                    <parameter type="const char *" name="prefix" default=""/>
                </function>
                <function name="withSuffix" fullname="Utils::Id::withSuffix" href="utils-id.html#withSuffix" status="active" access="public" location="id.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/id.h" lineno="28" documented="true" meta="plain" const="true" type="Utils::Id" signature="Utils::Id withSuffix(int suffix) const">
                    <parameter type="int" name="suffix" default=""/>
                </function>
                <function name="withSuffix" fullname="Utils::Id::withSuffix" href="utils-id.html#withSuffix-1" status="active" access="public" location="id.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/id.h" lineno="29" documented="true" meta="plain" const="true" overload="true" overload-number="1" type="Utils::Id" signature="Utils::Id withSuffix(const char *suffix) const">
                    <parameter type="const char *" name="suffix" default=""/>
                </function>
                <function name="withSuffix" fullname="Utils::Id::withSuffix" href="utils-id.html#withSuffix-2" status="active" access="public" location="id.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/id.h" lineno="30" documented="true" meta="plain" const="true" overload="true" overload-number="2" type="Utils::Id" signature="Utils::Id withSuffix(const QString &amp;suffix) const">
                    <parameter type="const QString &amp;" name="suffix" default=""/>
                </function>
            </class>
            <class name="IntegerAspect" fullname="Utils::IntegerAspect" href="utils-integeraspect.html" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="725" documented="true" bases="Utils::TypedAspect" module="QtCreator" brief="An integer aspect is a integral property of some object, together with a description of its behavior for common operations like visualizing or persisting">
                <function name="addToLayout" fullname="Utils::IntegerAspect::addToLayout" href="utils-integeraspect.html#addToLayout" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="733" documented="true" meta="plain" virtual="virtual" override="true" type="void" signature="void addToLayout(Layouting::LayoutItem &amp;parent) override">
                    <parameter type="Layouting::LayoutItem &amp;" name="parent" default=""/>
                </function>
            </class>
            <class name="ListView" fullname="Utils::ListView" href="utils-listview.html" status="active" access="public" location="itemviews.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/itemviews.h" lineno="92" documented="true" bases="Utils::View" module="QtCreator" brief="Adds setActivationMode to QListView to allow for single click/double click behavior on platforms where the default is different. Use with care"/>
            <class name="ListWidget" fullname="Utils::ListWidget" href="utils-listwidget.html" status="active" access="public" location="itemviews.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/itemviews.h" lineno="98" documented="true" bases="Utils::View" module="QtCreator" brief="Adds setActivationMode to QListWidget to allow for single click/double click behavior on platforms where the default is different. Use with care"/>
            <class name="MacroExpander" fullname="Utils::MacroExpander" href="utils-macroexpander.html" status="active" access="public" location="macroexpander.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/macroexpander.h" lineno="22" documented="true" module="QtCreator" brief="Manages Qt Creator wide variables, that a user can enter into many string settings. The variables are replaced by an actual value when the string is used, similar to how environment variables are expanded by a shell">
                <contents name="variables" title="Variables" level="1"/>
                <contents name="providing-variable-values" title="Providing Variable Values" level="1"/>
                <contents name="providing-and-expanding-parametrized-strings" title="Providing and Expanding Parametrized Strings" level="1"/>
                <contents name="user-interface" title="User Interface" level="2"/>
                <contents name="expanding-strings" title="Expanding Strings" level="2"/>
                <function name="expand" fullname="Utils::MacroExpander::expand" href="utils-macroexpander.html#expand" status="active" access="public" location="macroexpander.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/macroexpander.h" lineno="34" documented="true" meta="plain" const="true" type="QString" signature="QString expand(const QString &amp;stringWithVariables) const">
                    <parameter type="const QString &amp;" name="stringWithVariables" default=""/>
                </function>
                <function name="registerFileVariables" fullname="Utils::MacroExpander::registerFileVariables" href="utils-macroexpander.html#registerFileVariables" status="active" access="public" location="macroexpander.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/macroexpander.h" lineno="57" documented="true" meta="plain" type="void" signature="void registerFileVariables(const QByteArray &amp;prefix, const QString &amp;heading, const Utils::MacroExpander::FileFunction &amp;base, bool visibleInChooser)">
                    <parameter type="const QByteArray &amp;" name="prefix" default=""/>
                    <parameter type="const QString &amp;" name="heading" default=""/>
                    <parameter type="const Utils::MacroExpander::FileFunction &amp;" name="base" default=""/>
                    <parameter type="bool" name="visibleInChooser" default="true"/>
                </function>
                <function name="registerIntVariable" fullname="Utils::MacroExpander::registerIntVariable" href="utils-macroexpander.html#registerIntVariable" status="active" access="public" location="macroexpander.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/macroexpander.h" lineno="54" documented="true" meta="plain" type="void" signature="void registerIntVariable(const QByteArray &amp;variable, const QString &amp;description, const Utils::MacroExpander::IntFunction &amp;value)">
                    <parameter type="const QByteArray &amp;" name="variable" default=""/>
                    <parameter type="const QString &amp;" name="description" default=""/>
                    <parameter type="const Utils::MacroExpander::IntFunction &amp;" name="value" default=""/>
                </function>
                <function name="registerPrefix" fullname="Utils::MacroExpander::registerPrefix" href="utils-macroexpander.html#registerPrefix" status="active" access="public" location="macroexpander.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/macroexpander.h" lineno="47" documented="true" meta="plain" type="void" signature="void registerPrefix(const QByteArray &amp;prefix, const QString &amp;description, const Utils::MacroExpander::PrefixFunction &amp;value, bool visible)">
                    <parameter type="const QByteArray &amp;" name="prefix" default=""/>
                    <parameter type="const QString &amp;" name="description" default=""/>
                    <parameter type="const Utils::MacroExpander::PrefixFunction &amp;" name="value" default=""/>
                    <parameter type="bool" name="visible" default="true"/>
                </function>
                <function name="registerVariable" fullname="Utils::MacroExpander::registerVariable" href="utils-macroexpander.html#registerVariable" status="active" access="public" location="macroexpander.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/macroexpander.h" lineno="50" documented="true" meta="plain" type="void" signature="void registerVariable(const QByteArray &amp;variable, const QString &amp;description, const Utils::MacroExpander::StringFunction &amp;value, bool visibleInChooser)">
                    <parameter type="const QByteArray &amp;" name="variable" default=""/>
                    <parameter type="const QString &amp;" name="description" default=""/>
                    <parameter type="const Utils::MacroExpander::StringFunction &amp;" name="value" default=""/>
                    <parameter type="bool" name="visibleInChooser" default="true"/>
                </function>
                <function name="value" fullname="Utils::MacroExpander::value" href="utils-macroexpander.html#value" status="active" access="public" location="macroexpander.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/macroexpander.h" lineno="32" documented="true" meta="plain" const="true" type="QString" signature="QString value(const QByteArray &amp;variable, bool *found) const">
                    <parameter type="const QByteArray &amp;" name="variable" default=""/>
                    <parameter type="bool *" name="found" default="nullptr"/>
                </function>
                <function name="variableDescription" fullname="Utils::MacroExpander::variableDescription" href="utils-macroexpander.html#variableDescription" status="active" access="public" location="macroexpander.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/macroexpander.h" lineno="64" documented="true" meta="plain" const="true" type="QString" signature="QString variableDescription(const QByteArray &amp;variable) const">
                    <parameter type="const QByteArray &amp;" name="variable" default=""/>
                </function>
                <function name="visibleVariables" fullname="Utils::MacroExpander::visibleVariables" href="utils-macroexpander.html#visibleVariables" status="active" access="public" location="macroexpander.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/macroexpander.h" lineno="63" documented="true" meta="plain" const="true" type="QList&lt;QByteArray&gt;" signature="QList&lt;QByteArray&gt; visibleVariables() const"/>
            </class>
            <namespace name="MathUtils" fullname="Utils::MathUtils" href="utils-mathutils.html" status="active" access="public" location="mathutils.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/mathutils.h" lineno="8" documented="true" module="QtCreator" brief="Contains functions for interpolation">
                <function name="interpolateExponential" fullname="Utils::MathUtils::interpolateExponential" href="utils-mathutils.html#interpolateExponential" status="active" access="public" location="mathutils.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/mathutils.h" lineno="12" documented="true" meta="plain" type="int" signature="int interpolateExponential(int x, int xHalfLife, int y1, int y2)">
                    <parameter type="int" name="x" default=""/>
                    <parameter type="int" name="xHalfLife" default=""/>
                    <parameter type="int" name="y1" default=""/>
                    <parameter type="int" name="y2" default=""/>
                </function>
                <function name="interpolateLinear" fullname="Utils::MathUtils::interpolateLinear" href="utils-mathutils.html#interpolateLinear" status="active" access="public" location="mathutils.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/mathutils.h" lineno="10" documented="true" meta="plain" type="int" signature="int interpolateLinear(int x, int x1, int x2, int y1, int y2)">
                    <parameter type="int" name="x" default=""/>
                    <parameter type="int" name="x1" default=""/>
                    <parameter type="int" name="x2" default=""/>
                    <parameter type="int" name="y1" default=""/>
                    <parameter type="int" name="y2" default=""/>
                </function>
                <function name="interpolateTangential" fullname="Utils::MathUtils::interpolateTangential" href="utils-mathutils.html#interpolateTangential" status="active" access="public" location="mathutils.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/mathutils.h" lineno="11" documented="true" meta="plain" type="int" signature="int interpolateTangential(int x, int xHalfLife, int y1, int y2)">
                    <parameter type="int" name="x" default=""/>
                    <parameter type="int" name="xHalfLife" default=""/>
                    <parameter type="int" name="y1" default=""/>
                    <parameter type="int" name="y2" default=""/>
                </function>
            </namespace>
            <class name="MultiSelectionAspect" fullname="Utils::MultiSelectionAspect" href="utils-multiselectionaspect.html" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="564" documented="true" bases="Utils::TypedAspect" module="QtCreator" brief="A multi-selection aspect represents one or more choices out of several">
                <function name="addToLayout" fullname="Utils::MultiSelectionAspect::addToLayout" href="utils-multiselectionaspect.html#addToLayout" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="572" documented="true" meta="plain" virtual="virtual" override="true" type="void" signature="void addToLayout(Layouting::LayoutItem &amp;builder) override">
                    <parameter type="Layouting::LayoutItem &amp;" name="builder" default=""/>
                </function>
            </class>
            <class name="NavigationTreeView" fullname="Utils::NavigationTreeView" href="utils-navigationtreeview.html" status="active" access="public" location="navigationtreeview.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/navigationtreeview.h" lineno="12" documented="true" bases="Utils::TreeView" module="QtCreator" brief="Implements a general TreeView for any sidebar widget"/>
            <class name="NetworkAccessManager" fullname="Utils::NetworkAccessManager" href="utils-networkaccessmanager.html" status="active" access="public" location="networkaccessmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/networkaccessmanager.h" lineno="12" documented="true" bases="QNetworkAccessManager" module="QtCreator" brief="Network access manager for use with Qt Creator">
                <function name="NetworkAccessManager" fullname="Utils::NetworkAccessManager::NetworkAccessManager" href="utils-networkaccessmanager.html#NetworkAccessManager" status="active" access="public" location="networkaccessmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/networkaccessmanager.h" lineno="15" documented="true" meta="constructor" signature="NetworkAccessManager(QObject *parent)">
                    <parameter type="QObject *" name="parent" default="nullptr"/>
                </function>
                <function name="createRequest" fullname="Utils::NetworkAccessManager::createRequest" href="utils-networkaccessmanager.html#createRequest" status="active" access="protected" location="networkaccessmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/networkaccessmanager.h" lineno="20" documented="true" meta="plain" virtual="virtual" override="true" type="QNetworkReply *" signature="QNetworkReply * createRequest(QNetworkAccessManager::Operation op, const QNetworkRequest &amp;request, QIODevice *outgoingData) override">
                    <parameter type="QNetworkAccessManager::Operation" name="op" default=""/>
                    <parameter type="const QNetworkRequest &amp;" name="request" default=""/>
                    <parameter type="QIODevice *" name="outgoingData" default=""/>
                </function>
                <function name="instance" fullname="Utils::NetworkAccessManager::instance" href="utils-networkaccessmanager.html#instance" status="active" access="public" location="networkaccessmanager.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/networkaccessmanager.h" lineno="17" documented="true" meta="plain" static="true" type="Utils::NetworkAccessManager *" signature="Utils::NetworkAccessManager * instance()"/>
            </class>
            <class name="OptionPushButton" fullname="Utils::OptionPushButton" href="utils-optionpushbutton.html" status="active" access="public" location="optionpushbutton.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/optionpushbutton.h" lineno="17" documented="true" bases="QPushButton" module="QtCreator" brief="Implements a QPushButton for which the menu is only opened if the user presses the menu indicator">
                <function name="OptionPushButton" fullname="Utils::OptionPushButton::OptionPushButton" href="utils-optionpushbutton.html#OptionPushButton" status="active" access="public" location="optionpushbutton.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/optionpushbutton.h" lineno="20" documented="true" meta="constructor" signature="OptionPushButton(QWidget *parent)">
                    <parameter type="QWidget *" name="parent" default="nullptr"/>
                </function>
                <function name="OptionPushButton" fullname="Utils::OptionPushButton::OptionPushButton" href="utils-optionpushbutton.html#OptionPushButton-1" status="active" access="public" location="optionpushbutton.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/optionpushbutton.h" lineno="21" documented="true" meta="constructor" overload="true" overload-number="1" signature="OptionPushButton(const QString &amp;text, QWidget *parent)">
                    <parameter type="const QString &amp;" name="text" default=""/>
                    <parameter type="QWidget *" name="parent" default="nullptr"/>
                </function>
                <function name="setOptionalMenu" fullname="Utils::OptionPushButton::setOptionalMenu" href="utils-optionpushbutton.html#setOptionalMenu" status="active" access="public" location="optionpushbutton.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/optionpushbutton.h" lineno="23" documented="true" meta="plain" type="void" signature="void setOptionalMenu(QMenu *menu)">
                    <parameter type="QMenu *" name="menu" default=""/>
                </function>
            </class>
            <class name="PathChooser" fullname="Utils::PathChooser" href="utils-pathchooser.html" status="active" access="public" location="pathchooser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/pathchooser.h" lineno="25" documented="true" bases="QWidget" module="QtCreator" brief="Control that lets the user choose a path. The control consist of a QLineEdit and a &quot;Browse&quot; button, and is optionally able to perform variable substitution">
                <function name="baseDirectory" fullname="Utils::PathChooser::baseDirectory" href="utils-pathchooser.html#baseDirectory-prop" status="active" access="public" location="pathchooser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/pathchooser.h" lineno="75" meta="plain" const="true" associated-property="baseDirectory" type="Utils::FilePath" signature="Utils::FilePath baseDirectory() const"/>
                <function name="commandVersionArguments" fullname="Utils::PathChooser::commandVersionArguments" href="utils-pathchooser.html#commandVersionArguments-prop" status="active" access="public" location="pathchooser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/pathchooser.h" lineno="99" meta="plain" const="true" associated-property="commandVersionArguments" type="QStringList" signature="QStringList commandVersionArguments() const"/>
                <function name="expectedKind" fullname="Utils::PathChooser::expectedKind" href="utils-pathchooser.html#expectedKind" status="active" access="public" location="pathchooser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/pathchooser.h" lineno="57" documented="true" meta="plain" const="true" associated-property="expectedKind" type="Utils::PathChooser::Kind" signature="Utils::PathChooser::Kind expectedKind() const"/>
                <function name="filePath" fullname="Utils::PathChooser::filePath" href="utils-pathchooser.html#filePath-prop" status="active" access="public" location="pathchooser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/pathchooser.h" lineno="70" meta="plain" const="true" associated-property="filePath" type="Utils::FilePath" signature="Utils::FilePath filePath() const"/>
                <function name="isReadOnly" fullname="Utils::PathChooser::isReadOnly" href="utils-pathchooser.html#readOnly-prop" status="active" access="public" location="pathchooser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/pathchooser.h" lineno="115" meta="plain" const="true" associated-property="readOnly" type="bool" signature="bool isReadOnly() const"/>
                <function name="promptDialogFilter" fullname="Utils::PathChooser::promptDialogFilter" href="utils-pathchooser.html#promptDialogFilter-prop" status="active" access="public" location="pathchooser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/pathchooser.h" lineno="63" meta="plain" const="true" associated-property="promptDialogFilter" type="QString" signature="QString promptDialogFilter() const"/>
                <function name="promptDialogTitle" fullname="Utils::PathChooser::promptDialogTitle" href="utils-pathchooser.html#promptDialogTitle-prop" status="active" access="public" location="pathchooser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/pathchooser.h" lineno="60" meta="plain" const="true" associated-property="promptDialogTitle" type="QString" signature="QString promptDialogTitle() const"/>
                <function name="setBaseDirectory" fullname="Utils::PathChooser::setBaseDirectory" href="utils-pathchooser.html#baseDirectory-prop" status="active" access="public" location="pathchooser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/pathchooser.h" lineno="76" meta="plain" associated-property="baseDirectory" type="void" signature="void setBaseDirectory(const Utils::FilePath &amp;base)">
                    <parameter type="const Utils::FilePath &amp;" name="base" default=""/>
                </function>
                <function name="setCommandVersionArguments" fullname="Utils::PathChooser::setCommandVersionArguments" href="utils-pathchooser.html#commandVersionArguments-prop" status="active" access="public" location="pathchooser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/pathchooser.h" lineno="100" meta="plain" associated-property="commandVersionArguments" type="void" signature="void setCommandVersionArguments(const QStringList &amp;arguments)">
                    <parameter type="const QStringList &amp;" name="arguments" default=""/>
                </function>
                <function name="setExpectedKind" fullname="Utils::PathChooser::setExpectedKind" href="utils-pathchooser.html#setExpectedKind" status="active" access="public" location="pathchooser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/pathchooser.h" lineno="56" documented="true" meta="plain" associated-property="expectedKind" type="void" signature="void setExpectedKind(Utils::PathChooser::Kind expected)">
                    <parameter type="Utils::PathChooser::Kind" name="expected" default=""/>
                </function>
                <function name="setFilePath" fullname="Utils::PathChooser::setFilePath" href="utils-pathchooser.html#filePath-prop" status="active" access="public" location="pathchooser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/pathchooser.h" lineno="140" meta="slot" associated-property="filePath" type="void" signature="void setFilePath(const Utils::FilePath &amp;)">
                    <parameter type="const Utils::FilePath &amp;" name="" default=""/>
                </function>
                <function name="setPath" fullname="Utils::PathChooser::setPath" href="utils-pathchooser.html#path-prop" status="active" access="public" location="pathchooser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/pathchooser.h" lineno="139" meta="slot" associated-property="path" type="void" signature="void setPath(const QString &amp;)">
                    <parameter type="const QString &amp;" name="" default=""/>
                </function>
                <function name="setPromptDialogFilter" fullname="Utils::PathChooser::setPromptDialogFilter" href="utils-pathchooser.html#promptDialogFilter-prop" status="active" access="public" location="pathchooser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/pathchooser.h" lineno="62" meta="plain" associated-property="promptDialogFilter" type="void" signature="void setPromptDialogFilter(const QString &amp;filter)">
                    <parameter type="const QString &amp;" name="filter" default=""/>
                </function>
                <function name="setPromptDialogTitle" fullname="Utils::PathChooser::setPromptDialogTitle" href="utils-pathchooser.html#promptDialogTitle-prop" status="active" access="public" location="pathchooser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/pathchooser.h" lineno="59" meta="plain" associated-property="promptDialogTitle" type="void" signature="void setPromptDialogTitle(const QString &amp;title)">
                    <parameter type="const QString &amp;" name="title" default=""/>
                </function>
                <function name="setReadOnly" fullname="Utils::PathChooser::setReadOnly" href="utils-pathchooser.html#readOnly-prop" status="active" access="public" location="pathchooser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/pathchooser.h" lineno="116" meta="plain" associated-property="readOnly" type="void" signature="void setReadOnly(bool b)">
                    <parameter type="bool" name="b" default=""/>
                </function>
                <function name="textChanged" fullname="Utils::PathChooser::textChanged" href="utils-pathchooser.html#path-prop" status="active" access="public" location="pathchooser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/pathchooser.h" lineno="145" meta="signal" associated-property="path" type="void" signature="void textChanged(const QString &amp;text)">
                    <parameter type="const QString &amp;" name="text" default=""/>
                </function>
                <enum name="Kind" fullname="Utils::PathChooser::Kind" href="utils-pathchooser.html#Kind-enum" status="active" access="public" location="pathchooser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/pathchooser.h" lineno="44" documented="true">
                    <value name="ExistingDirectory" value="0"/>
                    <value name="Directory" value="1"/>
                    <value name="File" value="2"/>
                    <value name="SaveFile" value="3"/>
                    <value name="ExistingCommand" value="4"/>
                    <value name="Command" value="5"/>
                    <value name="Any" value="6"/>
                </enum>
            </class>
            <class name="PathListEditor" fullname="Utils::PathListEditor" href="utils-pathlisteditor.html" status="active" access="public" location="pathlisteditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/pathlisteditor.h" lineno="20" documented="true" bases="QWidget" module="QtCreator" brief="Control that lets the user edit a list of (directory) paths using the platform separator (';',':')">
                <function name="fileDialogTitle" fullname="Utils::PathListEditor::fileDialogTitle" href="utils-pathlisteditor.html#fileDialogTitle-prop" status="active" access="public" location="pathlisteditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/pathlisteditor.h" lineno="32" meta="plain" const="true" associated-property="fileDialogTitle" type="QString" signature="QString fileDialogTitle() const"/>
                <function name="pathList" fullname="Utils::PathListEditor::pathList" href="utils-pathlisteditor.html#pathList-prop" status="active" access="public" location="pathlisteditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/pathlisteditor.h" lineno="31" meta="plain" const="true" associated-property="pathList" type="QStringList" signature="QStringList pathList() const"/>
                <function name="setFileDialogTitle" fullname="Utils::PathListEditor::setFileDialogTitle" href="utils-pathlisteditor.html#fileDialogTitle-prop" status="active" access="public" location="pathlisteditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/pathlisteditor.h" lineno="37" meta="plain" associated-property="fileDialogTitle" type="void" signature="void setFileDialogTitle(const QString &amp;l)">
                    <parameter type="const QString &amp;" name="l" default=""/>
                </function>
                <function name="setPathList" fullname="Utils::PathListEditor::setPathList" href="utils-pathlisteditor.html#pathList-prop" status="active" access="public" location="pathlisteditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/pathlisteditor.h" lineno="35" meta="plain" associated-property="pathList" type="void" signature="void setPathList(const QStringList &amp;l)">
                    <parameter type="const QStringList &amp;" name="l" default=""/>
                </function>
                <function name="setPathList" fullname="Utils::PathListEditor::setPathList" href="utils-pathlisteditor.html#pathList-prop" status="active" access="public" location="pathlisteditor.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/pathlisteditor.h" lineno="36" meta="plain" overload="true" overload-number="1" associated-property="pathList" type="void" signature="void setPathList(const QString &amp;pathString)">
                    <parameter type="const QString &amp;" name="pathString" default=""/>
                </function>
            </class>
            <class name="PersistentSettingsReader" fullname="Utils::PersistentSettingsReader" href="utils-persistentsettingsreader.html" status="active" access="public" location="persistentsettings.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/persistentsettings.h" lineno="19" documented="true" module="QtCreator" brief="Reads a QVariantMap of arbitrary, nested data structures from an XML file"/>
            <class name="PersistentSettingsWriter" fullname="Utils::PersistentSettingsWriter" href="utils-persistentsettingswriter.html" status="active" access="public" location="persistentsettings.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/persistentsettings.h" lineno="33" documented="true" module="QtCreator" brief="Serializes a Store of arbitrary, nested data structures to an XML file"/>
            <class name="Port" fullname="Utils::Port" href="utils-port.html" status="active" access="public" location="port.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/port.h" lineno="14" documented="true" module="QtCreator" brief="Implements a wrapper around a 16 bit port number to be used in conjunction with IP addresses"/>
            <class name="Process" fullname="Utils::Process" href="utils-process.html" status="active" access="public" location="process.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/process.h" lineno="36" documented="true" bases="QObject" module="QtCreator" brief="Functionality for with processes"/>
            <class name="ProcessArgs" fullname="Utils::ProcessArgs" href="utils-processargs.html" status="active" access="public" location="commandline.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/commandline.h" lineno="21" documented="true" module="QtCreator" brief="Functionality for dealing with shell-quoted process arguments"/>
            <class name="ProcessHandle" fullname="Utils::ProcessHandle" href="utils-processhandle.html" status="active" access="public" location="processhandle.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/processhandle.h" lineno="12" documented="true" module="QtCreator" brief="Helper class to describe a process"/>
            <class name="ProgressIndicator" fullname="Utils::ProgressIndicator" href="utils-progressindicator.html" status="active" access="public" location="progressindicator.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/progressindicator.h" lineno="56" documented="true" bases="Utils::OverlayWidget" module="Qt Creator" brief="Shows an circular, endlessly animated progress indicator">
                <function name="ProgressIndicator" fullname="Utils::ProgressIndicator::ProgressIndicator" href="utils-progressindicator.html#ProgressIndicator" status="active" access="public" location="progressindicator.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/progressindicator.h" lineno="59" documented="true" meta="constructor" explicit="true" signature="ProgressIndicator(Utils::ProgressIndicatorSize size, QWidget *parent)">
                    <parameter type="Utils::ProgressIndicatorSize" name="size" default=""/>
                    <parameter type="QWidget *" name="parent" default="nullptr"/>
                </function>
                <function name="setIndicatorSize" fullname="Utils::ProgressIndicator::setIndicatorSize" href="utils-progressindicator.html#setIndicatorSize" status="active" access="public" location="progressindicator.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/progressindicator.h" lineno="61" documented="true" meta="plain" type="void" signature="void setIndicatorSize(Utils::ProgressIndicatorSize size)">
                    <parameter type="Utils::ProgressIndicatorSize" name="size" default=""/>
                </function>
                <function name="sizeHint" fullname="Utils::ProgressIndicator::sizeHint" href="utils-progressindicator.html#sizeHint" status="active" access="public" location="progressindicator.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/progressindicator.h" lineno="63" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="QSize" signature="QSize sizeHint() const override"/>
            </class>
            <class name="ProgressIndicatorPainter" fullname="Utils::ProgressIndicatorPainter" href="utils-progressindicatorpainter.html" status="active" access="public" location="progressindicator.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/progressindicator.h" lineno="24" documented="true" module="Qt Creator" brief="The painting backend for the ProgressIndicator class">
                <function name="ProgressIndicatorPainter" fullname="Utils::ProgressIndicatorPainter::ProgressIndicatorPainter" href="utils-progressindicatorpainter.html#ProgressIndicatorPainter" status="active" access="public" location="progressindicator.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/progressindicator.h" lineno="29" documented="true" meta="constructor" signature="ProgressIndicatorPainter(Utils::ProgressIndicatorSize size)">
                    <parameter type="Utils::ProgressIndicatorSize" name="size" default=""/>
                </function>
                <function name="indicatorSize" fullname="Utils::ProgressIndicatorPainter::indicatorSize" href="utils-progressindicatorpainter.html#indicatorSize" status="active" access="public" location="progressindicator.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/progressindicator.h" lineno="33" documented="true" meta="plain" const="true" type="Utils::ProgressIndicatorSize" signature="Utils::ProgressIndicatorSize indicatorSize() const"/>
                <function name="paint" fullname="Utils::ProgressIndicatorPainter::paint" href="utils-progressindicatorpainter.html#paint" status="active" access="public" location="progressindicator.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/progressindicator.h" lineno="39" documented="true" meta="plain" const="true" type="void" signature="void paint(QPainter &amp;painter, const QRect &amp;rect) const">
                    <parameter type="QPainter &amp;" name="painter" default=""/>
                    <parameter type="const QRect &amp;" name="rect" default=""/>
                </function>
                <function name="setIndicatorSize" fullname="Utils::ProgressIndicatorPainter::setIndicatorSize" href="utils-progressindicatorpainter.html#setIndicatorSize" status="active" access="public" location="progressindicator.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/progressindicator.h" lineno="32" documented="true" meta="plain" type="void" signature="void setIndicatorSize(Utils::ProgressIndicatorSize size)">
                    <parameter type="Utils::ProgressIndicatorSize" name="size" default=""/>
                </function>
                <function name="setUpdateCallback" fullname="Utils::ProgressIndicatorPainter::setUpdateCallback" href="utils-progressindicatorpainter.html#setUpdateCallback" status="active" access="public" location="progressindicator.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/progressindicator.h" lineno="35" documented="true" meta="plain" type="void" signature="void setUpdateCallback(const Utils::ProgressIndicatorPainter::UpdateCallback &amp;cb)">
                    <parameter type="const Utils::ProgressIndicatorPainter::UpdateCallback &amp;" name="cb" default=""/>
                </function>
                <function name="size" fullname="Utils::ProgressIndicatorPainter::size" href="utils-progressindicatorpainter.html#size" status="active" access="public" location="progressindicator.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/progressindicator.h" lineno="37" documented="true" meta="plain" const="true" type="QSize" signature="QSize size() const"/>
                <function name="startAnimation" fullname="Utils::ProgressIndicatorPainter::startAnimation" href="utils-progressindicatorpainter.html#startAnimation" status="active" access="public" location="progressindicator.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/progressindicator.h" lineno="41" documented="true" meta="plain" type="void" signature="void startAnimation()"/>
                <function name="stopAnimation" fullname="Utils::ProgressIndicatorPainter::stopAnimation" href="utils-progressindicatorpainter.html#stopAnimation" status="active" access="public" location="progressindicator.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/progressindicator.h" lineno="42" documented="true" meta="plain" type="void" signature="void stopAnimation()"/>
            </class>
            <class name="ProjectIntroPage" fullname="Utils::ProjectIntroPage" href="utils-projectintropage.html" status="active" access="public" location="projectintropage.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/projectintropage.h" lineno="14" documented="true" bases="Utils::WizardPage" module="QtCreator" brief="The standard wizard page for a project, letting the user choose its name and path">
                <function name="description" fullname="Utils::ProjectIntroPage::description" href="utils-projectintropage.html#description-prop" status="active" access="public" location="projectintropage.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/projectintropage.h" lineno="29" meta="plain" const="true" associated-property="description" type="QString" signature="QString description() const"/>
                <function name="filePath" fullname="Utils::ProjectIntroPage::filePath" href="utils-projectintropage.html#filePath-prop" status="active" access="public" location="projectintropage.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/projectintropage.h" lineno="28" meta="plain" const="true" associated-property="filePath" type="Utils::FilePath" signature="Utils::FilePath filePath() const"/>
                <function name="forceSubProject" fullname="Utils::ProjectIntroPage::forceSubProject" href="utils-projectintropage.html#forceSubProject-prop" status="active" access="public" location="projectintropage.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/projectintropage.h" lineno="34" meta="plain" const="true" associated-property="forceSubProject" type="bool" signature="bool forceSubProject() const"/>
                <function name="projectName" fullname="Utils::ProjectIntroPage::projectName" href="utils-projectintropage.html#projectName-prop" status="active" access="public" location="projectintropage.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/projectintropage.h" lineno="27" meta="plain" const="true" associated-property="projectName" type="QString" signature="QString projectName() const"/>
                <function name="setDescription" fullname="Utils::ProjectIntroPage::setDescription" href="utils-projectintropage.html#description-prop" status="active" access="public" location="projectintropage.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/projectintropage.h" lineno="54" meta="slot" associated-property="description" type="void" signature="void setDescription(const QString &amp;description)">
                    <parameter type="const QString &amp;" name="description" default=""/>
                </function>
                <function name="setFilePath" fullname="Utils::ProjectIntroPage::setFilePath" href="utils-projectintropage.html#filePath-prop" status="active" access="public" location="projectintropage.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/projectintropage.h" lineno="52" meta="slot" associated-property="filePath" type="void" signature="void setFilePath(const Utils::FilePath &amp;path)">
                    <parameter type="const Utils::FilePath &amp;" name="path" default=""/>
                </function>
                <function name="setForceSubProject" fullname="Utils::ProjectIntroPage::setForceSubProject" href="utils-projectintropage.html#forceSubProject-prop" status="active" access="public" location="projectintropage.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/projectintropage.h" lineno="35" meta="plain" associated-property="forceSubProject" type="void" signature="void setForceSubProject(bool force)">
                    <parameter type="bool" name="force" default=""/>
                </function>
                <function name="setProjectName" fullname="Utils::ProjectIntroPage::setProjectName" href="utils-projectintropage.html#projectName-prop" status="active" access="public" location="projectintropage.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/projectintropage.h" lineno="53" meta="slot" associated-property="projectName" type="void" signature="void setProjectName(const QString &amp;name)">
                    <parameter type="const QString &amp;" name="name" default=""/>
                </function>
                <function name="setUseAsDefaultPath" fullname="Utils::ProjectIntroPage::setUseAsDefaultPath" href="utils-projectintropage.html#useAsDefaultPath-prop" status="active" access="public" location="projectintropage.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/projectintropage.h" lineno="55" meta="slot" associated-property="useAsDefaultPath" type="void" signature="void setUseAsDefaultPath(bool u)">
                    <parameter type="bool" name="u" default=""/>
                </function>
                <function name="useAsDefaultPath" fullname="Utils::ProjectIntroPage::useAsDefaultPath" href="utils-projectintropage.html#useAsDefaultPath-prop" status="active" access="public" location="projectintropage.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/projectintropage.h" lineno="30" meta="plain" const="true" associated-property="useAsDefaultPath" type="bool" signature="bool useAsDefaultPath() const"/>
            </class>
            <class name="QrcCache" fullname="Utils::QrcCache" href="utils-qrccache.html" status="active" access="public" location="qrcparser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/qrcparser.h" lineno="62" documented="true" module="QtCreator" brief="Caches the contents of parsed QRC files">
                <function name="addPath" fullname="Utils::QrcCache::addPath" href="utils-qrccache.html#addPath" status="active" access="public" location="qrcparser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/qrcparser.h" lineno="67" documented="true" meta="plain" type="QrcParser::ConstPtr" signature="QrcParser::ConstPtr addPath(const QString &amp;path, const QString &amp;contents)">
                    <parameter type="const QString &amp;" name="path" default=""/>
                    <parameter type="const QString &amp;" name="contents" default=""/>
                </function>
                <function name="clear" fullname="Utils::QrcCache::clear" href="utils-qrccache.html#clear" status="active" access="public" location="qrcparser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/qrcparser.h" lineno="71" documented="true" meta="plain" type="void" signature="void clear()"/>
                <function name="parsedPath" fullname="Utils::QrcCache::parsedPath" href="utils-qrccache.html#parsedPath" status="active" access="public" location="qrcparser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/qrcparser.h" lineno="70" documented="true" meta="plain" type="QrcParser::ConstPtr" signature="QrcParser::ConstPtr parsedPath(const QString &amp;path)">
                    <parameter type="const QString &amp;" name="path" default=""/>
                </function>
                <function name="removePath" fullname="Utils::QrcCache::removePath" href="utils-qrccache.html#removePath" status="active" access="public" location="qrcparser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/qrcparser.h" lineno="68" documented="true" meta="plain" type="void" signature="void removePath(const QString &amp;path)">
                    <parameter type="const QString &amp;" name="path" default=""/>
                </function>
                <function name="updatePath" fullname="Utils::QrcCache::updatePath" href="utils-qrccache.html#updatePath" status="active" access="public" location="qrcparser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/qrcparser.h" lineno="69" documented="true" meta="plain" type="QrcParser::ConstPtr" signature="QrcParser::ConstPtr updatePath(const QString &amp;path, const QString &amp;contents)">
                    <parameter type="const QString &amp;" name="path" default=""/>
                    <parameter type="const QString &amp;" name="contents" default=""/>
                </function>
            </class>
            <class name="QrcParser" fullname="Utils::QrcParser" href="utils-qrcparser.html" status="active" access="public" location="qrcparser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/qrcparser.h" lineno="25" documented="true" module="QtCreator" brief="Parses one or more QRC files and keeps their content cached">
                <function name="collectFilesAtPath" fullname="Utils::QrcParser::collectFilesAtPath" href="utils-qrcparser.html#collectFilesAtPath" status="active" access="public" location="qrcparser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/qrcparser.h" lineno="40" documented="true" meta="plain" const="true" type="void" signature="void collectFilesAtPath(const QString &amp;path, QStringList *res, const QLocale *locale) const">
                    <parameter type="const QString &amp;" name="path" default=""/>
                    <parameter type="QStringList *" name="res" default=""/>
                    <parameter type="const QLocale *" name="locale" default="nullptr"/>
                </function>
                <function name="collectFilesInPath" fullname="Utils::QrcParser::collectFilesInPath" href="utils-qrcparser.html#collectFilesInPath" status="active" access="public" location="qrcparser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/qrcparser.h" lineno="43" documented="true" meta="plain" const="true" type="void" signature="void collectFilesInPath(const QString &amp;path, QMap&lt;QString, QStringList&gt; *res, bool addDirs, const QLocale *locale) const">
                    <parameter type="const QString &amp;" name="path" default=""/>
                    <parameter type="QMap&lt;QString, QStringList&gt; *" name="res" default=""/>
                    <parameter type="bool" name="addDirs" default="false"/>
                    <parameter type="const QLocale *" name="locale" default="nullptr"/>
                </function>
                <function name="collectResourceFilesForSourceFile" fullname="Utils::QrcParser::collectResourceFilesForSourceFile" href="utils-qrcparser.html#collectResourceFilesForSourceFile" status="active" access="public" location="qrcparser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/qrcparser.h" lineno="45" documented="true" meta="plain" const="true" type="void" signature="void collectResourceFilesForSourceFile(const QString &amp;sourceFile, QStringList *res, const QLocale *locale) const">
                    <parameter type="const QString &amp;" name="sourceFile" default=""/>
                    <parameter type="QStringList *" name="res" default=""/>
                    <parameter type="const QLocale *" name="locale" default="nullptr"/>
                </function>
                <function name="errorMessages" fullname="Utils::QrcParser::errorMessages" href="utils-qrcparser.html#errorMessages" status="active" access="public" location="qrcparser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/qrcparser.h" lineno="48" documented="true" meta="plain" const="true" type="QStringList" signature="QStringList errorMessages() const"/>
                <function name="firstFileAtPath" fullname="Utils::QrcParser::firstFileAtPath" href="utils-qrcparser.html#firstFileAtPath" status="active" access="public" location="qrcparser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/qrcparser.h" lineno="39" documented="true" meta="plain" const="true" type="QString" signature="QString firstFileAtPath(const QString &amp;path, const QLocale &amp;locale) const">
                    <parameter type="const QString &amp;" name="path" default=""/>
                    <parameter type="const QLocale &amp;" name="locale" default=""/>
                </function>
                <function name="hasDirAtPath" fullname="Utils::QrcParser::hasDirAtPath" href="utils-qrcparser.html#hasDirAtPath" status="active" access="public" location="qrcparser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/qrcparser.h" lineno="42" documented="true" meta="plain" const="true" type="bool" signature="bool hasDirAtPath(const QString &amp;path, const QLocale *locale) const">
                    <parameter type="const QString &amp;" name="path" default=""/>
                    <parameter type="const QLocale *" name="locale" default="nullptr"/>
                </function>
                <function name="isValid" fullname="Utils::QrcParser::isValid" href="utils-qrcparser.html#isValid" status="active" access="public" location="qrcparser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/qrcparser.h" lineno="50" documented="true" meta="plain" const="true" type="bool" signature="bool isValid() const"/>
                <function name="languages" fullname="Utils::QrcParser::languages" href="utils-qrcparser.html#languages" status="active" access="public" location="qrcparser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/qrcparser.h" lineno="49" documented="true" meta="plain" const="true" type="QStringList" signature="QStringList languages() const"/>
                <function name="normalizedQrcDirectoryPath" fullname="Utils::QrcParser::normalizedQrcDirectoryPath" href="utils-qrcparser.html#normalizedQrcDirectoryPath" status="active" access="public" location="qrcparser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/qrcparser.h" lineno="54" documented="true" meta="plain" static="true" type="QString" signature="QString normalizedQrcDirectoryPath(const QString &amp;path)">
                    <parameter type="const QString &amp;" name="path" default=""/>
                </function>
                <function name="normalizedQrcFilePath" fullname="Utils::QrcParser::normalizedQrcFilePath" href="utils-qrcparser.html#normalizedQrcFilePath" status="active" access="public" location="qrcparser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/qrcparser.h" lineno="53" documented="true" meta="plain" static="true" type="QString" signature="QString normalizedQrcFilePath(const QString &amp;path)">
                    <parameter type="const QString &amp;" name="path" default=""/>
                </function>
                <function name="parseFile" fullname="Utils::QrcParser::parseFile" href="utils-qrcparser.html#parseFile" status="active" access="public" location="qrcparser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/qrcparser.h" lineno="38" documented="true" meta="plain" type="bool" signature="bool parseFile(const QString &amp;path, const QString &amp;contents)">
                    <parameter type="const QString &amp;" name="path" default=""/>
                    <parameter type="const QString &amp;" name="contents" default=""/>
                </function>
                <function name="parseQrcFile" fullname="Utils::QrcParser::parseQrcFile" href="utils-qrcparser.html#parseQrcFile" status="active" access="public" location="qrcparser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/qrcparser.h" lineno="52" documented="true" meta="plain" static="true" type="Utils::QrcParser::Ptr" signature="Utils::QrcParser::Ptr parseQrcFile(const QString &amp;path, const QString &amp;contents)">
                    <parameter type="const QString &amp;" name="path" default=""/>
                    <parameter type="const QString &amp;" name="contents" default=""/>
                </function>
                <function name="qrcDirectoryPathForQrcFilePath" fullname="Utils::QrcParser::qrcDirectoryPathForQrcFilePath" href="utils-qrcparser.html#qrcDirectoryPathForQrcFilePath" status="active" access="public" location="qrcparser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/qrcparser.h" lineno="55" documented="true" meta="plain" static="true" type="QString" signature="QString qrcDirectoryPathForQrcFilePath(const QString &amp;file)">
                    <parameter type="const QString &amp;" name="file" default=""/>
                </function>
                <typedef name="ConstPtr" fullname="Utils::QrcParser::ConstPtr" href="utils-qrcparser.html#ConstPtr-typedef" status="active" access="public" location="qrcparser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/qrcparser.h" lineno="36" documented="true" aliasedtype="std::shared_ptr&lt;const QrcParser&gt;"/>
                <typedef name="Ptr" fullname="Utils::QrcParser::Ptr" href="utils-qrcparser.html#Ptr-typedef" status="active" access="public" location="qrcparser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/qrcparser.h" lineno="35" documented="true" aliasedtype="std::shared_ptr&lt;QrcParser&gt;"/>
            </class>
            <class name="QtcSettings" fullname="Utils::QtcSettings" href="utils-qtcsettings.html" status="active" access="public" location="qtcsettings.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/qtcsettings.h" lineno="14" documented="true" bases="QSettings" module="QtCreator" brief="Extension of the QSettings class the uses Utils::Key instead of QString for keys"/>
            <class name="SelectionAspect" fullname="Utils::SelectionAspect" href="utils-selectionaspect.html" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="516" documented="true" bases="Utils::TypedAspect" module="QtCreator" brief="A selection aspect represents a specific choice out of several">
                <function name="addToLayout" fullname="Utils::SelectionAspect::addToLayout" href="utils-selectionaspect.html#addToLayout" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="524" documented="true" meta="plain" virtual="virtual" override="true" type="void" signature="void addToLayout(Layouting::LayoutItem &amp;parent) override">
                    <parameter type="Layouting::LayoutItem &amp;" name="parent" default=""/>
                </function>
            </class>
            <class name="StatusLabel" fullname="Utils::StatusLabel" href="utils-statuslabel.html" status="active" access="public" location="statuslabel.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/statuslabel.h" lineno="16" documented="true" bases="QLabel" module="QtCreator" brief="Displays messages for a while with a timeout"/>
            <class name="StringAspect" fullname="Utils::StringAspect" href="utils-stringaspect.html" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="591" documented="true" bases="Utils::TypedAspect" module="QtCreator" brief="A string aspect is a string-like property of some object, together with a description of its behavior for common operations like visualizing or persisting">
                <function name="StringAspect" fullname="Utils::StringAspect::StringAspect" href="utils-stringaspect.html#StringAspect" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="596" documented="true" meta="constructor" signature="StringAspect(Utils::AspectContainer *container)">
                    <parameter type="Utils::AspectContainer *" name="container" default="nullptr"/>
                </function>
                <function name="fromMap" fullname="Utils::StringAspect::fromMap" href="utils-stringaspect.html#fromMap" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="632" documented="true" meta="plain" virtual="virtual" override="true" type="void" signature="void fromMap(const Utils::Store &amp;map) override">
                    <parameter type="const Utils::Store &amp;" name="map" default=""/>
                </function>
                <function name="makeCheckable" fullname="Utils::StringAspect::makeCheckable" href="utils-stringaspect.html#makeCheckable" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="620" documented="true" meta="plain" type="void" signature="void makeCheckable(Utils::CheckBoxPlacement checkBoxPlacement, const QString &amp;checkerLabel, const Utils::Key &amp;checkerKey)">
                    <parameter type="Utils::CheckBoxPlacement" name="checkBoxPlacement" default=""/>
                    <parameter type="const QString &amp;" name="checkerLabel" default=""/>
                    <parameter type="const Utils::Key &amp;" name="checkerKey" default=""/>
                </function>
                <function name="setDisplayFilter" fullname="Utils::StringAspect::setDisplayFilter" href="utils-stringaspect.html#setDisplayFilter" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="609" documented="true" meta="plain" type="void" signature="void setDisplayFilter(const std::function&lt;QString (const QString &amp;)&gt; &amp;displayFilter)">
                    <parameter type="const std::function&lt;QString (const QString &amp;)&gt; &amp;" name="displayFilter" default=""/>
                </function>
                <function name="setDisplayStyle" fullname="Utils::StringAspect::setDisplayStyle" href="utils-stringaspect.html#setDisplayStyle" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="630" documented="true" meta="plain" type="void" signature="void setDisplayStyle(Utils::StringAspect::DisplayStyle displayStyle)">
                    <parameter type="Utils::StringAspect::DisplayStyle" name="displayStyle" default=""/>
                </function>
                <function name="setElideMode" fullname="Utils::StringAspect::setElideMode" href="utils-stringaspect.html#setElideMode" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="618" documented="true" meta="plain" type="void" signature="void setElideMode(Qt::TextElideMode elideMode)">
                    <parameter type="Qt::TextElideMode" name="elideMode" default=""/>
                </function>
                <function name="setHistoryCompleter" fullname="Utils::StringAspect::setHistoryCompleter" href="utils-stringaspect.html#setHistoryCompleter" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="611" documented="true" meta="plain" type="void" signature="void setHistoryCompleter(const Utils::Key &amp;historyCompleterKey)">
                    <parameter type="const Utils::Key &amp;" name="historyCompleterKey" default=""/>
                </function>
                <function name="setPlaceHolderText" fullname="Utils::StringAspect::setPlaceHolderText" href="utils-stringaspect.html#setPlaceHolderText" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="610" documented="true" meta="plain" type="void" signature="void setPlaceHolderText(const QString &amp;placeHolderText)">
                    <parameter type="const QString &amp;" name="placeHolderText" default=""/>
                </function>
                <function name="toMap" fullname="Utils::StringAspect::toMap" href="utils-stringaspect.html#toMap" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="633" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="void" signature="void toMap(Utils::Store &amp;map) const override">
                    <parameter type="Utils::Store &amp;" name="map" default=""/>
                </function>
                <enum name="DisplayStyle" fullname="Utils::StringAspect::DisplayStyle" href="utils-stringaspect.html#DisplayStyle-enum" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="624" documented="true">
                    <value name="LabelDisplay" value="0"/>
                    <value name="LineEditDisplay" value="1"/>
                    <value name="TextEditDisplay" value="2"/>
                    <value name="PasswordLineEditDisplay" value="3"/>
                </enum>
            </class>
            <class name="StringListAspect" fullname="Utils::StringListAspect" href="utils-stringlistaspect.html" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="827" documented="true" bases="Utils::TypedAspect" module="QtCreator" brief="A string list aspect represents a property of some object that is a list of strings">
                <function name="addToLayout" fullname="Utils::StringListAspect::addToLayout" href="utils-stringlistaspect.html#addToLayout" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="835" documented="true" meta="plain" virtual="virtual" override="true" type="void" signature="void addToLayout(Layouting::LayoutItem &amp;parent) override">
                    <parameter type="Layouting::LayoutItem &amp;" name="parent" default=""/>
                </function>
            </class>
            <class name="TextDisplay" fullname="Utils::TextDisplay" href="utils-textdisplay.html" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="882" documented="true" bases="Utils::BaseAspect" module="QtCreator" brief="A text display is a phony aspect with the sole purpose of providing some text display using an Utils::InfoLabel in places where otherwise more expensive Utils::StringAspect items would be used">
                <function name="TextDisplay" fullname="Utils::TextDisplay::TextDisplay" href="utils-textdisplay.html#TextDisplay" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="887" documented="true" meta="constructor" explicit="true" signature="TextDisplay(Utils::AspectContainer *container, const QString &amp;message, InfoLabel::InfoType type)">
                    <parameter type="Utils::AspectContainer *" name="container" default="nullptr"/>
                    <parameter type="const QString &amp;" name="message" default="{}"/>
                    <parameter type="InfoLabel::InfoType" name="type" default="InfoLabel::None"/>
                </function>
                <function name="addToLayout" fullname="Utils::TextDisplay::addToLayout" href="utils-textdisplay.html#addToLayout" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="892" documented="true" meta="plain" virtual="virtual" override="true" type="void" signature="void addToLayout(Layouting::LayoutItem &amp;parent) override">
                    <parameter type="Layouting::LayoutItem &amp;" name="parent" default=""/>
                </function>
                <function name="setIconType" fullname="Utils::TextDisplay::setIconType" href="utils-textdisplay.html#setIconType" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="894" documented="true" meta="plain" type="void" signature="void setIconType(InfoLabel::InfoType t)">
                    <parameter type="InfoLabel::InfoType" name="t" default=""/>
                </function>
            </class>
            <class name="TextFieldCheckBox" fullname="Utils::TextFieldCheckBox" href="utils-textfieldcheckbox.html" status="active" access="public" location="textfieldcheckbox.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/textfieldcheckbox.h" lineno="13" documented="true" bases="QCheckBox" module="QtCreator" brief="Aheckbox that plays with QWizard::registerField">
                <function name="falseText" fullname="Utils::TextFieldCheckBox::falseText" href="utils-textfieldcheckbox.html#falseText-prop" status="active" access="public" location="textfieldcheckbox.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/textfieldcheckbox.h" lineno="29" meta="plain" const="true" associated-property="falseText" type="QString" signature="QString falseText() const"/>
                <function name="setFalseText" fullname="Utils::TextFieldCheckBox::setFalseText" href="utils-textfieldcheckbox.html#falseText-prop" status="active" access="public" location="textfieldcheckbox.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/textfieldcheckbox.h" lineno="28" meta="plain" associated-property="falseText" type="void" signature="void setFalseText(const QString &amp;t)">
                    <parameter type="const QString &amp;" name="t" default=""/>
                </function>
                <function name="setText" fullname="Utils::TextFieldCheckBox::setText" href="utils-textfieldcheckbox.html#compareText-prop" status="active" access="public" location="textfieldcheckbox.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/textfieldcheckbox.h" lineno="24" meta="plain" associated-property="compareText" type="void" signature="void setText(const QString &amp;s)">
                    <parameter type="const QString &amp;" name="s" default=""/>
                </function>
                <function name="setTrueText" fullname="Utils::TextFieldCheckBox::setTrueText" href="utils-textfieldcheckbox.html#trueText-prop" status="active" access="public" location="textfieldcheckbox.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/textfieldcheckbox.h" lineno="26" meta="plain" associated-property="trueText" type="void" signature="void setTrueText(const QString &amp;t)">
                    <parameter type="const QString &amp;" name="t" default=""/>
                </function>
                <function name="text" fullname="Utils::TextFieldCheckBox::text" href="utils-textfieldcheckbox.html#compareText-prop" status="active" access="public" location="textfieldcheckbox.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/textfieldcheckbox.h" lineno="23" meta="plain" const="true" associated-property="compareText" type="QString" signature="QString text() const"/>
                <function name="trueText" fullname="Utils::TextFieldCheckBox::trueText" href="utils-textfieldcheckbox.html#trueText-prop" status="active" access="public" location="textfieldcheckbox.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/textfieldcheckbox.h" lineno="27" meta="plain" const="true" associated-property="trueText" type="QString" signature="QString trueText() const"/>
            </class>
            <class name="TextFieldComboBox" fullname="Utils::TextFieldComboBox" href="utils-textfieldcombobox.html" status="active" access="public" location="textfieldcombobox.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/textfieldcombobox.h" lineno="13" documented="true" bases="QComboBox" module="QtCreator" brief="Non-editable combo box for text editing purposes that plays with QWizard::registerField (providing a settable 'text' property)">
                <function name="setText" fullname="Utils::TextFieldComboBox::setText" href="utils-textfieldcombobox.html#indexText-prop" status="active" access="public" location="textfieldcombobox.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/textfieldcombobox.h" lineno="22" meta="plain" associated-property="indexText" type="void" signature="void setText(const QString &amp;s)">
                    <parameter type="const QString &amp;" name="s" default=""/>
                </function>
                <function name="text" fullname="Utils::TextFieldComboBox::text" href="utils-textfieldcombobox.html#indexText-prop" status="active" access="public" location="textfieldcombobox.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/textfieldcombobox.h" lineno="21" meta="plain" const="true" associated-property="indexText" type="QString" signature="QString text() const"/>
            </class>
            <class name="TextFileFormat" fullname="Utils::TextFileFormat" href="utils-textfileformat.html" status="active" access="public" location="textfileformat.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/textfileformat.h" lineno="21" documented="true" module="QtCreator" brief="Describes the format of a text file and provides autodetection">
                <function name="decode" fullname="Utils::TextFileFormat::decode" href="utils-textfileformat.html#decode" status="active" access="public" location="textfileformat.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/textfileformat.h" lineno="47" documented="true" meta="plain" const="true" type="bool" signature="bool decode(const QByteArray &amp;data, QString *target) const">
                    <parameter type="const QByteArray &amp;" name="data" default=""/>
                    <parameter type="QString *" name="target" default=""/>
                </function>
                <function name="decode" fullname="Utils::TextFileFormat::decode" href="utils-textfileformat.html#decode-1" status="active" access="public" location="textfileformat.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/textfileformat.h" lineno="48" documented="true" meta="plain" const="true" overload="true" overload-number="1" type="bool" signature="bool decode(const QByteArray &amp;data, QStringList *target) const">
                    <parameter type="const QByteArray &amp;" name="data" default=""/>
                    <parameter type="QStringList *" name="target" default=""/>
                </function>
                <function name="decodingErrorSample" fullname="Utils::TextFileFormat::decodingErrorSample" href="utils-textfileformat.html#decodingErrorSample" status="active" access="public" location="textfileformat.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/textfileformat.h" lineno="63" documented="true" meta="plain" static="true" type="QByteArray" signature="QByteArray decodingErrorSample(const QByteArray &amp;data)">
                    <parameter type="const QByteArray &amp;" name="data" default=""/>
                </function>
                <function name="detect" fullname="Utils::TextFileFormat::detect" href="utils-textfileformat.html#detect" status="active" access="public" location="textfileformat.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/textfileformat.h" lineno="45" documented="true" meta="plain" static="true" type="Utils::TextFileFormat" signature="Utils::TextFileFormat detect(const QByteArray &amp;data)">
                    <parameter type="const QByteArray &amp;" name="data" default=""/>
                </function>
                <function name="readFile" fullname="Utils::TextFileFormat::readFile" href="utils-textfileformat.html#readFile" status="active" access="public" location="textfileformat.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/textfileformat.h" lineno="50" documented="true" meta="plain" static="true" type="Utils::TextFileFormat::ReadResult" signature="Utils::TextFileFormat::ReadResult readFile(const Utils::FilePath &amp;filePath, const QTextCodec *defaultCodec, QStringList *plainTextList, Utils::TextFileFormat *format, QString *errorString, QByteArray *decodingErrorSample)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                    <parameter type="const QTextCodec *" name="defaultCodec" default=""/>
                    <parameter type="QStringList *" name="plainTextList" default=""/>
                    <parameter type="Utils::TextFileFormat *" name="format" default=""/>
                    <parameter type="QString *" name="errorString" default=""/>
                    <parameter type="QByteArray *" name="decodingErrorSample" default="nullptr"/>
                </function>
                <function name="readFile" fullname="Utils::TextFileFormat::readFile" href="utils-textfileformat.html#readFile-1" status="active" access="public" location="textfileformat.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/textfileformat.h" lineno="53" documented="true" meta="plain" static="true" overload="true" overload-number="1" type="Utils::TextFileFormat::ReadResult" signature="Utils::TextFileFormat::ReadResult readFile(const Utils::FilePath &amp;filePath, const QTextCodec *defaultCodec, QString *plainText, Utils::TextFileFormat *format, QString *errorString, QByteArray *decodingErrorSample)">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                    <parameter type="const QTextCodec *" name="defaultCodec" default=""/>
                    <parameter type="QString *" name="plainText" default=""/>
                    <parameter type="Utils::TextFileFormat *" name="format" default=""/>
                    <parameter type="QString *" name="errorString" default=""/>
                    <parameter type="QByteArray *" name="decodingErrorSample" default="nullptr"/>
                </function>
                <function name="writeFile" fullname="Utils::TextFileFormat::writeFile" href="utils-textfileformat.html#writeFile" status="active" access="public" location="textfileformat.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/textfileformat.h" lineno="61" documented="true" meta="plain" const="true" type="bool" signature="bool writeFile(const Utils::FilePath &amp;filePath, QString plainText, QString *errorString) const">
                    <parameter type="const Utils::FilePath &amp;" name="filePath" default=""/>
                    <parameter type="QString" name="plainText" default=""/>
                    <parameter type="QString *" name="errorString" default=""/>
                </function>
            </class>
            <class name="ToggleAspect" fullname="Utils::ToggleAspect" href="utils-toggleaspect.html" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="466" documented="true" bases="Utils::BoolAspect" module="QtCreator" brief="A toggle aspect is a boolean property of some object, together with a description of its behavior for common operations like visualizing or persisting. It also contains independent tooltips, icons and text for the action() according to the on / off state of the aspect"/>
            <class name="TreeModel" fullname="Utils::TreeModel" href="utils-treemodel.html" status="active" access="public" location="treemodel.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/treemodel.h" lineno="269" documented="true" bases="Utils::BaseTreeModel" module="QtCreator" brief="Convienience base class for models to use in a QTreeView"/>
            <class name="TreeView" fullname="Utils::TreeView" href="utils-treeview.html" status="active" access="public" location="itemviews.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/itemviews.h" lineno="80" documented="true" bases="Utils::View" module="QtCreator" brief="Adds setActivationMode to QTreeView to allow for single click/double click behavior on platforms where the default is different. Use with care"/>
            <class name="TreeWidget" fullname="Utils::TreeWidget" href="utils-treewidget.html" status="active" access="public" location="itemviews.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs\utils/itemviews.h" lineno="86" documented="true" bases="Utils::View" module="QtCreator" brief="Adds setActivationMode to QTreeWidget to allow for single click/double click behavior on platforms where the default is different. Use with care"/>
            <class name="TriStateAspect" fullname="Utils::TriStateAspect" href="utils-tristateaspect.html" status="active" access="public" location="aspects.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/aspects.h" lineno="802" documented="true" bases="Utils::SelectionAspect" module="QtCreator" brief="A tristate aspect is a property of some object that can have three values: enabled, disabled, and unspecified"/>
            <class name="VariableChooser" fullname="Utils::VariableChooser" href="utils-variablechooser.html" status="active" access="public" location="variablechooser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/variablechooser.h" lineno="20" documented="true" bases="QWidget" module="QtCreator" brief="Used to add a tool window for selecting Qt Creator variables to line edits, text edits or plain text edits">
                <function name="VariableChooser" fullname="Utils::VariableChooser::VariableChooser" href="utils-variablechooser.html#VariableChooser" status="active" access="public" location="variablechooser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/variablechooser.h" lineno="23" documented="true" meta="constructor" explicit="true" signature="VariableChooser(QWidget *parent)">
                    <parameter type="QWidget *" name="parent" default="nullptr"/>
                </function>
                <function name="addMacroExpanderProvider" fullname="Utils::VariableChooser::addMacroExpanderProvider" href="utils-variablechooser.html#addMacroExpanderProvider" status="active" access="public" location="variablechooser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/variablechooser.h" lineno="26" documented="true" meta="plain" type="void" signature="void addMacroExpanderProvider(const Utils::MacroExpanderProvider &amp;provider)">
                    <parameter type="const Utils::MacroExpanderProvider &amp;" name="provider" default=""/>
                </function>
                <function name="addSupportedWidget" fullname="Utils::VariableChooser::addSupportedWidget" href="utils-variablechooser.html#addSupportedWidget" status="active" access="public" location="variablechooser.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/variablechooser.h" lineno="27" documented="true" meta="plain" type="void" signature="void addSupportedWidget(QWidget *textcontrol, const QByteArray &amp;ownName)">
                    <parameter type="QWidget *" name="textcontrol" default=""/>
                    <parameter type="const QByteArray &amp;" name="ownName" default="QByteArray()"/>
                </function>
            </class>
            <class name="Wizard" fullname="Utils::Wizard" href="utils-wizard.html" status="active" access="public" location="wizard.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/wizard.h" lineno="18" documented="true" bases="QWizard" module="QtCreator" brief="Implements a wizard with a progress bar on the left">
                <function name="isAutomaticProgressCreationEnabled" fullname="Utils::Wizard::isAutomaticProgressCreationEnabled" href="utils-wizard.html#automaticProgressCreationEnabled-prop" status="active" access="public" location="wizard.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/wizard.h" lineno="27" meta="plain" const="true" associated-property="automaticProgressCreationEnabled" type="bool" signature="bool isAutomaticProgressCreationEnabled() const"/>
                <function name="setAutomaticProgressCreationEnabled" fullname="Utils::Wizard::setAutomaticProgressCreationEnabled" href="utils-wizard.html#automaticProgressCreationEnabled-prop" status="active" access="public" location="wizard.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/wizard.h" lineno="28" meta="plain" associated-property="automaticProgressCreationEnabled" type="void" signature="void setAutomaticProgressCreationEnabled(bool enabled)">
                    <parameter type="bool" name="enabled" default=""/>
                </function>
            </class>
            <class name="WizardPage" fullname="Utils::WizardPage" href="utils-wizardpage.html" status="active" access="public" location="wizardpage.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/wizardpage.h" lineno="51" documented="true" bases="QWizardPage" module="QtCreator" brief="QWizardPage with a couple of improvements"/>
            <enum name="FindFlag" fullname="Utils::FindFlag" href="utils.html#FindFlag-enum" status="active" access="public" location="filesearch.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/filesearch.h" lineno="25" documented="true" typedef="Utils::FindFlags">
                <value name="FindBackward" value="0x01"/>
                <value name="FindCaseSensitively" value="0x02"/>
                <value name="FindWholeWords" value="0x04"/>
                <value name="FindRegularExpression" value="0x08"/>
                <value name="FindPreserveCase" value="0x10"/>
            </enum>
            <enum name="ProgressIndicatorSize" fullname="Utils::ProgressIndicatorSize" href="utils.html#ProgressIndicatorSize-enum" status="active" access="public" location="progressindicator.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/progressindicator.h" lineno="17" documented="true" scoped="true">
                <value name="Small" value="0"/>
                <value name="Medium" value="1"/>
                <value name="Large" value="2"/>
            </enum>
            <typedef name="FindFlags" fullname="Utils::FindFlags" href="utils.html#FindFlag-enum" status="active" access="public" location="filesearch.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/filesearch.h" lineno="32" enum="Utils::FindFlag"/>
            <typedef name="LanguageExtensions" fullname="Utils::LanguageExtensions" href="utils.html#LanguageExtension-enum" status="active" access="public" location="cpplanguage_details.h" filepath="C:/Users/qt/work/build/qt-creator/src/libs/utils/cpplanguage_details.h" lineno="70" enum="Utils::LanguageExtension"/>
        </namespace>
        <page name="qtcreator-documentation.html" href="qtcreator-documentation.html" status="active" location="qtcreator-documentation.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/qtcreator-documentation.qdoc" lineno="4" documented="true" subtype="page" title="Writing Documentation" fulltitle="Writing Documentation" subtitle="">
            <contents name="configuring-documentation-projects" title="Configuring Documentation Projects" level="1"/>
            <contents name="creating-folders-and-files" title="Creating Folders and Files" level="1"/>
            <contents name="integrating-topics-to-documentation" title="Integrating Topics to Documentation" level="1"/>
            <contents name="showing-and-hiding-information" title="Showing and Hiding Information" level="2"/>
            <contents name="excluding-source-files-from-qt-design-studio-manual-builds" title="Excluding Source Files from Qt Design Studio Manual Builds" level="3"/>
            <contents name="hiding-text-from-html-files" title="Hiding Text from HTML Files" level="3"/>
            <contents name="writing-about-qt-design-studio-specific-features" title="Writing About Qt Design Studio Specific Features" level="3"/>
            <contents name="updating-next-and-previous-links" title="Updating Next and Previous Links" level="2"/>
            <contents name="adding-documentation-for-independent-plugins" title="Adding Documentation for Independent Plugins" level="1"/>
            <contents name="writing-text" title="Writing Text" level="1"/>
            <contents name="capitalizing-headings" title="Capitalizing Headings" level="2"/>
            <contents name="using-images" title="Using Images" level="1"/>
            <contents name="icons" title="Icons" level="2"/>
            <contents name="saving-images" title="Saving Images" level="2"/>
            <contents name="linking-to-youtube-videos" title="Linking to Youtube Videos" level="2"/>
            <contents name="building-documentation" title="Building Documentation" level="1"/>
            <contents name="setting-up-documentation-builds" title="Setting Up Documentation Builds" level="2"/>
            <contents name="using-cmake" title="Using CMake" level="3"/>
            <contents name="additional-build-commands" title="Additional Build Commands" level="2"/>
        </page>
        <group name="mainclasses" href="mainclasses.html" status="internal" seen="false" title=""/>
        <group name="solutions-modules" href="solutions-modules.html" status="internal" seen="false" title=""/>
        <module name="Qt Creator" href="qt-creator-module.html" status="internal" seen="false" title=""/>
        <module name="QtCreator" href="qtcreator-module.html" status="active" location="qtcreator-module.qdoc" filepath="C:/Users/qt/work/build/qt-creator/doc/qtcreatordev/src/qtcreator-module.qdoc" lineno="143" documented="true" seen="true" title="Qt Creator C++ Classes"/>
        <module name="SpinnerSolution" href="spinnersolution-module.html" status="active" documented="true" groups="solutions-modules" seen="true" title="Spinner Solution" brief="Contains a Spinner solution"/>
        <module name="TaskingSolution" href="taskingsolution-module.html" status="active" documented="true" groups="solutions-modules" seen="true" title="Tasking Solution" brief="Contains a general purpose Tasking solution"/>
    </namespace>
</INDEX>
